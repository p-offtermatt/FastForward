# Makefile.in generated by automake 1.13.4 from Makefile.am.
# tests/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#============================================================================#
# AUTOTEST MAKEFILE                                                          #
# skeleton written by Niels Lohmann <niels.lohmann@uni-rostock.de>           #
#============================================================================#

# This Makefile organizes the generation of the test suite, the code coverage
# and the packaging of the tests. It consists of three parts, of which you
# need to change the first if you want to add test files and the second if
# you want to exclude files from the test case coverage (very seldomly). The
# last part is generic and you must not change it.

#--------------------#
# Part 1: Test Files #
#--------------------#

#--------------#
# GNU autotest #
#--------------#

am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/lola
pkgincludedir = $(includedir)/lola
pkglibdir = $(libdir)/lola
pkglibexecdir = $(libexecdir)/lola
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
DIST_COMMON = $(top_srcdir)/m4/Makefile.tests $(srcdir)/Makefile.in \
	$(srcdir)/Makefile.am $(srcdir)/package.m4.in \
	$(srcdir)/cover.sh.in
subdir = tests
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_check_compile_flag.m4 \
	$(top_srcdir)/m4/ax_pthread.m4 $(top_srcdir)/m4/st_autotest.m4 \
	$(top_srcdir)/m4/st_basic.m4 $(top_srcdir)/m4/st_verbose.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/config.h
CONFIG_CLEAN_FILES = package.m4 cover.sh
CONFIG_CLEAN_VPATH_FILES =
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
SOURCES =
DIST_SOURCES =
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/local/USHERBROOKE/offp3001/git/a_star/dependencies/lola/build-aux/missing aclocal-1.13
ALLOCA = 
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AUTOCONF = ${SHELL} /home/local/USHERBROOKE/offp3001/git/a_star/dependencies/lola/build-aux/missing autoconf
AUTOHEADER = ${SHELL} /home/local/USHERBROOKE/offp3001/git/a_star/dependencies/lola/build-aux/missing autoheader
AUTOM4TE = ${SHELL} /home/local/USHERBROOKE/offp3001/git/a_star/dependencies/lola/build-aux/missing autom4te
AUTOMAKE = ${SHELL} /home/local/USHERBROOKE/offp3001/git/a_star/dependencies/lola/build-aux/missing automake-1.13
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS =  -O4 -Ofast -pthread
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -D NDEBUG -O4 -Ofast -pthread
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GENGETOPT = ${SHELL} /home/local/USHERBROOKE/offp3001/git/a_star/dependencies/lola/build-aux/missing gengetopt
GREP = /bin/grep
HELP2MAN = ${SHELL} /home/local/USHERBROOKE/offp3001/git/a_star/dependencies/lola/build-aux/missing help2man
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
KC = ${SHELL} /home/local/USHERBROOKE/offp3001/git/a_star/dependencies/lola/build-aux/missing kc++
LCOV = ${SHELL} /home/local/USHERBROOKE/offp3001/git/a_star/dependencies/lola/build-aux/missing lcov
LCOV_GENDESC = ${SHELL} /home/local/USHERBROOKE/offp3001/git/a_star/dependencies/lola/build-aux/missing gendesc
LCOV_GENHTML = ${SHELL} /home/local/USHERBROOKE/offp3001/git/a_star/dependencies/lola/build-aux/missing genhtml
LDFLAGS = 
LEX = flex
LEXLIB = -lfl
LEX_OUTPUT_ROOT = lex.yy
LIBOBJS = 
LIBS =  
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/local/USHERBROOKE/offp3001/git/a_star/dependencies/lola/build-aux/missing makeinfo
MKDIR_P = /bin/mkdir -p
OBJEXT = o
PACKAGE = lola
PACKAGE_BUGREPORT = lola@service-technology.org
PACKAGE_NAME = LoLA
PACKAGE_STRING = LoLA 2.0
PACKAGE_TARNAME = lola
PACKAGE_URL = http://service-technology.org/lola
PACKAGE_VERSION = 2.0
PATH_SEPARATOR = :
PTHREAD_CC = gcc
PTHREAD_CFLAGS = -pthread
PTHREAD_LIBS = 
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
VALGRIND = not found
VERSION = 2.0
VERSION_SVN = Unversioned directory
YACC = bison -y
YFLAGS = 
abs_builddir = /home/local/USHERBROOKE/offp3001/git/a_star/dependencies/lola/tests
abs_srcdir = /home/local/USHERBROOKE/offp3001/git/a_star/dependencies/lola/tests
abs_top_builddir = /home/local/USHERBROOKE/offp3001/git/a_star/dependencies/lola
abs_top_srcdir = /home/local/USHERBROOKE/offp3001/git/a_star/dependencies/lola
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
ax_pthread_config = 
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/local/USHERBROOKE/offp3001/git/a_star/dependencies/lola/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..

# If you want to use a new test file in a test case, proceed as follows:
# 1. Edit the file `testsuite.at' and add your test case
# 2. Add the files you need for the test to the `testfile' directory.
# 3. Add these files (without path) to the `TESTFILES' list.
# 4. Add the file to the SVN repository.
TESTFILES = Kanban5.pnml.lola Kanban5.5safe.pnml.lola 4state.lola \
            eratosthenes-020.pnml.lola garavel.lola garavel.task process.lola \
            phils2.lola phils5.lola phils10.lola phils1000.lola phils10000.lola \
            phils5dld.lola phils10dld.lola tscc.lola \
            ResAllocation-PT-R003C002-CTLCardinality-1.task ResAllocation-PT-R003C002.lola \
            syntax_min.lola syntax_full.lola syntax_utf8.lola \
            test_significant.lola philsinitial.task philsunreach.task philsunsat.task \
            m.lola philpos.task planner.lola LTL/cycle.lola LTL/cycle2.lola LTL/cycle3.lola\
            LTL/cycle4.lola LTL/cycle5.lola LTL/cycle6.lola LTL/simple.buechi LTL/cycleprop.buechi\
            LTL/cycle_weak1.lola LTL/cycle_weak2.lola LTL/cycle_weak3.lola LTL/cycle_weak4.lola \
            LTL/phils5dld.buechi LTL/fork1.buechi LTL/phils5disjunction.buechi LTL/phils5negation.buechi  \
            LTL/cyclecheck.buechi LTL/phils5inifirefail.buechi LTL/empty.buechi \
            LTL/phils5implyequiv.buechi LTL/phils5exdisjunction.buechi LTL/phils5unequal.buechi \
            LTL/phils5calc.buechi LTL/phils5erracceptingset.buechi LTL/phils5markingerror.buechi \
            LTL/phils5lgequals.buechi LTL/phils5inifire.buechi LTL/unkownstate.buechi \
            LTL/cycleFG.buechi LTL/cycle2FG.buechi LTL/cycle2U.buechi LTL/cycleGF.buechi LTL/cycleU.buechi \
            CTL/phils-AX.task CTL/phils-EX.task CTL/phils-TemporalConjunction.task \
            CTL/phils-TemporalDisjunction.task CTL/phils-complex.task \
            echo-d3r3.name.lola largenet.lola unbounded.lola unbounded2.lola \
            unbounded3.lola covergraph_signum.lola unboundeddeadlock.lola \
            Eratosthenes-PT-010-ReachabilityCardinality-10.task \
            Eratosthenes-PT-010-ReachabilityCardinality-3.task \
            Eratosthenes-PT-010-ReachabilityCardinality-8.task \
            Eratosthenes-PT-010-model.pnml.lola \
	    CSRepetitions-COL-02-CTLCardinality-3.task \
	    CSRepetitions-COL-02-model.pnml.lola \
	    hajdu2015_distant3.lola \
	    Philosophers_1000_Sara_vs_Lola_parallel.lola \
	    SwimmingPool-PT-01.lola


#-----------------------------------------#
# Part 2: Exclusions for the Cover Script #
#-----------------------------------------#

# Below you can list all the files you do not want to have counted in the
# coverability report that can be created by calling "make cover". Usually,
# these files are generated code or helper libraries that have not much to
# do with your tool.
# Absolute filenames are expected, but you may use '*' as wildcard. For
# example '*/libs/*' ignores everything in the 'libs' directory and
# '*/cmdline.c' will exclude any file in the sources called 'cmdline.c'.
NO_COVER_FILES = */cmdline.c */ast-system-* */Frontend/Parser/Lexic*.cc */Frontend/Parser/ast-* */Frontend/Parser/ParserNet.cc */Frontend/Parser/ParserFormula.cc */Frontend/Parser/ParserBuechi.cc */InputOutput/JSON.*
TESTSUITE = $(builddir)/testsuite
EXTRA_DIST = testsuite.at wrap.sh $(addprefix testfiles/,$(TESTFILES))
DISTCLEANFILES = atconfig package.m4 $(TESTSUITE)

# clean also the temp files in the src directory
CLEANFILES = -fr cover descriptions 
MAINTAINERCLEANFILES = -fr cover-html
all: all-am

.SUFFIXES:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/m4/Makefile.tests $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnits tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnits tests/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/m4/Makefile.tests:

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
package.m4: $(top_builddir)/config.status $(srcdir)/package.m4.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
cover.sh: $(top_builddir)/config.status $(srcdir)/cover.sh.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
tags TAGS:

ctags CTAGS:

cscope cscopelist:


distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-local
check: check-am
all-am: Makefile
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-generic clean-local mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-generic

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic \
	maintainer-clean-local

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: all all-am check check-am check-local clean clean-generic \
	clean-local cscopelist-am ctags-am distclean distclean-generic \
	distdir dvi dvi-am html html-am info info-am install \
	install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic \
	maintainer-clean-local mostlyclean mostlyclean-generic pdf \
	pdf-am ps ps-am tags-am uninstall uninstall-am


# run the test suite when calling "make check"
check-local: atconfig $(TESTSUITE)
	$(AM_V_at)$(SHELL) '$(TESTSUITE)' $(TESTSUITEFLAGS)

# clean the test results on "make clean"
clean-local:
	test ! -f '$(TESTSUITE)' || $(SHELL) '$(TESTSUITE)' --clean

# call a specific test set by keyword (e.g. "make check-basic")
check-%: atconfig $(TESTSUITE)
	$(AM_V_at)$(SHELL) '$(TESTSUITE)' $(TESTSUITEFLAGS) --keywords=$*

# create the testsuite using autom4te
$(TESTSUITE): $(srcdir)/testsuite.at package.m4
	$(AM_V_GEN)$(AUTOM4TE) --language=autotest -I '$(srcdir)' -o $@.tmp $@.at
	$(AM_V_at)mv $@.tmp $@

#---------------#
# Test coverage #
#---------------#

cover: cover-html

cover-html: cover-collect descriptions
	$(LCOV_GENHTML) --title "$(PACKAGE_STRING)" cover.info \
		--ignore-errors source --sort --description-file descriptions \
		--show-details --legend --demangle-cpp --prefix $(abs_top_builddir) \
		--output-directory cover-html
	@echo see `pwd`/cover-html/index.html for a coverage report

# This script is suboptimal in the sense that the names of the test cases may
# be repeated in the HTML output. Furthermore, it is unclear what use the test
# descriptions have as it is not possible to filter for a specific test case.
descriptions: $(TESTSUITE)
	$(SHELL) '$(TESTSUITE)' -l > descriptions.txt
	$(SED) -i '1,5d;n;d;' descriptions.txt
	$(SED) -i 's/:[ \t]*testsuite.at:[0-9]*[ \t]*/ /;s/^[ \t]*//' descriptions.txt
	$(SED) -i 's/ /\n\t/' descriptions.txt
	$(LCOV_GENDESC) descriptions.txt -o descriptions1
	cp descriptions1 descriptions10
	cp descriptions1 descriptions100
	$(SED) -i 's/^TN: \([1-9]\)$$/TN: 0\1/' descriptions10
	$(SED) -i 's/^TN: \([1-9]\)$$/TN: 00\1/' descriptions100
	$(SED) -i 's/^TN: \([1-9][1-9]\)$$/TN: 0\1/' descriptions100
	cat descriptions1 descriptions10 descriptions100 > descriptions
	rm descriptions1 descriptions10 descriptions100 descriptions.txt

# Generate coverage data for all test cases, delete empty results, combine all
# results in one file ("cover.info"), and filter any unwanted file (controlled
# with variable NO_COVER_FILES in file tests/Makefile.am). lcov is called just
# to provoke an error message if it is not found by the configure script. In
# that case, the Automake's "missing" script handles the error message.
cover-collect: cover-check
	$(LCOV) -v >/dev/null
	$(AM_V_at) $(MAKE) $(patsubst %,%.info, $(wildcard cover/*))
	$(AM_V_at) find cover/*.info -type f -size 0 -exec rm -v {} \;
	$(AM_V_at) $(LCOV) -o cover.info `for F in \`ls cover/*.info\`; do echo "-a $$F"; done | xargs`
	$(AM_V_at) $(LCOV) --quiet --remove cover.info $(addprefix ",$(addsuffix ", $(NO_COVER_FILES))) -o cover.info

# This target creates for each test case a directory in which coverage data is
# collected. This is done by the tests/cover.sh script. It does not call lcov to
# process the data.
cover-check: cover-compile $(TESTSUITE)
	test ! -d cover || rm -fr cover
	$(MKDIR_P) cover
	-$(SHELL) '$(TESTSUITE)' $(TESTSUITEFLAGS) COVER=YES

# Actually calls the configure script to set flags for the C/C++ compiler
# and the linker. Note that assertions and optimizations are switched off. Then
# cleans the build and recompiles.
cover-compile:
	cd $(top_srcdir) ; LDFLAGS="--coverage" LIBS="-lgcov" CXXFLAGS="--coverage -O0" CFLAGS="--coverage -O0" CPPFLAGS="-DNDEBUG" ./configure --enable-debug
	$(MAKE) --directory=$(top_srcdir) clean all

# First copies .gcno files to the directory of and then executes lcov.
cover/%.info:
	$(AM_V_GEN)
	-$(AM_V_at) \
	TESTCASE=`echo $@ | sed 's|cover/||;s|.info||'` ; \
    TESTNAME=`echo $$TESTCASE | awk -F- '{print $$1}'` ; \
	find $(abs_top_builddir)/src -type f -name '*.gcno' -exec cp '{}' cover/$$TESTCASE \; ; \
    $(LCOV) --quiet --capture --directory cover/$$TESTCASE \
		--base-directory $(top_srcdir)/src --derive-func-data \
		--no-external --test-name $$TESTNAME \
		--output-file cover/$$TESTCASE.info
maintainer-clean-local:
	find $(top_builddir) -name *.gcov -o -name *.gcno -o -name *.gcda -delete

#--------------------------------------------------------#
# Part 3: Generics -- YOU MUST NOT CHANGE ANYTHING BELOW #
#--------------------------------------------------------#

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
