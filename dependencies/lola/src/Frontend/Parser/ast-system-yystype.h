#ifndef YYSTYPE_HEADER
#define YYSTYPE_HEADER
union KC_YYSTYPE {
    kc::nocasestring yt_nocasestring;
    kc::casestring yt_casestring;
    kc::real yt_real;
    kc::integer yt_integer;
    kc::voidptr yt_voidptr;
    kc::tFormula yt_tFormula;
    kc::tStatePredicate yt_tStatePredicate;
    kc::tConjunction_list yt_tConjunction_list;
    kc::tDisjunction_list yt_tDisjunction_list;
    kc::tAtomicProposition yt_tAtomicProposition;
    kc::tTerm yt_tTerm;
    kc::tProduct_list yt_tProduct_list;
    kc::tBuechiAutomata yt_tBuechiAutomata;
    kc::tBuechiRules yt_tBuechiRules;
    kc::tTransitionRules yt_tTransitionRules;
    kc::tAcceptingSet yt_tAcceptingSet;
    kc::net yt_net;
    kc::definitionsList yt_definitionsList;
    kc::definitions yt_definitions;
    kc::type yt_type;
    kc::optionalNumber yt_optionalNumber;
    kc::identList yt_identList;
    kc::idents yt_idents;
    kc::structTypeList yt_structTypeList;
    kc::structType yt_structType;
    kc::varOrArray yt_varOrArray;
    kc::arrayList yt_arrayList;
    kc::functionParametersList yt_functionParametersList;
    kc::functionParameters yt_functionParameters;
    kc::expression yt_expression;
    kc::leftvalue yt_leftvalue;
    kc::expressionlist yt_expressionlist;
    kc::initializerList yt_initializerList;
    kc::expressionListColon yt_expressionListColon;
    kc::placeblocklist yt_placeblocklist;
    kc::optSafe yt_optSafe;
    kc::place yt_place;
    kc::placelist yt_placelist;
    kc::placeblock yt_placeblock;
    kc::marking yt_marking;
    kc::transition yt_transition;
    kc::fairness yt_fairness;
    kc::variable yt_variable;
    kc::varOrArrayList yt_varOrArrayList;
    kc::guard yt_guard;
    kc::identExprList yt_identExprList;
    kc::block yt_block;
    kc::declarationOrStatement yt_declarationOrStatement;
    kc::declaration yt_declaration;
    kc::statement yt_statement;
    kc::switchCase yt_switchCase;
    kc::switchCaseList yt_switchCaseList;
};
#define YYSTYPE KC_YYSTYPE
#endif // YYSTYPE_HEADER
