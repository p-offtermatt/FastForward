#define SIZE short
#define NEXT(x) (x+1) % N

chan m1[N] = [1] of { SIZE };
chan m2[N] = [1] of { SIZE };

SIZE leader = 0;

active [N] proctype p() {
    SIZE rec;
    SIZE left;
    SIZE max;
l:  max = _pid;
    left = 0;
    m1[NEXT(_pid)] ! max;
    do
    :: m1[_pid]?rec ->
        if
        :: max != rec ->
            m2[NEXT(_pid)] ! rec;
            left = rec;
        :: else ->
            int i;
progress:   leader = max + 1;
            // reset
            leader = 0;
            goto l;
        fi
    :: m2[_pid]?rec ->
        if
        :: left > rec && left > max ->
            max = left
            m1[NEXT(_pid)] ! max;
        :: else ->
            goto pa;
        fi
    od
pa: do
    :: m1[_pid]?rec ->
        m1[NEXT(_pid)] ! rec;
    :: m2[_pid]?rec ->
        m2[NEXT(_pid)] ! rec;
    :: leader > 0 ->
        goto l;
    od
}
