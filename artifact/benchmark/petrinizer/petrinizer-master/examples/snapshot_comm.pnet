petri net "snapshot 2" {
    places {
        white1 red1 sent1 notsent1 sample1 nosample1
        white2 red2 sent2 notsent2 sample2 nosample2
    }
    transitions {
        init1 send1white2 send1red2 comm1red // comm1white
        init2 send2white1 send2red1 comm2red // comm2white
        snapshot nosnapshot1 nosnapshot2
    }
    arcs {
        // white1 -> comm1white -> white1
        { red1, sent1 } -> comm1red -> { red1, sent1 }
        { white1, nosample1 } -> init1 -> { red1, sample1 }
        { red1, notsent1, white2, nosample2 } -> send1white2 -> { red1, sent1, red2, sample2 }
        { red1, notsent1, red2 } -> send1red2 -> { red1, sent1, red2 }

        // white2 -> comm2white -> white2
        { red2, sent2 } -> comm2red -> { red2, sent2 }
        { white2, nosample2 } -> init2 -> { red2, sample2 }
        { red2, notsent2, white2, nosample1 } -> send2white1 -> { red2, sent2, red1, sample1 }
        { red2, notsent2, red1 } -> send2red1 -> { red2, sent2, red1 }

        { sample1, sample2, red1, red2, sent1, sent2 } -> snapshot -> { white1, white2, notsent1, notsent2, nosample1, nosample2 }
        nosample1 -> nosnapshot1 -> nosample1
        nosample2 -> nosnapshot2 -> nosample2
    }
    initial {
        white1 notsent1 nosample1
        white2 notsent2 nosample2
    }
}
safety property "one sample" {
    sample1 > 1 || sample2 > 1
}
liveness property "snapshot taken" {
init1 + send1white2 + send1red2 + comm1red > 0 &&
init2 + send2white1 + send2red1 + comm2red > 0 &&
init1 + send1white2 + send1red2 + comm1red > 0 &&
init2 + send2white1 + send2red1 + comm2red > 0 &&
init1 + send1white2 + send1red2 + comm1red > 0 &&
init2 + send2white1 + send2red1 + comm2red > 0 &&
init1 + send1white2 + send1red2 + comm1red > 0 &&
init2 + send2white1 + send2red1 + comm2red > 0 &&
snapshot + nosnapshot1 + nosnapshot2 > 0 &&
snapshot = 0
}
