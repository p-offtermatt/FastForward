PLACE
	boolean,
	cern.colt.matrix.DoubleMatrix2D,
	cern.colt.matrix.linalg.SingularValueDecomposition,
	cern.jet.random.engine.RandomEngine,
	com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction,
	com.opengamma.analytics.math.Axis,
	com.opengamma.analytics.math.Axis[],
	com.opengamma.analytics.math.ComplexMathUtils,
	com.opengamma.analytics.math.MathException,
	com.opengamma.analytics.math.Plane,
	com.opengamma.analytics.math.Plane[],
	com.opengamma.analytics.math.TrigonometricFunctionUtils,
	com.opengamma.analytics.math.cube.ConstantCubeAdditiveShiftFunction,
	com.opengamma.analytics.math.cube.ConstantCubeMultiplicativeShiftFunction,
	com.opengamma.analytics.math.cube.ConstantDoublesCube,
	com.opengamma.analytics.math.cube.Cube,
	com.opengamma.analytics.math.cube.CubeShiftFunction,
	com.opengamma.analytics.math.cube.CubeShiftFunctionFactory,
	com.opengamma.analytics.math.cube.CubeSliceFunction,
	com.opengamma.analytics.math.cube.DoublesCube,
	com.opengamma.analytics.math.cube.FunctionalCubeAdditiveShiftFunction,
	com.opengamma.analytics.math.cube.FunctionalCubeAdditiveShiftFunction$1,
	com.opengamma.analytics.math.cube.FunctionalCubeMultiplicativeShiftFunction,
	com.opengamma.analytics.math.cube.FunctionalCubeMultiplicativeShiftFunction$1,
	com.opengamma.analytics.math.cube.FunctionalDoublesCube,
	com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction,
	com.opengamma.analytics.math.cube.InterpolatedCubeMultiplicativeShiftFunction,
	com.opengamma.analytics.math.cube.InterpolatedDoublesCube,
	com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction,
	com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube,
	com.opengamma.analytics.math.cube.NodalCube,
	com.opengamma.analytics.math.cube.NodalCubeAdditiveShiftFunction,
	com.opengamma.analytics.math.cube.NodalCubeMultiplicativeShiftFunction,
	com.opengamma.analytics.math.cube.NodalDoublesCube,
	com.opengamma.analytics.math.curve.AddCurveSpreadFunction,
	com.opengamma.analytics.math.curve.AddCurveSpreadFunction$1,
	com.opengamma.analytics.math.curve.ArraysDoublesCurve,
	com.opengamma.analytics.math.curve.ArraysDoublesCurve$Meta,
	com.opengamma.analytics.math.curve.ConstantCurveShiftFunction,
	com.opengamma.analytics.math.curve.ConstantDoublesCurve,
	com.opengamma.analytics.math.curve.ConstantDoublesCurve$Meta,
	com.opengamma.analytics.math.curve.Curve,
	com.opengamma.analytics.math.curve.Curve$1,
	com.opengamma.analytics.math.curve.Curve$Meta,
	com.opengamma.analytics.math.curve.CurveShiftFunction,
	com.opengamma.analytics.math.curve.CurveShiftFunctionFactory,
	com.opengamma.analytics.math.curve.CurveSpreadFunction,
	com.opengamma.analytics.math.curve.Curve[],
	com.opengamma.analytics.math.curve.DivideCurveSpreadFunction,
	com.opengamma.analytics.math.curve.DivideCurveSpreadFunction$1,
	com.opengamma.analytics.math.curve.DoublesCurve,
	com.opengamma.analytics.math.curve.DoublesCurve$Meta,
	com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor,
	com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor$Meta,
	com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel,
	com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel$Meta,
	com.opengamma.analytics.math.curve.DoublesCurve[],
	com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction,
	com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction$1,
	com.opengamma.analytics.math.curve.FunctionalDoublesCurve,
	com.opengamma.analytics.math.curve.FunctionalDoublesCurve$Meta,
	com.opengamma.analytics.math.curve.InterpolatedCurveBuildingFunction,
	com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction,
	com.opengamma.analytics.math.curve.InterpolatedDoublesCurve,
	com.opengamma.analytics.math.curve.InterpolatedDoublesCurve$Meta,
	com.opengamma.analytics.math.curve.MultiplyCurveSpreadFunction,
	com.opengamma.analytics.math.curve.MultiplyCurveSpreadFunction$1,
	com.opengamma.analytics.math.curve.NodalDoublesCurve,
	com.opengamma.analytics.math.curve.NodalDoublesCurve$Meta,
	com.opengamma.analytics.math.curve.NodalObjectsCurve,
	com.opengamma.analytics.math.curve.NodalObjectsCurve$Meta,
	com.opengamma.analytics.math.curve.NodalTenorDoubleCurve,
	com.opengamma.analytics.math.curve.NodalTenorDoubleCurve$Meta,
	com.opengamma.analytics.math.curve.ObjectsCurve,
	com.opengamma.analytics.math.curve.ObjectsCurve$Meta,
	com.opengamma.analytics.math.curve.SpreadCurveShiftFunction,
	com.opengamma.analytics.math.curve.SpreadDoublesCurve,
	com.opengamma.analytics.math.curve.SpreadDoublesCurve$Meta,
	com.opengamma.analytics.math.curve.SubtractCurveSpreadFunction,
	com.opengamma.analytics.math.curve.SubtractCurveSpreadFunction$1,
	com.opengamma.analytics.math.differentiation.Differentiator,
	com.opengamma.analytics.math.differentiation.FiniteDifferenceType,
	com.opengamma.analytics.math.differentiation.FiniteDifferenceType[],
	com.opengamma.analytics.math.differentiation.MatrixFieldFirstOrderDifferentiator,
	com.opengamma.analytics.math.differentiation.MatrixFieldFirstOrderDifferentiator$1,
	com.opengamma.analytics.math.differentiation.MatrixFieldFirstOrderDifferentiator$2,
	com.opengamma.analytics.math.differentiation.ScalarFieldFirstOrderDifferentiator,
	com.opengamma.analytics.math.differentiation.ScalarFieldFirstOrderDifferentiator$1,
	com.opengamma.analytics.math.differentiation.ScalarFieldFirstOrderDifferentiator$2,
	com.opengamma.analytics.math.differentiation.ScalarFieldFirstOrderDifferentiator$3,
	com.opengamma.analytics.math.differentiation.ScalarFieldFirstOrderDifferentiator$4,
	com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator,
	com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator$1,
	com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator$2,
	com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator$3,
	com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator$4,
	com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator,
	com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator$1,
	com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator$2,
	com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator$3,
	com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator$4,
	com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator,
	com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator$1,
	com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator$2,
	com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator$3,
	com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator$4,
	com.opengamma.analytics.math.fft.JTransformsWrapper,
	com.opengamma.analytics.math.function.ConcatenatedVectorFunction,
	com.opengamma.analytics.math.function.DoubleFunction1D,
	com.opengamma.analytics.math.function.DoubleFunction1D$1,
	com.opengamma.analytics.math.function.DoubleFunction1D$10,
	com.opengamma.analytics.math.function.DoubleFunction1D$11,
	com.opengamma.analytics.math.function.DoubleFunction1D$12,
	com.opengamma.analytics.math.function.DoubleFunction1D$2,
	com.opengamma.analytics.math.function.DoubleFunction1D$3,
	com.opengamma.analytics.math.function.DoubleFunction1D$4,
	com.opengamma.analytics.math.function.DoubleFunction1D$5,
	com.opengamma.analytics.math.function.DoubleFunction1D$6,
	com.opengamma.analytics.math.function.DoubleFunction1D$7,
	com.opengamma.analytics.math.function.DoubleFunction1D$8,
	com.opengamma.analytics.math.function.DoubleFunction1D$9,
	com.opengamma.analytics.math.function.DoubleFunction1D[],
	com.opengamma.analytics.math.function.DoublesVectorFunctionProvider,
	com.opengamma.analytics.math.function.Function,
	com.opengamma.analytics.math.function.Function1D,
	com.opengamma.analytics.math.function.Function2D,
	com.opengamma.analytics.math.function.FunctionND,
	com.opengamma.analytics.math.function.InterpolatedCurveVectorFunction,
	com.opengamma.analytics.math.function.InterpolatedVectorFunctionProvider,
	com.opengamma.analytics.math.function.ParameterizedCurve,
	com.opengamma.analytics.math.function.ParameterizedCurve$1,
	com.opengamma.analytics.math.function.ParameterizedCurveVectorFunction,
	com.opengamma.analytics.math.function.ParameterizedCurveVectorFunctionProvider,
	com.opengamma.analytics.math.function.ParameterizedFunction,
	com.opengamma.analytics.math.function.ParameterizedFunction$1,
	com.opengamma.analytics.math.function.ParameterizedFunction$2,
	com.opengamma.analytics.math.function.ParameterizedSurface,
	com.opengamma.analytics.math.function.ParameterizedSurface$1,
	com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D,
	com.opengamma.analytics.math.function.PiecewisePolynomialFunction2D,
	com.opengamma.analytics.math.function.PiecewisePolynomialWithSensitivityFunction1D,
	com.opengamma.analytics.math.function.RealPolynomialFunction1D,
	com.opengamma.analytics.math.function.VectorFunction,
	com.opengamma.analytics.math.function.VectorFunctionProvider,
	com.opengamma.analytics.math.function.VectorFunction[],
	com.opengamma.analytics.math.function.special.ChebyshevPolynomialOfFirstKindFunction,
	com.opengamma.analytics.math.function.special.DiracDeltaFunction,
	com.opengamma.analytics.math.function.special.DoubleRampFunction,
	com.opengamma.analytics.math.function.special.GammaFunction,
	com.opengamma.analytics.math.function.special.HeavisideFunction,
	com.opengamma.analytics.math.function.special.HermitePolynomialFunction,
	com.opengamma.analytics.math.function.special.HermitePolynomialFunction$1,
	com.opengamma.analytics.math.function.special.IncompleteBetaFunction,
	com.opengamma.analytics.math.function.special.IncompleteGammaFunction,
	com.opengamma.analytics.math.function.special.InverseIncompleteBetaFunction,
	com.opengamma.analytics.math.function.special.InverseIncompleteGammaFunction,
	com.opengamma.analytics.math.function.special.JacobiPolynomialFunction,
	com.opengamma.analytics.math.function.special.KroneckerDeltaFunction,
	com.opengamma.analytics.math.function.special.LaguerrePolynomialFunction,
	com.opengamma.analytics.math.function.special.LegendrePolynomialFunction,
	com.opengamma.analytics.math.function.special.NaturalLogGammaFunction,
	com.opengamma.analytics.math.function.special.OrthogonalPolynomialFunctionGenerator,
	com.opengamma.analytics.math.function.special.OrthonormalHermitePolynomialFunction,
	com.opengamma.analytics.math.function.special.TopHatFunction,
	com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D,
	com.opengamma.analytics.math.integration.ExtendedTrapezoidIntegrator1D,
	com.opengamma.analytics.math.integration.GaussHermiteQuadratureIntegrator1D,
	com.opengamma.analytics.math.integration.GaussHermiteQuadratureIntegrator1D$1,
	com.opengamma.analytics.math.integration.GaussHermiteWeightAndAbscissaFunction,
	com.opengamma.analytics.math.integration.GaussJacobiQuadratureIntegrator1D,
	com.opengamma.analytics.math.integration.GaussJacobiQuadratureIntegrator1D$1,
	com.opengamma.analytics.math.integration.GaussJacobiWeightAndAbscissaFunction,
	com.opengamma.analytics.math.integration.GaussLaguerreQuadratureIntegrator1D,
	com.opengamma.analytics.math.integration.GaussLaguerreQuadratureIntegrator1D$1,
	com.opengamma.analytics.math.integration.GaussLaguerreWeightAndAbscissaFunction,
	com.opengamma.analytics.math.integration.GaussLegendreQuadratureIntegrator1D,
	com.opengamma.analytics.math.integration.GaussLegendreQuadratureIntegrator1D$1,
	com.opengamma.analytics.math.integration.GaussLegendreWeightAndAbscissaFunction,
	com.opengamma.analytics.math.integration.GaussianQuadratureData,
	com.opengamma.analytics.math.integration.GaussianQuadratureIntegrator1D,
	com.opengamma.analytics.math.integration.Integrator,
	com.opengamma.analytics.math.integration.Integrator1D,
	com.opengamma.analytics.math.integration.Integrator2D,
	com.opengamma.analytics.math.integration.IntegratorRepeated2D,
	com.opengamma.analytics.math.integration.IntegratorRepeated2D$1,
	com.opengamma.analytics.math.integration.IntegratorRepeated2D$1$1,
	com.opengamma.analytics.math.integration.QuadratureWeightAndAbscissaFunction,
	com.opengamma.analytics.math.integration.RombergIntegrator1D,
	com.opengamma.analytics.math.integration.RungeKuttaIntegrator1D,
	com.opengamma.analytics.math.integration.SimpsonIntegrator1D,
	com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D,
	com.opengamma.analytics.math.interpolation.BasisFunctionAggregation,
	com.opengamma.analytics.math.interpolation.BasisFunctionGenerator,
	com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$1,
	com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$2,
	com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$3,
	com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$4,
	com.opengamma.analytics.math.interpolation.BasisFunctionKnots,
	com.opengamma.analytics.math.interpolation.BasisFunctionKnots[],
	com.opengamma.analytics.math.interpolation.BicubicSplineInterpolator,
	com.opengamma.analytics.math.interpolation.BilinearSplineInterpolator,
	com.opengamma.analytics.math.interpolation.ClampedCubicSplineInterpolator1D,
	com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolator,
	com.opengamma.analytics.math.interpolation.ConstrainedCubicSplineInterpolator,
	com.opengamma.analytics.math.interpolation.ConstrainedCubicSplineInterpolator1D,
	com.opengamma.analytics.math.interpolation.CubicSplineClampedSolver,
	com.opengamma.analytics.math.interpolation.CubicSplineInterpolator,
	com.opengamma.analytics.math.interpolation.CubicSplineNakSolver,
	com.opengamma.analytics.math.interpolation.CubicSplineNaturalSolver,
	com.opengamma.analytics.math.interpolation.CubicSplineSolver,
	com.opengamma.analytics.math.interpolation.DistanceCalculator,
	com.opengamma.analytics.math.interpolation.DoubleQuadraticInterpolator1D,
	com.opengamma.analytics.math.interpolation.ExponentialExtrapolator1D,
	com.opengamma.analytics.math.interpolation.ExponentialInterpolator1D,
	com.opengamma.analytics.math.interpolation.FlatExtrapolator1D,
	com.opengamma.analytics.math.interpolation.GaussianRadialBasisFunction,
	com.opengamma.analytics.math.interpolation.GridInterpolator2D,
	com.opengamma.analytics.math.interpolation.HermiteCoefficientsProvider,
	com.opengamma.analytics.math.interpolation.IntegratedLinearInterpolator,
	com.opengamma.analytics.math.interpolation.Interpolator,
	com.opengamma.analytics.math.interpolation.Interpolator1D,
	com.opengamma.analytics.math.interpolation.Interpolator1D$1,
	com.opengamma.analytics.math.interpolation.Interpolator1D$2,
	com.opengamma.analytics.math.interpolation.Interpolator1D$3,
	com.opengamma.analytics.math.interpolation.Interpolator2D,
	com.opengamma.analytics.math.interpolation.InterpolatorND,
	com.opengamma.analytics.math.interpolation.InverseMultiquadraticRadialBasisFunction,
	com.opengamma.analytics.math.interpolation.KrigingInterpolatorND,
	com.opengamma.analytics.math.interpolation.LinearExtrapolator1D,
	com.opengamma.analytics.math.interpolation.LinearInterpolator,
	com.opengamma.analytics.math.interpolation.LinearInterpolator1D,
	com.opengamma.analytics.math.interpolation.LogClampedCubicSplineInterpolator1D,
	com.opengamma.analytics.math.interpolation.LogCubicSplineNaturalSolver,
	com.opengamma.analytics.math.interpolation.LogLinearExtrapolator1D,
	com.opengamma.analytics.math.interpolation.LogLinearInterpolator1D,
	com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D,
	com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D$1,
	com.opengamma.analytics.math.interpolation.LogNaturalCubicInterpolator1D,
	com.opengamma.analytics.math.interpolation.LogNaturalCubicMonotonicityPreservingInterpolator1D,
	com.opengamma.analytics.math.interpolation.LogNaturalSplineHelper,
	com.opengamma.analytics.math.interpolation.LogNotAKnotCubicSplineInterpolator1D,
	com.opengamma.analytics.math.interpolation.MeshgridInterpolator2D,
	com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator,
	com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D,
	com.opengamma.analytics.math.interpolation.MonotonicIncreasingInterpolator1D,
	com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator,
	com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator1D,
	com.opengamma.analytics.math.interpolation.MonotonicityPreservingQuinticSplineInterpolator,
	com.opengamma.analytics.math.interpolation.MonotonicityPreservingQuinticSplineInterpolator1D,
	com.opengamma.analytics.math.interpolation.MultiquadraticRadialBasisFunction,
	com.opengamma.analytics.math.interpolation.NaturalCubicSplineInterpolator1D,
	com.opengamma.analytics.math.interpolation.NaturalSplineInterpolator,
	com.opengamma.analytics.math.interpolation.NaturalSplineInterpolator1D,
	com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator,
	com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator1D,
	com.opengamma.analytics.math.interpolation.NonnegativityPreservingQuinticSplineInterpolator,
	com.opengamma.analytics.math.interpolation.NonnegativityPreservingQuinticSplineInterpolator1D,
	com.opengamma.analytics.math.interpolation.NotAKnotCubicSplineInterpolator1D,
	com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D,
	com.opengamma.analytics.math.interpolation.PCHIPYieldCurveInterpolator1D,
	com.opengamma.analytics.math.interpolation.PSplineFitter,
	com.opengamma.analytics.math.interpolation.PenaltyMatrixGenerator,
	com.opengamma.analytics.math.interpolation.PiecewiseCubicHermiteSplineInterpolator,
	com.opengamma.analytics.math.interpolation.PiecewiseCubicHermiteSplineInterpolatorWithSensitivity,
	com.opengamma.analytics.math.interpolation.PiecewiseCubicHermiteSplineInterpolatorWithSensitivity$SlopeFinderResults,
	com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator,
	com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D,
	com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator2D,
	com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator[],
	com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult,
	com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D,
	com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult[],
	com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity,
	com.opengamma.analytics.math.interpolation.PolynomialInterpolator1D,
	com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitter,
	com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult,
	com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator,
	com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator1D,
	com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D,
	com.opengamma.analytics.math.interpolation.QuadraticPolynomialLeftExtrapolator,
	com.opengamma.analytics.math.interpolation.QuadraticSplineInterpolator1D,
	com.opengamma.analytics.math.interpolation.RadialBasisFunction,
	com.opengamma.analytics.math.interpolation.RadialBasisFunctionInterpolatorND,
	com.opengamma.analytics.math.interpolation.RationalFunctionInterpolator1D,
	com.opengamma.analytics.math.interpolation.ReciprocalExtrapolator1D,
	com.opengamma.analytics.math.interpolation.ReciprocalExtrapolator1D$LinearlFunction1D,
	com.opengamma.analytics.math.interpolation.SemiLocalCubicSplineInterpolator,
	com.opengamma.analytics.math.interpolation.SemiLocalCubicSplineInterpolator1D,
	com.opengamma.analytics.math.interpolation.ShapePreservingCubicSplineInterpolator,
	com.opengamma.analytics.math.interpolation.ShapePreservingCubicSplineInterpolator1D,
	com.opengamma.analytics.math.interpolation.ShepardInterpolatorND,
	com.opengamma.analytics.math.interpolation.ShepardNormalizedRadialBasisFunction,
	com.opengamma.analytics.math.interpolation.SquareLinearInterpolator1D,
	com.opengamma.analytics.math.interpolation.StepInterpolator1D,
	com.opengamma.analytics.math.interpolation.StepUpperInterpolator1D,
	com.opengamma.analytics.math.interpolation.ThinPlateSplineRadialBasisFunction,
	com.opengamma.analytics.math.interpolation.TimeSquareInterpolator1D,
	com.opengamma.analytics.math.interpolation.TransformedInterpolator1D,
	com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle,
	com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues,
	com.opengamma.analytics.math.interpolation.data.Interpolator1DCubicSplineDataBundle,
	com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle,
	com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundleBuilderFunction,
	com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle,
	com.opengamma.analytics.math.interpolation.data.Interpolator1DLogPiecewisePoynomialDataBundle,
	com.opengamma.analytics.math.interpolation.data.Interpolator1DMonotonicIncreasingDataBundle,
	com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle,
	com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle,
	com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle,
	com.opengamma.analytics.math.interpolation.data.Interpolator2DDataBundle,
	com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle,
	com.opengamma.analytics.math.interpolation.data.KrigingInterpolatorDataBundle,
	com.opengamma.analytics.math.interpolation.data.KrigingInterpolatorDataBundle$1,
	com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle,
	com.opengamma.analytics.math.interpolation.data.RadialBasisFunctionInterpolatorDataBundle,
	com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionCommons,
	com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionCommonsResult,
	com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionOpenGamma,
	com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionOpenGammaResult,
	com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionResult,
	com.opengamma.analytics.math.linearalgebra.Decomposition,
	com.opengamma.analytics.math.linearalgebra.DecompositionResult,
	com.opengamma.analytics.math.linearalgebra.InverseTridiagonalMatrixCalculator,
	com.opengamma.analytics.math.linearalgebra.LUDecompositionCommons,
	com.opengamma.analytics.math.linearalgebra.LUDecompositionCommonsResult,
	com.opengamma.analytics.math.linearalgebra.LUDecompositionResult,
	com.opengamma.analytics.math.linearalgebra.MatrixValidate,
	com.opengamma.analytics.math.linearalgebra.QRDecompositionCommons,
	com.opengamma.analytics.math.linearalgebra.QRDecompositionCommonsResult,
	com.opengamma.analytics.math.linearalgebra.QRDecompositionResult,
	com.opengamma.analytics.math.linearalgebra.SVDecompositionColt,
	com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult,
	com.opengamma.analytics.math.linearalgebra.SVDecompositionCommons,
	com.opengamma.analytics.math.linearalgebra.SVDecompositionCommonsResult,
	com.opengamma.analytics.math.linearalgebra.SVDecompositionResult,
	com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix,
	com.opengamma.analytics.math.linearalgebra.TridiagonalSolver,
	com.opengamma.analytics.math.matrix.ColtMatrixAlgebra,
	com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra,
	com.opengamma.analytics.math.matrix.DoubleMatrix1D,
	com.opengamma.analytics.math.matrix.DoubleMatrix1D[],
	com.opengamma.analytics.math.matrix.DoubleMatrix2D,
	com.opengamma.analytics.math.matrix.DoubleMatrix2D[],
	com.opengamma.analytics.math.matrix.DoubleMatrix2D[][],
	com.opengamma.analytics.math.matrix.IdentityMatrix,
	com.opengamma.analytics.math.matrix.Matrix,
	com.opengamma.analytics.math.matrix.MatrixAlgebra,
	com.opengamma.analytics.math.matrix.OGMatrixAlgebra,
	com.opengamma.analytics.math.minimization.BrentMinimizer1D,
	com.opengamma.analytics.math.minimization.BroydenFletcherGoldfarbShannoInverseHessianUpdate,
	com.opengamma.analytics.math.minimization.ConjugateDirectionVectorMinimizer,
	com.opengamma.analytics.math.minimization.ConjugateGradientVectorMinimizer,
	com.opengamma.analytics.math.minimization.DavidonFletcherPowellInverseHessianUpdate,
	com.opengamma.analytics.math.minimization.DoubleRangeLimitTransform,
	com.opengamma.analytics.math.minimization.GoldenSectionMinimizer1D,
	com.opengamma.analytics.math.minimization.LineSearch,
	com.opengamma.analytics.math.minimization.LineSearch$LineSearchFunction,
	com.opengamma.analytics.math.minimization.Minimizer,
	com.opengamma.analytics.math.minimization.MinimizerWithGradient,
	com.opengamma.analytics.math.minimization.MinimumBracketer,
	com.opengamma.analytics.math.minimization.MultiDirectionalSimplexMinimizer,
	com.opengamma.analytics.math.minimization.NelderMeadDownhillSimplexMinimizer,
	com.opengamma.analytics.math.minimization.NonLinearParameterTransforms,
	com.opengamma.analytics.math.minimization.NonLinearTransformFunction,
	com.opengamma.analytics.math.minimization.NonLinearTransformFunction$1,
	com.opengamma.analytics.math.minimization.NonLinearTransformFunction$2,
	com.opengamma.analytics.math.minimization.NullTransform,
	com.opengamma.analytics.math.minimization.ParabolicMinimumBracketer,
	com.opengamma.analytics.math.minimization.ParameterLimitsTransform,
	com.opengamma.analytics.math.minimization.ParameterLimitsTransform$LimitType,
	com.opengamma.analytics.math.minimization.ParameterLimitsTransform$LimitType[],
	com.opengamma.analytics.math.minimization.ParameterLimitsTransform[],
	com.opengamma.analytics.math.minimization.PositiveOrZero,
	com.opengamma.analytics.math.minimization.QuasiNewtonInverseHessianUpdate,
	com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer,
	com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle,
	com.opengamma.analytics.math.minimization.ScalarMinimizer,
	com.opengamma.analytics.math.minimization.SingleRangeLimitTransform,
	com.opengamma.analytics.math.minimization.SumToOne,
	com.opengamma.analytics.math.minimization.UncoupledParameterTransforms,
	com.opengamma.analytics.math.number.ComplexNumber,
	com.opengamma.analytics.math.number.ComplexNumber[],
	com.opengamma.analytics.math.performance.SimpleTimer,
	com.opengamma.analytics.math.random.NormalRandomNumberGenerator,
	com.opengamma.analytics.math.random.RandomNumberGenerator,
	com.opengamma.analytics.math.regression.GeneralizedLeastSquaresRegression,
	com.opengamma.analytics.math.regression.LeastSquaresRegression,
	com.opengamma.analytics.math.regression.LeastSquaresRegressionResult,
	com.opengamma.analytics.math.regression.NamedVariableLeastSquaresRegressionResult,
	com.opengamma.analytics.math.regression.OrdinaryLeastSquaresRegression,
	com.opengamma.analytics.math.regression.WeightedLeastSquaresRegression,
	com.opengamma.analytics.math.regression.WeightedLeastSquaresRegressionResult,
	com.opengamma.analytics.math.rootfinding.BisectionSingleRootFinder,
	com.opengamma.analytics.math.rootfinding.BracketRoot,
	com.opengamma.analytics.math.rootfinding.BrentSingleRootFinder,
	com.opengamma.analytics.math.rootfinding.CubicRealRootFinder,
	com.opengamma.analytics.math.rootfinding.CubicRootFinder,
	com.opengamma.analytics.math.rootfinding.EigenvaluePolynomialRootFinder,
	com.opengamma.analytics.math.rootfinding.LaguerrePolynomialRealRootFinder,
	com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder,
	com.opengamma.analytics.math.rootfinding.Polynomial1DRootFinder,
	com.opengamma.analytics.math.rootfinding.QuadraticRealRootFinder,
	com.opengamma.analytics.math.rootfinding.RealSingleRootFinder,
	com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder,
	com.opengamma.analytics.math.rootfinding.SingleRootFinder,
	com.opengamma.analytics.math.rootfinding.VectorRootFinder,
	com.opengamma.analytics.math.rootfinding.newton.BroydenMatrixUpdateFunction,
	com.opengamma.analytics.math.rootfinding.newton.BroydenVectorRootFinder,
	com.opengamma.analytics.math.rootfinding.newton.InverseJacobianDirectionFunction,
	com.opengamma.analytics.math.rootfinding.newton.InverseJacobianEstimateInitializationFunction,
	com.opengamma.analytics.math.rootfinding.newton.JacobianDirectionFunction,
	com.opengamma.analytics.math.rootfinding.newton.JacobianEstimateInitializationFunction,
	com.opengamma.analytics.math.rootfinding.newton.NewtonDefaultUpdateFunction,
	com.opengamma.analytics.math.rootfinding.newton.NewtonDefaultVectorRootFinder,
	com.opengamma.analytics.math.rootfinding.newton.NewtonRootFinderDirectionFunction,
	com.opengamma.analytics.math.rootfinding.newton.NewtonRootFinderMatrixInitializationFunction,
	com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder,
	com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder$DataBundle,
	com.opengamma.analytics.math.rootfinding.newton.ShermanMorrisonMatrixUpdateFunction,
	com.opengamma.analytics.math.rootfinding.newton.ShermanMorrisonVectorRootFinder,
	com.opengamma.analytics.math.statistics.ConfidenceInterval,
	com.opengamma.analytics.math.statistics.descriptive.DiscreteQuantileMethod,
	com.opengamma.analytics.math.statistics.descriptive.ExcelInterpolationQuantileMethod,
	com.opengamma.analytics.math.statistics.descriptive.GeometricMeanCalculator,
	com.opengamma.analytics.math.statistics.descriptive.IndexAboveQuantileMethod,
	com.opengamma.analytics.math.statistics.descriptive.InterpolationQuantileMethod,
	com.opengamma.analytics.math.statistics.descriptive.LognormalFisherKurtosisFromVolatilityCalculator,
	com.opengamma.analytics.math.statistics.descriptive.LognormalPearsonKurtosisFromVolatilityCalculator,
	com.opengamma.analytics.math.statistics.descriptive.LognormalSkewnessFromVolatilityCalculator,
	com.opengamma.analytics.math.statistics.descriptive.MeanCalculator,
	com.opengamma.analytics.math.statistics.descriptive.MedianCalculator,
	com.opengamma.analytics.math.statistics.descriptive.MidwayInterpolationQuantileMethod,
	com.opengamma.analytics.math.statistics.descriptive.ModeCalculator,
	com.opengamma.analytics.math.statistics.descriptive.NearestIndexQuantileMethod,
	com.opengamma.analytics.math.statistics.descriptive.PartialMomentCalculator,
	com.opengamma.analytics.math.statistics.descriptive.PearsonFirstSkewnessCoefficientCalculator,
	com.opengamma.analytics.math.statistics.descriptive.PearsonSecondSkewnessCoefficientCalculator,
	com.opengamma.analytics.math.statistics.descriptive.PercentileCalculator,
	com.opengamma.analytics.math.statistics.descriptive.PopulationStandardDeviationCalculator,
	com.opengamma.analytics.math.statistics.descriptive.PopulationVarianceCalculator,
	com.opengamma.analytics.math.statistics.descriptive.QuantileCalculationMethod,
	com.opengamma.analytics.math.statistics.descriptive.QuartileSkewnessCalculator,
	com.opengamma.analytics.math.statistics.descriptive.SampleCentralMomentCalculator,
	com.opengamma.analytics.math.statistics.descriptive.SampleCovarianceCalculator,
	com.opengamma.analytics.math.statistics.descriptive.SampleFisherKurtosisCalculator,
	com.opengamma.analytics.math.statistics.descriptive.SampleInterpolationQuantileMethod,
	com.opengamma.analytics.math.statistics.descriptive.SampleMomentCalculator,
	com.opengamma.analytics.math.statistics.descriptive.SampleNormalizedCentralMomentCalculator,
	com.opengamma.analytics.math.statistics.descriptive.SamplePearsonKurtosisCalculator,
	com.opengamma.analytics.math.statistics.descriptive.SamplePlusOneInterpolationQuantileMethod,
	com.opengamma.analytics.math.statistics.descriptive.SampleSkewnessCalculator,
	com.opengamma.analytics.math.statistics.descriptive.SampleStandardDeviationCalculator,
	com.opengamma.analytics.math.statistics.descriptive.SampleVarianceCalculator,
	com.opengamma.analytics.math.statistics.descriptive.SemiStandardDeviationCalculator,
	com.opengamma.analytics.math.statistics.descriptive.robust.InterquartileRangeCalculator,
	com.opengamma.analytics.math.statistics.descriptive.robust.SampleMedianAbsoluteDeviationCalculator,
	com.opengamma.analytics.math.statistics.descriptive.robust.TrimmedMeanCalculator,
	com.opengamma.analytics.math.statistics.descriptive.robust.WinsorizedMeanCalculator,
	com.opengamma.analytics.math.statistics.distribution.BivariateNormalDistribution,
	com.opengamma.analytics.math.statistics.distribution.ChiSquareDistribution,
	com.opengamma.analytics.math.statistics.distribution.GammaDistribution,
	com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution,
	com.opengamma.analytics.math.statistics.distribution.GeneralizedParetoDistribution,
	com.opengamma.analytics.math.statistics.distribution.LaplaceDistribution,
	com.opengamma.analytics.math.statistics.distribution.NonCentralChiSquaredDistribution,
	com.opengamma.analytics.math.statistics.distribution.NormalDistribution,
	com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution,
	com.opengamma.analytics.math.statistics.distribution.StudentTDistribution,
	com.opengamma.analytics.math.statistics.distribution.StudentTOneTailedCriticalValueCalculator,
	com.opengamma.analytics.math.statistics.distribution.StudentTTwoTailedCriticalValueCalculator,
	com.opengamma.analytics.math.statistics.distribution.fnlib.D1MACH,
	com.opengamma.analytics.math.statistics.distribution.fnlib.DCSEVL,
	com.opengamma.analytics.math.statistics.distribution.fnlib.DERF,
	com.opengamma.analytics.math.statistics.distribution.fnlib.DERFC,
	com.opengamma.analytics.math.statistics.distribution.fnlib.INITDS,
	com.opengamma.analytics.math.statistics.estimation.ChiSquareDistributionMomentEstimator,
	com.opengamma.analytics.math.statistics.estimation.DistributionParameterEstimator,
	com.opengamma.analytics.math.statistics.estimation.GammaDistributionMomentEstimator,
	com.opengamma.analytics.math.statistics.estimation.GeneralizedParetoDistributionMomentEstimator,
	com.opengamma.analytics.math.statistics.estimation.GeneralizedParetoDistributionMomentEstimator$1,
	com.opengamma.analytics.math.statistics.estimation.LaplaceDistributionMaximumLikelihoodEstimator,
	com.opengamma.analytics.math.statistics.estimation.NormalDistributionMaximumLikelihoodEstimator,
	com.opengamma.analytics.math.statistics.estimation.NormalDistributionMomentEstimator,
	com.opengamma.analytics.math.statistics.estimation.StudentTDistributionMaximumLikelihoodEstimator,
	com.opengamma.analytics.math.statistics.estimation.StudentTDistributionMaximumLikelihoodEstimator$1,
	com.opengamma.analytics.math.statistics.leastsquare.GeneralizedLeastSquare,
	com.opengamma.analytics.math.statistics.leastsquare.GeneralizedLeastSquareResults,
	com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResults,
	com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform,
	com.opengamma.analytics.math.statistics.leastsquare.LeastSquareWithPenaltyResults,
	com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare,
	com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare$1,
	com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare$2,
	com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare$3,
	com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare$4,
	com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquareWithPenalty,
	com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquareWithPenalty$1,
	com.opengamma.analytics.math.surface.ConstantDoublesSurface,
	com.opengamma.analytics.math.surface.ConstantSurfaceAdditiveShiftFunction,
	com.opengamma.analytics.math.surface.ConstantSurfaceMultiplicativeShiftFunction,
	com.opengamma.analytics.math.surface.DoublesSurface,
	com.opengamma.analytics.math.surface.FunctionalDoublesSurface,
	com.opengamma.analytics.math.surface.FunctionalSurface,
	com.opengamma.analytics.math.surface.FunctionalSurfaceAdditiveShiftFunction,
	com.opengamma.analytics.math.surface.FunctionalSurfaceAdditiveShiftFunction$ShiftedFunction,
	com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction,
	com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction$ShiftedFunction,
	com.opengamma.analytics.math.surface.InterpolatedDoublesSurface,
	com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface,
	com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction,
	com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction,
	com.opengamma.analytics.math.surface.InterpolatedSurfaceMultiplicativeShiftFunction,
	com.opengamma.analytics.math.surface.NodalDoublesSurface,
	com.opengamma.analytics.math.surface.NodalObjectsSurface,
	com.opengamma.analytics.math.surface.NodalSurfaceAdditiveShiftFunction,
	com.opengamma.analytics.math.surface.NodalSurfaceMultiplicativeShiftFunction,
	com.opengamma.analytics.math.surface.ObjectsSurface,
	com.opengamma.analytics.math.surface.Surface,
	com.opengamma.analytics.math.surface.SurfaceShiftFunction,
	com.opengamma.analytics.math.surface.SurfaceShiftFunctionFactory,
	com.opengamma.analytics.math.surface.SurfaceSliceFunction,
	com.opengamma.analytics.math.surface.Surface[],
	com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper$1,
	com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper$2,
	com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper$3,
	com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper$4,
	com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper$5,
	com.opengamma.analytics.math.utilities.Diff,
	com.opengamma.analytics.math.utilities.Epsilon,
	com.opengamma.util.time.Tenor[],
	com.opengamma.util.tuple.DoublesPair,
	com.opengamma.util.tuple.DoublesPair[],
	com.opengamma.util.tuple.Pair,
	com.opengamma.util.tuple.Pair[],
	com.opengamma.util.tuple.Triple,
	double,
	double[],
	double[][],
	float,
	float[],
	int,
	int[],
	java.awt.Shape,
	java.awt.geom.Ellipse2D,
	java.awt.geom.Rectangle2D,
	java.io.ObjectInputStream,
	java.io.ObjectOutputStream,
	java.io.Reader,
	java.io.StringReader,
	java.lang.Boolean,
	java.lang.Class,
	java.lang.Comparable,
	java.lang.Comparable[],
	java.lang.Double,
	java.lang.Double[],
	java.lang.Double[][],
	java.lang.Integer,
	java.lang.Object,
	java.lang.Object[],
	java.lang.String,
	java.lang.StringBuffer,
	java.lang.String[],
	java.lang.String[][],
	java.lang.Throwable,
	java.math.BigDecimal,
	java.math.BigDecimal[],
	java.math.BigDecimal[][],
	java.text.FieldPosition,
	java.text.NumberFormat,
	java.text.ParsePosition,
	java.util.ArrayList,
	java.util.BitSet,
	java.util.Collection,
	java.util.LinkedHashMap,
	java.util.List,
	java.util.Locale,
	java.util.Locale[],
	java.util.Map,
	java.util.NavigableMap,
	java.util.Set,
	long,
	long[],
	org.apache.commons.math.Field,
	org.apache.commons.math.FieldElement,
	org.apache.commons.math.FieldElement[],
	org.apache.commons.math.FieldElement[][],
	org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction,
	org.apache.commons.math.analysis.MultivariateRealFunction,
	org.apache.commons.math.analysis.UnivariateRealFunction,
	org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeForm,
	org.apache.commons.math.complex.Complex,
	org.apache.commons.math.distribution.TDistribution,
	org.apache.commons.math.exception.util.Localizable,
	org.apache.commons.math.fraction.BigFraction,
	org.apache.commons.math.fraction.Fraction,
	org.apache.commons.math.linear.AbstractFieldMatrix,
	org.apache.commons.math.linear.AbstractFieldMatrix$1,
	org.apache.commons.math.linear.AbstractFieldMatrix$2,
	org.apache.commons.math.linear.AbstractFieldMatrix$3,
	org.apache.commons.math.linear.AbstractRealMatrix,
	org.apache.commons.math.linear.AbstractRealMatrix$1,
	org.apache.commons.math.linear.AbstractRealMatrix$2,
	org.apache.commons.math.linear.AbstractRealMatrix$3,
	org.apache.commons.math.linear.AbstractRealMatrix$4,
	org.apache.commons.math.linear.AbstractRealMatrix$5,
	org.apache.commons.math.linear.AbstractRealVector,
	org.apache.commons.math.linear.AbstractRealVector$1,
	org.apache.commons.math.linear.AbstractRealVector$EntryImpl,
	org.apache.commons.math.linear.AnyMatrix,
	org.apache.commons.math.linear.Array2DRowFieldMatrix,
	org.apache.commons.math.linear.Array2DRowRealMatrix,
	org.apache.commons.math.linear.ArrayFieldVector,
	org.apache.commons.math.linear.ArrayRealVector,
	org.apache.commons.math.linear.BiDiagonalTransformer,
	org.apache.commons.math.linear.BigMatrix,
	org.apache.commons.math.linear.BigMatrixImpl,
	org.apache.commons.math.linear.BlockFieldMatrix,
	org.apache.commons.math.linear.BlockRealMatrix,
	org.apache.commons.math.linear.CholeskyDecomposition,
	org.apache.commons.math.linear.CholeskyDecompositionImpl,
	org.apache.commons.math.linear.CholeskyDecompositionImpl$Solver,
	org.apache.commons.math.linear.DecompositionSolver,
	org.apache.commons.math.linear.DefaultFieldMatrixChangingVisitor,
	org.apache.commons.math.linear.DefaultFieldMatrixPreservingVisitor,
	org.apache.commons.math.linear.DefaultRealMatrixChangingVisitor,
	org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor,
	org.apache.commons.math.linear.EigenDecomposition,
	org.apache.commons.math.linear.EigenDecompositionImpl,
	org.apache.commons.math.linear.EigenDecompositionImpl$Solver,
	org.apache.commons.math.linear.FieldDecompositionSolver,
	org.apache.commons.math.linear.FieldLUDecomposition,
	org.apache.commons.math.linear.FieldLUDecompositionImpl,
	org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver,
	org.apache.commons.math.linear.FieldMatrix,
	org.apache.commons.math.linear.FieldMatrixChangingVisitor,
	org.apache.commons.math.linear.FieldMatrixPreservingVisitor,
	org.apache.commons.math.linear.FieldVector,
	org.apache.commons.math.linear.InvalidMatrixException,
	org.apache.commons.math.linear.LUDecomposition,
	org.apache.commons.math.linear.LUDecompositionImpl,
	org.apache.commons.math.linear.LUDecompositionImpl$Solver,
	org.apache.commons.math.linear.MatrixIndexException,
	org.apache.commons.math.linear.MatrixUtils$BigFractionMatrixConverter,
	org.apache.commons.math.linear.MatrixUtils$FractionMatrixConverter,
	org.apache.commons.math.linear.MatrixVisitorException,
	org.apache.commons.math.linear.NonSquareMatrixException,
	org.apache.commons.math.linear.NotPositiveDefiniteMatrixException,
	org.apache.commons.math.linear.NotSymmetricMatrixException,
	org.apache.commons.math.linear.OpenMapRealMatrix,
	org.apache.commons.math.linear.OpenMapRealVector,
	org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry,
	org.apache.commons.math.linear.QRDecomposition,
	org.apache.commons.math.linear.QRDecompositionImpl,
	org.apache.commons.math.linear.QRDecompositionImpl$Solver,
	org.apache.commons.math.linear.RealMatrix,
	org.apache.commons.math.linear.RealMatrixChangingVisitor,
	org.apache.commons.math.linear.RealMatrixImpl,
	org.apache.commons.math.linear.RealMatrixPreservingVisitor,
	org.apache.commons.math.linear.RealVector,
	org.apache.commons.math.linear.RealVector$Entry,
	org.apache.commons.math.linear.RealVectorFormat,
	org.apache.commons.math.linear.SingularMatrixException,
	org.apache.commons.math.linear.SingularValueDecomposition,
	org.apache.commons.math.linear.SingularValueDecompositionImpl,
	org.apache.commons.math.linear.SingularValueDecompositionImpl$1,
	org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver,
	org.apache.commons.math.linear.SparseFieldMatrix,
	org.apache.commons.math.linear.SparseFieldVector,
	org.apache.commons.math.linear.TriDiagonalTransformer,
	org.apache.commons.math.optimization.RealPointValuePair,
	org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression,
	org.apache.commons.math.stat.regression.GLSMultipleLinearRegression,
	org.apache.commons.math.stat.regression.MultipleLinearRegression,
	org.apache.commons.math.stat.regression.OLSMultipleLinearRegression,
	org.apache.commons.math.stat.regression.SimpleRegression,
	org.joda.beans.BeanBuilder,
	org.joda.beans.MetaBean,
	org.joda.beans.MetaProperty,
	org.joda.beans.Property,
	org.joda.time.DateTime,
	org.joda.time.DateTime$Property,
	org.joda.time.LocalDate,
	org.joda.time.ReadableInstant,
	org.joda.time.ReadablePartial,
	org.joda.time.base.AbstractDateTime,
	org.joda.time.field.AbstractReadableInstantFieldProperty,
	org.jsoup.nodes.Document,
	org.jsoup.nodes.Element,
	org.w3c.dom.Document,
	org.w3c.dom.Element,
	org.w3c.dom.Node,
	void;
MARKING
	com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1,
	void : 1;
TRANSITION <com.opengamma.analytics.math.Axis__com.opengamma.analytics.math.Axis_valueOf<java.lang.String>>
	CONSUME 
		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.Axis : 1;
TRANSITION <com.opengamma.analytics.math.Axis__com.opengamma.analytics.math.Axis[]_values<>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.Axis[] : 1;
TRANSITION <com.opengamma.analytics.math.ComplexMathUtils__com.opengamma.analytics.math.number.ComplexNumber_add<com.opengamma.analytics.math.number.ComplexNumber.com.opengamma.analytics.math.number.ComplexNumber>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber : 2;
	PRODUCE 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
TRANSITION <com.opengamma.analytics.math.ComplexMathUtils__com.opengamma.analytics.math.number.ComplexNumber_add<com.opengamma.analytics.math.number.ComplexNumber.double>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
TRANSITION <com.opengamma.analytics.math.ComplexMathUtils__com.opengamma.analytics.math.number.ComplexNumber_add<com.opengamma.analytics.math.number.ComplexNumber[]>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
TRANSITION <com.opengamma.analytics.math.ComplexMathUtils__com.opengamma.analytics.math.number.ComplexNumber_add<double.com.opengamma.analytics.math.number.ComplexNumber>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
TRANSITION <com.opengamma.analytics.math.ComplexMathUtils__com.opengamma.analytics.math.number.ComplexNumber_conjugate<com.opengamma.analytics.math.number.ComplexNumber>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
	PRODUCE 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
TRANSITION <com.opengamma.analytics.math.ComplexMathUtils__com.opengamma.analytics.math.number.ComplexNumber_divide<com.opengamma.analytics.math.number.ComplexNumber.com.opengamma.analytics.math.number.ComplexNumber>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber : 2;
	PRODUCE 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
TRANSITION <com.opengamma.analytics.math.ComplexMathUtils__com.opengamma.analytics.math.number.ComplexNumber_divide<com.opengamma.analytics.math.number.ComplexNumber.double>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
TRANSITION <com.opengamma.analytics.math.ComplexMathUtils__com.opengamma.analytics.math.number.ComplexNumber_divide<double.com.opengamma.analytics.math.number.ComplexNumber>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
TRANSITION <com.opengamma.analytics.math.ComplexMathUtils__com.opengamma.analytics.math.number.ComplexNumber_exp<com.opengamma.analytics.math.number.ComplexNumber>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
	PRODUCE 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
TRANSITION <com.opengamma.analytics.math.ComplexMathUtils__com.opengamma.analytics.math.number.ComplexNumber_inverse<com.opengamma.analytics.math.number.ComplexNumber>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
	PRODUCE 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
TRANSITION <com.opengamma.analytics.math.ComplexMathUtils__com.opengamma.analytics.math.number.ComplexNumber_log<com.opengamma.analytics.math.number.ComplexNumber>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
	PRODUCE 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
TRANSITION <com.opengamma.analytics.math.ComplexMathUtils__com.opengamma.analytics.math.number.ComplexNumber_multiply<com.opengamma.analytics.math.number.ComplexNumber.com.opengamma.analytics.math.number.ComplexNumber>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber : 2;
	PRODUCE 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
TRANSITION <com.opengamma.analytics.math.ComplexMathUtils__com.opengamma.analytics.math.number.ComplexNumber_multiply<com.opengamma.analytics.math.number.ComplexNumber.double>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
TRANSITION <com.opengamma.analytics.math.ComplexMathUtils__com.opengamma.analytics.math.number.ComplexNumber_multiply<com.opengamma.analytics.math.number.ComplexNumber[]>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
TRANSITION <com.opengamma.analytics.math.ComplexMathUtils__com.opengamma.analytics.math.number.ComplexNumber_multiply<double.com.opengamma.analytics.math.number.ComplexNumber>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
TRANSITION <com.opengamma.analytics.math.ComplexMathUtils__com.opengamma.analytics.math.number.ComplexNumber_multiply<double.com.opengamma.analytics.math.number.ComplexNumber[]>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber[] : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
TRANSITION <com.opengamma.analytics.math.ComplexMathUtils__com.opengamma.analytics.math.number.ComplexNumber_pow<com.opengamma.analytics.math.number.ComplexNumber.com.opengamma.analytics.math.number.ComplexNumber>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber : 2;
	PRODUCE 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
TRANSITION <com.opengamma.analytics.math.ComplexMathUtils__com.opengamma.analytics.math.number.ComplexNumber_pow<com.opengamma.analytics.math.number.ComplexNumber.double>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
TRANSITION <com.opengamma.analytics.math.ComplexMathUtils__com.opengamma.analytics.math.number.ComplexNumber_pow<double.com.opengamma.analytics.math.number.ComplexNumber>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
TRANSITION <com.opengamma.analytics.math.ComplexMathUtils__com.opengamma.analytics.math.number.ComplexNumber_sqrt<com.opengamma.analytics.math.number.ComplexNumber>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
	PRODUCE 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
TRANSITION <com.opengamma.analytics.math.ComplexMathUtils__com.opengamma.analytics.math.number.ComplexNumber_square<com.opengamma.analytics.math.number.ComplexNumber>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
	PRODUCE 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
TRANSITION <com.opengamma.analytics.math.ComplexMathUtils__com.opengamma.analytics.math.number.ComplexNumber_subtract<com.opengamma.analytics.math.number.ComplexNumber.com.opengamma.analytics.math.number.ComplexNumber>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber : 2;
	PRODUCE 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
TRANSITION <com.opengamma.analytics.math.ComplexMathUtils__com.opengamma.analytics.math.number.ComplexNumber_subtract<com.opengamma.analytics.math.number.ComplexNumber.double>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
TRANSITION <com.opengamma.analytics.math.ComplexMathUtils__com.opengamma.analytics.math.number.ComplexNumber_subtract<double.com.opengamma.analytics.math.number.ComplexNumber>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
TRANSITION <com.opengamma.analytics.math.ComplexMathUtils__double_arg<com.opengamma.analytics.math.number.ComplexNumber>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.ComplexMathUtils__double_mod<com.opengamma.analytics.math.number.ComplexNumber>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.ComplexMathUtils__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.ComplexMathUtils : 1;
TRANSITION <com.opengamma.analytics.math.FunctionUtils__double_cube<double>>
	CONSUME 
		double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.FunctionUtils__double_square<double>>
	CONSUME 
		double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.FunctionUtils__double[]_unique<double[]>>
	CONSUME 
		double[] : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.FunctionUtils__int_getLowerBoundIndex<double[].double>>
	CONSUME 
		double[] : 1,

		double : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.FunctionUtils__int_toTensorIndex<int[].int[]>>
	CONSUME 
		int[] : 2;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.FunctionUtils__int[]_fromTensorIndex<int.int[]>>
	CONSUME 
		int[] : 1,

		int : 1;
	PRODUCE 
		int[] : 1;
TRANSITION <com.opengamma.analytics.math.FunctionUtils__int[]_unique<int[]>>
	CONSUME 
		int[] : 1;
	PRODUCE 
		int[] : 1;
TRANSITION <com.opengamma.analytics.math.MathException__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.MathException : 1;
TRANSITION <com.opengamma.analytics.math.MathException__void_<init><java.lang.String>>
	CONSUME 
		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.MathException : 1;
TRANSITION <com.opengamma.analytics.math.MathException__void_<init><java.lang.String.java.lang.Throwable>>
	CONSUME 
		java.lang.Throwable : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.MathException : 1;
TRANSITION <com.opengamma.analytics.math.MathException__void_<init><java.lang.Throwable>>
	CONSUME 
		java.lang.Throwable : 1;
	PRODUCE 
		com.opengamma.analytics.math.MathException : 1;
TRANSITION <com.opengamma.analytics.math.Plane__com.opengamma.analytics.math.Plane_valueOf<java.lang.String>>
	CONSUME 
		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.Plane : 1;
TRANSITION <com.opengamma.analytics.math.Plane__com.opengamma.analytics.math.Plane[]_values<>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.Plane[] : 1;
TRANSITION <com.opengamma.analytics.math.TrigonometricFunctionUtils__com.opengamma.analytics.math.number.ComplexNumber_acos<com.opengamma.analytics.math.number.ComplexNumber>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
	PRODUCE 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
TRANSITION <com.opengamma.analytics.math.TrigonometricFunctionUtils__com.opengamma.analytics.math.number.ComplexNumber_acosh<com.opengamma.analytics.math.number.ComplexNumber>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
	PRODUCE 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
TRANSITION <com.opengamma.analytics.math.TrigonometricFunctionUtils__com.opengamma.analytics.math.number.ComplexNumber_asin<com.opengamma.analytics.math.number.ComplexNumber>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
	PRODUCE 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
TRANSITION <com.opengamma.analytics.math.TrigonometricFunctionUtils__com.opengamma.analytics.math.number.ComplexNumber_asinh<com.opengamma.analytics.math.number.ComplexNumber>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
	PRODUCE 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
TRANSITION <com.opengamma.analytics.math.TrigonometricFunctionUtils__com.opengamma.analytics.math.number.ComplexNumber_atan<com.opengamma.analytics.math.number.ComplexNumber>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
	PRODUCE 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
TRANSITION <com.opengamma.analytics.math.TrigonometricFunctionUtils__com.opengamma.analytics.math.number.ComplexNumber_atanh<com.opengamma.analytics.math.number.ComplexNumber>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
	PRODUCE 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
TRANSITION <com.opengamma.analytics.math.TrigonometricFunctionUtils__com.opengamma.analytics.math.number.ComplexNumber_cos<com.opengamma.analytics.math.number.ComplexNumber>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
	PRODUCE 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
TRANSITION <com.opengamma.analytics.math.TrigonometricFunctionUtils__com.opengamma.analytics.math.number.ComplexNumber_cosh<com.opengamma.analytics.math.number.ComplexNumber>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
	PRODUCE 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
TRANSITION <com.opengamma.analytics.math.TrigonometricFunctionUtils__com.opengamma.analytics.math.number.ComplexNumber_sin<com.opengamma.analytics.math.number.ComplexNumber>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
	PRODUCE 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
TRANSITION <com.opengamma.analytics.math.TrigonometricFunctionUtils__com.opengamma.analytics.math.number.ComplexNumber_sinh<com.opengamma.analytics.math.number.ComplexNumber>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
	PRODUCE 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
TRANSITION <com.opengamma.analytics.math.TrigonometricFunctionUtils__com.opengamma.analytics.math.number.ComplexNumber_tan<com.opengamma.analytics.math.number.ComplexNumber>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
	PRODUCE 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
TRANSITION <com.opengamma.analytics.math.TrigonometricFunctionUtils__com.opengamma.analytics.math.number.ComplexNumber_tanh<com.opengamma.analytics.math.number.ComplexNumber>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
	PRODUCE 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
TRANSITION <com.opengamma.analytics.math.TrigonometricFunctionUtils__double_acos<double>>
	CONSUME 
		double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.TrigonometricFunctionUtils__double_acosh<double>>
	CONSUME 
		double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.TrigonometricFunctionUtils__double_asin<double>>
	CONSUME 
		double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.TrigonometricFunctionUtils__double_asinh<double>>
	CONSUME 
		double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.TrigonometricFunctionUtils__double_atan<double>>
	CONSUME 
		double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.TrigonometricFunctionUtils__double_atanh<double>>
	CONSUME 
		double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.TrigonometricFunctionUtils__double_cos<double>>
	CONSUME 
		double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.TrigonometricFunctionUtils__double_cosh<double>>
	CONSUME 
		double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.TrigonometricFunctionUtils__double_sin<double>>
	CONSUME 
		double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.TrigonometricFunctionUtils__double_sinh<double>>
	CONSUME 
		double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.TrigonometricFunctionUtils__double_tan<double>>
	CONSUME 
		double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.TrigonometricFunctionUtils__double_tanh<double>>
	CONSUME 
		double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.TrigonometricFunctionUtils__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.TrigonometricFunctionUtils : 1;
TRANSITION <com.opengamma.analytics.math.cube.ConstantCubeAdditiveShiftFunction__com.opengamma.analytics.math.cube.ConstantDoublesCube_evaluate<com.opengamma.analytics.math.cube.ConstantDoublesCube.double>>
	CONSUME 
		com.opengamma.analytics.math.cube.ConstantCubeAdditiveShiftFunction : 1,

		double : 1,

		com.opengamma.analytics.math.cube.ConstantDoublesCube : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.ConstantDoublesCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.ConstantCubeAdditiveShiftFunction__com.opengamma.analytics.math.cube.ConstantDoublesCube_evaluate<com.opengamma.analytics.math.cube.ConstantDoublesCube.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.cube.ConstantCubeAdditiveShiftFunction : 1,

		double : 1,

		com.opengamma.analytics.math.cube.ConstantDoublesCube : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.ConstantDoublesCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.ConstantCubeAdditiveShiftFunction__com.opengamma.analytics.math.cube.Cube_evaluate<com.opengamma.analytics.math.cube.Cube.double>>
	CONSUME 
		com.opengamma.analytics.math.cube.ConstantCubeAdditiveShiftFunction : 1,

		com.opengamma.analytics.math.cube.Cube : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.Cube : 1;
TRANSITION <com.opengamma.analytics.math.cube.ConstantCubeAdditiveShiftFunction__com.opengamma.analytics.math.cube.Cube_evaluate<com.opengamma.analytics.math.cube.Cube.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.cube.ConstantCubeAdditiveShiftFunction : 1,

		com.opengamma.analytics.math.cube.Cube : 1,

		double : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.Cube : 1;
TRANSITION <com.opengamma.analytics.math.cube.ConstantCubeAdditiveShiftFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.ConstantCubeAdditiveShiftFunction : 1;
TRANSITION <com.opengamma.analytics.math.cube.ConstantCubeMultiplicativeShiftFunction__com.opengamma.analytics.math.cube.ConstantDoublesCube_evaluate<com.opengamma.analytics.math.cube.ConstantDoublesCube.double>>
	CONSUME 
		com.opengamma.analytics.math.cube.ConstantCubeMultiplicativeShiftFunction : 1,

		double : 1,

		com.opengamma.analytics.math.cube.ConstantDoublesCube : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.ConstantDoublesCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.ConstantCubeMultiplicativeShiftFunction__com.opengamma.analytics.math.cube.ConstantDoublesCube_evaluate<com.opengamma.analytics.math.cube.ConstantDoublesCube.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.cube.ConstantCubeMultiplicativeShiftFunction : 1,

		double : 1,

		com.opengamma.analytics.math.cube.ConstantDoublesCube : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.ConstantDoublesCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.ConstantCubeMultiplicativeShiftFunction__com.opengamma.analytics.math.cube.Cube_evaluate<com.opengamma.analytics.math.cube.Cube.double>>
	CONSUME 
		com.opengamma.analytics.math.cube.Cube : 1,

		com.opengamma.analytics.math.cube.ConstantCubeMultiplicativeShiftFunction : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.Cube : 1;
TRANSITION <com.opengamma.analytics.math.cube.ConstantCubeMultiplicativeShiftFunction__com.opengamma.analytics.math.cube.Cube_evaluate<com.opengamma.analytics.math.cube.Cube.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.cube.Cube : 1,

		com.opengamma.analytics.math.cube.ConstantCubeMultiplicativeShiftFunction : 1,

		double : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.Cube : 1;
TRANSITION <com.opengamma.analytics.math.cube.ConstantCubeMultiplicativeShiftFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.ConstantCubeMultiplicativeShiftFunction : 1;
TRANSITION <com.opengamma.analytics.math.cube.ConstantDoublesCube__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.cube.ConstantDoublesCube : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.cube.ConstantDoublesCube__com.opengamma.analytics.math.cube.ConstantDoublesCube_'from'<double>>
	CONSUME 
		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.ConstantDoublesCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.ConstantDoublesCube__com.opengamma.analytics.math.cube.ConstantDoublesCube_'from'<double.java.lang.String>>
	CONSUME 
		double : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.ConstantDoublesCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.ConstantDoublesCube__int_size<>>
	CONSUME 
		com.opengamma.analytics.math.cube.ConstantDoublesCube : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.cube.ConstantDoublesCube__java.lang.Double_getValue<com.opengamma.util.tuple.Triple>>
	CONSUME 
		com.opengamma.analytics.math.cube.ConstantDoublesCube : 1,

		com.opengamma.util.tuple.Triple : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.cube.ConstantDoublesCube__java.lang.Double_getValue<java.lang.Double.java.lang.Double.java.lang.Double>>
	CONSUME 
		java.lang.Double : 3,

		com.opengamma.analytics.math.cube.ConstantDoublesCube : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.cube.ConstantDoublesCube__java.lang.Double[]_getValues<>>
	CONSUME 
		com.opengamma.analytics.math.cube.ConstantDoublesCube : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.cube.ConstantDoublesCube__java.lang.Double[]_getXData<>>
	CONSUME 
		com.opengamma.analytics.math.cube.ConstantDoublesCube : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.cube.ConstantDoublesCube__java.lang.Double[]_getYData<>>
	CONSUME 
		com.opengamma.analytics.math.cube.ConstantDoublesCube : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.cube.ConstantDoublesCube__java.lang.Double[]_getZData<>>
	CONSUME 
		com.opengamma.analytics.math.cube.ConstantDoublesCube : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.cube.ConstantDoublesCube__java.lang.Object_getValue<com.opengamma.util.tuple.Triple>>
	CONSUME 
		com.opengamma.analytics.math.cube.ConstantDoublesCube : 1,

		com.opengamma.util.tuple.Triple : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.cube.ConstantDoublesCube__java.lang.Object_getValue<java.lang.Object.java.lang.Object.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.cube.ConstantDoublesCube : 1,

		java.lang.Object : 3;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.cube.ConstantDoublesCube__java.lang.Object[]_getValues<>>
	CONSUME 
		com.opengamma.analytics.math.cube.ConstantDoublesCube : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.cube.ConstantDoublesCube__java.lang.Object[]_getXData<>>
	CONSUME 
		com.opengamma.analytics.math.cube.ConstantDoublesCube : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.cube.ConstantDoublesCube__java.lang.Object[]_getYData<>>
	CONSUME 
		com.opengamma.analytics.math.cube.ConstantDoublesCube : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.cube.ConstantDoublesCube__java.lang.Object[]_getZData<>>
	CONSUME 
		com.opengamma.analytics.math.cube.ConstantDoublesCube : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.cube.ConstantDoublesCube__void_<init><double>>
	CONSUME 
		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.ConstantDoublesCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.ConstantDoublesCube__void_<init><double.java.lang.String>>
	CONSUME 
		double : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.ConstantDoublesCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.Cube__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.cube.Cube : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.cube.Cube__int_size<>>
	CONSUME 
		com.opengamma.analytics.math.cube.Cube : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.cube.Cube__java.lang.Object_getValue<com.opengamma.util.tuple.Triple>>
	CONSUME 
		com.opengamma.analytics.math.cube.Cube : 1,

		com.opengamma.util.tuple.Triple : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.cube.Cube__java.lang.Object_getValue<java.lang.Object.java.lang.Object.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.cube.Cube : 1,

		java.lang.Object : 3;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.cube.Cube__java.lang.Object[]_getValues<>>
	CONSUME 
		com.opengamma.analytics.math.cube.Cube : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.cube.Cube__java.lang.Object[]_getXData<>>
	CONSUME 
		com.opengamma.analytics.math.cube.Cube : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.cube.Cube__java.lang.Object[]_getYData<>>
	CONSUME 
		com.opengamma.analytics.math.cube.Cube : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.cube.Cube__java.lang.Object[]_getZData<>>
	CONSUME 
		com.opengamma.analytics.math.cube.Cube : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.cube.Cube__java.lang.String_getName<>>
	CONSUME 
		com.opengamma.analytics.math.cube.Cube : 1;
	PRODUCE 
		java.lang.String : 1;
TRANSITION <com.opengamma.analytics.math.cube.Cube__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.Cube : 1;
TRANSITION <com.opengamma.analytics.math.cube.Cube__void_<init><java.lang.String>>
	CONSUME 
		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.Cube : 1;
TRANSITION <com.opengamma.analytics.math.cube.CubeShiftFunction__com.opengamma.analytics.math.cube.Cube_evaluate<com.opengamma.analytics.math.cube.Cube.double>>
	CONSUME 
		com.opengamma.analytics.math.cube.Cube : 1,

		double : 1,

		com.opengamma.analytics.math.cube.CubeShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.Cube : 1;
TRANSITION <com.opengamma.analytics.math.cube.CubeShiftFunction__com.opengamma.analytics.math.cube.Cube_evaluate<com.opengamma.analytics.math.cube.Cube.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.cube.Cube : 1,

		double : 1,

		com.opengamma.analytics.math.cube.CubeShiftFunction : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.Cube : 1;
TRANSITION <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory__com.opengamma.analytics.math.cube.Cube_getShiftedCube<com.opengamma.analytics.math.cube.Cube.double.boolean>>
	CONSUME 
		com.opengamma.analytics.math.cube.Cube : 1,

		boolean : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.Cube : 1;
TRANSITION <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory__com.opengamma.analytics.math.cube.Cube_getShiftedCube<com.opengamma.analytics.math.cube.Cube.double.java.lang.String.boolean>>
	CONSUME 
		com.opengamma.analytics.math.cube.Cube : 1,

		boolean : 1,

		double : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.Cube : 1;
TRANSITION <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory__com.opengamma.analytics.math.cube.CubeShiftFunction_getFunction<java.lang.Class>>
	CONSUME 
		java.lang.Class : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.CubeShiftFunction : 1;
TRANSITION <com.opengamma.analytics.math.cube.CubeShiftFunctionFactory__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.CubeShiftFunctionFactory : 1;
TRANSITION <com.opengamma.analytics.math.cube.CubeSliceFunction__com.opengamma.analytics.math.surface.Surface_cut<com.opengamma.analytics.math.cube.Cube.com.opengamma.analytics.math.Plane.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.cube.Cube : 1,

		com.opengamma.analytics.math.cube.CubeSliceFunction : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.Plane : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface : 1;
TRANSITION <com.opengamma.analytics.math.cube.CubeSliceFunction__com.opengamma.analytics.math.surface.Surface_cut<com.opengamma.analytics.math.cube.Cube.com.opengamma.analytics.math.Plane.java.lang.Double.com.opengamma.analytics.math.interpolation.Interpolator2D>>
	CONSUME 
		com.opengamma.analytics.math.cube.Cube : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.Plane : 1,

		com.opengamma.analytics.math.interpolation.Interpolator2D : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface : 1;
TRANSITION <com.opengamma.analytics.math.cube.CubeSliceFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.CubeSliceFunction : 1;
TRANSITION <com.opengamma.analytics.math.cube.DoublesCube__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.cube.DoublesCube : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.cube.DoublesCube__double[]_getValuesAsPrimitive<>>
	CONSUME 
		com.opengamma.analytics.math.cube.DoublesCube : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.cube.DoublesCube__double[]_getXDataAsPrimitive<>>
	CONSUME 
		com.opengamma.analytics.math.cube.DoublesCube : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.cube.DoublesCube__double[]_getYDataAsPrimitive<>>
	CONSUME 
		com.opengamma.analytics.math.cube.DoublesCube : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.cube.DoublesCube__double[]_getZDataAsPrimitive<>>
	CONSUME 
		com.opengamma.analytics.math.cube.DoublesCube : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.cube.DoublesCube__int_size<>>
	CONSUME 
		com.opengamma.analytics.math.cube.DoublesCube : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.cube.DoublesCube__java.lang.Double[]_getValues<>>
	CONSUME 
		com.opengamma.analytics.math.cube.DoublesCube : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.cube.DoublesCube__java.lang.Double[]_getXData<>>
	CONSUME 
		com.opengamma.analytics.math.cube.DoublesCube : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.cube.DoublesCube__java.lang.Double[]_getYData<>>
	CONSUME 
		com.opengamma.analytics.math.cube.DoublesCube : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.cube.DoublesCube__java.lang.Double[]_getZData<>>
	CONSUME 
		com.opengamma.analytics.math.cube.DoublesCube : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.cube.DoublesCube__java.lang.Object[]_getValues<>>
	CONSUME 
		com.opengamma.analytics.math.cube.DoublesCube : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.cube.DoublesCube__java.lang.Object[]_getXData<>>
	CONSUME 
		com.opengamma.analytics.math.cube.DoublesCube : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.cube.DoublesCube__java.lang.Object[]_getYData<>>
	CONSUME 
		com.opengamma.analytics.math.cube.DoublesCube : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.cube.DoublesCube__java.lang.Object[]_getZData<>>
	CONSUME 
		com.opengamma.analytics.math.cube.DoublesCube : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.cube.DoublesCube__void_<init><double[].double[].double[].double[]>>
	CONSUME 
		double[] : 4;
	PRODUCE 
		com.opengamma.analytics.math.cube.DoublesCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.DoublesCube__void_<init><java.lang.Double[].java.lang.Double[].java.lang.Double[].java.lang.Double[]>>
	CONSUME 
		java.lang.Double[] : 4;
	PRODUCE 
		com.opengamma.analytics.math.cube.DoublesCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.DoublesCube__void_<init><java.util.List.java.util.List.java.util.List.java.util.List>>
	CONSUME 
		java.util.List : 4;
	PRODUCE 
		com.opengamma.analytics.math.cube.DoublesCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.FunctionalCubeAdditiveShiftFunction$1__java.lang.Double_evaluate<java.lang.Double[]>>
	CONSUME 
		java.lang.Double[] : 1,

		com.opengamma.analytics.math.cube.FunctionalCubeAdditiveShiftFunction$1 : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.cube.FunctionalCubeAdditiveShiftFunction$1__java.lang.Object_evaluate<java.lang.Object[]>>
	CONSUME 
		java.lang.Object[] : 1,

		com.opengamma.analytics.math.cube.FunctionalCubeAdditiveShiftFunction$1 : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.cube.FunctionalCubeAdditiveShiftFunction__com.opengamma.analytics.math.cube.Cube_evaluate<com.opengamma.analytics.math.cube.Cube.double>>
	CONSUME 
		com.opengamma.analytics.math.cube.Cube : 1,

		double : 1,

		com.opengamma.analytics.math.cube.FunctionalCubeAdditiveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.Cube : 1;
TRANSITION <com.opengamma.analytics.math.cube.FunctionalCubeAdditiveShiftFunction__com.opengamma.analytics.math.cube.Cube_evaluate<com.opengamma.analytics.math.cube.Cube.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.cube.Cube : 1,

		double : 1,

		com.opengamma.analytics.math.cube.FunctionalCubeAdditiveShiftFunction : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.Cube : 1;
TRANSITION <com.opengamma.analytics.math.cube.FunctionalCubeAdditiveShiftFunction__com.opengamma.analytics.math.cube.FunctionalDoublesCube_evaluate<com.opengamma.analytics.math.cube.FunctionalDoublesCube.double>>
	CONSUME 
		com.opengamma.analytics.math.cube.FunctionalDoublesCube : 1,

		double : 1,

		com.opengamma.analytics.math.cube.FunctionalCubeAdditiveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.FunctionalDoublesCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.FunctionalCubeAdditiveShiftFunction__com.opengamma.analytics.math.cube.FunctionalDoublesCube_evaluate<com.opengamma.analytics.math.cube.FunctionalDoublesCube.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.cube.FunctionalDoublesCube : 1,

		double : 1,

		com.opengamma.analytics.math.cube.FunctionalCubeAdditiveShiftFunction : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.FunctionalDoublesCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.FunctionalCubeAdditiveShiftFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.FunctionalCubeAdditiveShiftFunction : 1;
TRANSITION <com.opengamma.analytics.math.cube.FunctionalCubeMultiplicativeShiftFunction$1__java.lang.Double_evaluate<java.lang.Double[]>>
	CONSUME 
		com.opengamma.analytics.math.cube.FunctionalCubeMultiplicativeShiftFunction$1 : 1,

		java.lang.Double[] : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.cube.FunctionalCubeMultiplicativeShiftFunction$1__java.lang.Object_evaluate<java.lang.Object[]>>
	CONSUME 
		com.opengamma.analytics.math.cube.FunctionalCubeMultiplicativeShiftFunction$1 : 1,

		java.lang.Object[] : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.cube.FunctionalCubeMultiplicativeShiftFunction__com.opengamma.analytics.math.cube.Cube_evaluate<com.opengamma.analytics.math.cube.Cube.double>>
	CONSUME 
		com.opengamma.analytics.math.cube.Cube : 1,

		double : 1,

		com.opengamma.analytics.math.cube.FunctionalCubeMultiplicativeShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.Cube : 1;
TRANSITION <com.opengamma.analytics.math.cube.FunctionalCubeMultiplicativeShiftFunction__com.opengamma.analytics.math.cube.Cube_evaluate<com.opengamma.analytics.math.cube.Cube.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.cube.Cube : 1,

		double : 1,

		java.lang.String : 1,

		com.opengamma.analytics.math.cube.FunctionalCubeMultiplicativeShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.Cube : 1;
TRANSITION <com.opengamma.analytics.math.cube.FunctionalCubeMultiplicativeShiftFunction__com.opengamma.analytics.math.cube.FunctionalDoublesCube_evaluate<com.opengamma.analytics.math.cube.FunctionalDoublesCube.double>>
	CONSUME 
		com.opengamma.analytics.math.cube.FunctionalDoublesCube : 1,

		double : 1,

		com.opengamma.analytics.math.cube.FunctionalCubeMultiplicativeShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.FunctionalDoublesCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.FunctionalCubeMultiplicativeShiftFunction__com.opengamma.analytics.math.cube.FunctionalDoublesCube_evaluate<com.opengamma.analytics.math.cube.FunctionalDoublesCube.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.cube.FunctionalDoublesCube : 1,

		double : 1,

		java.lang.String : 1,

		com.opengamma.analytics.math.cube.FunctionalCubeMultiplicativeShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.FunctionalDoublesCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.FunctionalCubeMultiplicativeShiftFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.FunctionalCubeMultiplicativeShiftFunction : 1;
TRANSITION <com.opengamma.analytics.math.cube.FunctionalDoublesCube__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.cube.FunctionalDoublesCube : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.cube.FunctionalDoublesCube__com.opengamma.analytics.math.cube.FunctionalDoublesCube_'from'<com.opengamma.analytics.math.function.Function>>
	CONSUME 
		com.opengamma.analytics.math.function.Function : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.FunctionalDoublesCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.FunctionalDoublesCube__com.opengamma.analytics.math.cube.FunctionalDoublesCube_'from'<com.opengamma.analytics.math.function.Function.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.function.Function : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.FunctionalDoublesCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.FunctionalDoublesCube__com.opengamma.analytics.math.function.Function_getFunction<>>
	CONSUME 
		com.opengamma.analytics.math.cube.FunctionalDoublesCube : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.Function : 1;
TRANSITION <com.opengamma.analytics.math.cube.FunctionalDoublesCube__int_size<>>
	CONSUME 
		com.opengamma.analytics.math.cube.FunctionalDoublesCube : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.cube.FunctionalDoublesCube__java.lang.Double_getValue<com.opengamma.util.tuple.Triple>>
	CONSUME 
		com.opengamma.analytics.math.cube.FunctionalDoublesCube : 1,

		com.opengamma.util.tuple.Triple : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.cube.FunctionalDoublesCube__java.lang.Double_getValue<java.lang.Double.java.lang.Double.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.cube.FunctionalDoublesCube : 1,

		java.lang.Double : 3;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.cube.FunctionalDoublesCube__java.lang.Double[]_getValues<>>
	CONSUME 
		com.opengamma.analytics.math.cube.FunctionalDoublesCube : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.cube.FunctionalDoublesCube__java.lang.Double[]_getXData<>>
	CONSUME 
		com.opengamma.analytics.math.cube.FunctionalDoublesCube : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.cube.FunctionalDoublesCube__java.lang.Double[]_getYData<>>
	CONSUME 
		com.opengamma.analytics.math.cube.FunctionalDoublesCube : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.cube.FunctionalDoublesCube__java.lang.Double[]_getZData<>>
	CONSUME 
		com.opengamma.analytics.math.cube.FunctionalDoublesCube : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.cube.FunctionalDoublesCube__java.lang.Object_getValue<com.opengamma.util.tuple.Triple>>
	CONSUME 
		com.opengamma.analytics.math.cube.FunctionalDoublesCube : 1,

		com.opengamma.util.tuple.Triple : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.cube.FunctionalDoublesCube__java.lang.Object_getValue<java.lang.Object.java.lang.Object.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.cube.FunctionalDoublesCube : 1,

		java.lang.Object : 3;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.cube.FunctionalDoublesCube__java.lang.Object[]_getValues<>>
	CONSUME 
		com.opengamma.analytics.math.cube.FunctionalDoublesCube : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.cube.FunctionalDoublesCube__java.lang.Object[]_getXData<>>
	CONSUME 
		com.opengamma.analytics.math.cube.FunctionalDoublesCube : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.cube.FunctionalDoublesCube__java.lang.Object[]_getYData<>>
	CONSUME 
		com.opengamma.analytics.math.cube.FunctionalDoublesCube : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.cube.FunctionalDoublesCube__java.lang.Object[]_getZData<>>
	CONSUME 
		com.opengamma.analytics.math.cube.FunctionalDoublesCube : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.cube.FunctionalDoublesCube__void_<init><com.opengamma.analytics.math.function.Function>>
	CONSUME 
		com.opengamma.analytics.math.function.Function : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.FunctionalDoublesCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.FunctionalDoublesCube__void_<init><com.opengamma.analytics.math.function.Function.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.function.Function : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.FunctionalDoublesCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction__com.opengamma.analytics.math.cube.Cube_evaluate<com.opengamma.analytics.math.cube.Cube.double>>
	CONSUME 
		com.opengamma.analytics.math.cube.Cube : 1,

		double : 1,

		com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.Cube : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction__com.opengamma.analytics.math.cube.Cube_evaluate<com.opengamma.analytics.math.cube.Cube.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.cube.Cube : 1,

		double : 1,

		java.lang.String : 1,

		com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.Cube : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction__com.opengamma.analytics.math.cube.InterpolatedDoublesCube_evaluate<com.opengamma.analytics.math.cube.InterpolatedDoublesCube.double>>
	CONSUME 
		com.opengamma.analytics.math.cube.InterpolatedDoublesCube : 1,

		double : 1,

		com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.InterpolatedDoublesCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction__com.opengamma.analytics.math.cube.InterpolatedDoublesCube_evaluate<com.opengamma.analytics.math.cube.InterpolatedDoublesCube.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.cube.InterpolatedDoublesCube : 1,

		double : 1,

		java.lang.String : 1,

		com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.InterpolatedDoublesCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedCubeMultiplicativeShiftFunction__com.opengamma.analytics.math.cube.Cube_evaluate<com.opengamma.analytics.math.cube.Cube.double>>
	CONSUME 
		com.opengamma.analytics.math.cube.Cube : 1,

		double : 1,

		com.opengamma.analytics.math.cube.InterpolatedCubeMultiplicativeShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.Cube : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedCubeMultiplicativeShiftFunction__com.opengamma.analytics.math.cube.Cube_evaluate<com.opengamma.analytics.math.cube.Cube.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.cube.Cube : 1,

		double : 1,

		java.lang.String : 1,

		com.opengamma.analytics.math.cube.InterpolatedCubeMultiplicativeShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.Cube : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedCubeMultiplicativeShiftFunction__com.opengamma.analytics.math.cube.InterpolatedDoublesCube_evaluate<com.opengamma.analytics.math.cube.InterpolatedDoublesCube.double>>
	CONSUME 
		com.opengamma.analytics.math.cube.InterpolatedDoublesCube : 1,

		double : 1,

		com.opengamma.analytics.math.cube.InterpolatedCubeMultiplicativeShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.InterpolatedDoublesCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedCubeMultiplicativeShiftFunction__com.opengamma.analytics.math.cube.InterpolatedDoublesCube_evaluate<com.opengamma.analytics.math.cube.InterpolatedDoublesCube.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.cube.InterpolatedDoublesCube : 1,

		double : 1,

		java.lang.String : 1,

		com.opengamma.analytics.math.cube.InterpolatedCubeMultiplicativeShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.InterpolatedDoublesCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedCubeMultiplicativeShiftFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.InterpolatedCubeMultiplicativeShiftFunction : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedDoublesCube__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.cube.InterpolatedDoublesCube : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedDoublesCube__com.opengamma.analytics.math.interpolation.InterpolatorND_getInterpolator<>>
	CONSUME 
		com.opengamma.analytics.math.cube.InterpolatedDoublesCube : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.InterpolatorND : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedDoublesCube__java.lang.Double_getValue<com.opengamma.util.tuple.Triple>>
	CONSUME 
		com.opengamma.analytics.math.cube.InterpolatedDoublesCube : 1,

		com.opengamma.util.tuple.Triple : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedDoublesCube__java.lang.Double_getValue<java.lang.Double.java.lang.Double.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.cube.InterpolatedDoublesCube : 1,

		java.lang.Double : 3;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedDoublesCube__java.lang.Object_getValue<com.opengamma.util.tuple.Triple>>
	CONSUME 
		com.opengamma.analytics.math.cube.InterpolatedDoublesCube : 1,

		com.opengamma.util.tuple.Triple : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedDoublesCube__java.lang.Object_getValue<java.lang.Object.java.lang.Object.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.cube.InterpolatedDoublesCube : 1,

		java.lang.Object : 3;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction__com.opengamma.analytics.math.cube.Cube_evaluate<com.opengamma.analytics.math.cube.Cube.double>>
	CONSUME 
		com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction : 1,

		com.opengamma.analytics.math.cube.Cube : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.Cube : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction__com.opengamma.analytics.math.cube.Cube_evaluate<com.opengamma.analytics.math.cube.Cube.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction : 1,

		com.opengamma.analytics.math.cube.Cube : 1,

		double : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.Cube : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction__com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube_evaluate<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube.double>>
	CONSUME 
		com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction : 1,

		com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction__com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube_evaluate<com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction : 1,

		com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube : 1,

		double : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube__com.opengamma.analytics.math.Plane_getPlane<>>
	CONSUME 
		com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube : 1;
	PRODUCE 
		com.opengamma.analytics.math.Plane : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube__com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube_'from'<com.opengamma.analytics.math.Plane.double[].com.opengamma.analytics.math.surface.Surface[].com.opengamma.analytics.math.interpolation.Interpolator1D>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.Plane : 1,

		com.opengamma.analytics.math.surface.Surface[] : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube__com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube_'from'<com.opengamma.analytics.math.Plane.java.lang.Double[].com.opengamma.analytics.math.surface.Surface[].com.opengamma.analytics.math.interpolation.Interpolator1D>>
	CONSUME 
		java.lang.Double[] : 1,

		com.opengamma.analytics.math.Plane : 1,

		com.opengamma.analytics.math.surface.Surface[] : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube__com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube_'from'<com.opengamma.analytics.math.Plane.java.util.List.java.util.List.com.opengamma.analytics.math.interpolation.Interpolator1D>>
	CONSUME 
		java.util.List : 2,

		com.opengamma.analytics.math.Plane : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube__com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube_'from'<com.opengamma.analytics.math.Plane.java.util.Map.com.opengamma.analytics.math.interpolation.Interpolator1D>>
	CONSUME 
		com.opengamma.analytics.math.Plane : 1,

		java.util.Map : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube__com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube_'from'<com.opengamma.analytics.math.Plane.java.util.Map.com.opengamma.analytics.math.interpolation.Interpolator1D.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.Plane : 1,

		java.util.Map : 1,

		java.lang.String : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube__com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube_fromSorted<com.opengamma.analytics.math.Plane.double[].com.opengamma.analytics.math.surface.Surface[].com.opengamma.analytics.math.interpolation.Interpolator1D>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.Plane : 1,

		com.opengamma.analytics.math.surface.Surface[] : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube__com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube_fromSorted<com.opengamma.analytics.math.Plane.java.lang.Double[].com.opengamma.analytics.math.surface.Surface[].com.opengamma.analytics.math.interpolation.Interpolator1D>>
	CONSUME 
		java.lang.Double[] : 1,

		com.opengamma.analytics.math.Plane : 1,

		com.opengamma.analytics.math.surface.Surface[] : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube__com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube_fromSorted<com.opengamma.analytics.math.Plane.java.util.List.java.util.List.com.opengamma.analytics.math.interpolation.Interpolator1D>>
	CONSUME 
		java.util.List : 2,

		com.opengamma.analytics.math.Plane : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube__com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube_fromSorted<com.opengamma.analytics.math.Plane.java.util.Map.com.opengamma.analytics.math.interpolation.Interpolator1D>>
	CONSUME 
		com.opengamma.analytics.math.Plane : 1,

		java.util.Map : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube__com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube_fromSorted<com.opengamma.analytics.math.Plane.java.util.Map.com.opengamma.analytics.math.interpolation.Interpolator1D.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.Plane : 1,

		java.util.Map : 1,

		java.lang.String : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube__com.opengamma.analytics.math.interpolation.Interpolator1D_getInterpolator<>>
	CONSUME 
		com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube__com.opengamma.analytics.math.surface.Surface[]_getSurfaces<>>
	CONSUME 
		com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface[] : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube__double[]_getPoints<>>
	CONSUME 
		com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube__int_size<>>
	CONSUME 
		com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube__java.lang.Double_getValue<com.opengamma.util.tuple.Triple>>
	CONSUME 
		com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube : 1,

		com.opengamma.util.tuple.Triple : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube__java.lang.Double_getValue<java.lang.Double.java.lang.Double.java.lang.Double>>
	CONSUME 
		java.lang.Double : 3,

		com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube__java.lang.Double[]_getValues<>>
	CONSUME 
		com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube__java.lang.Double[]_getXData<>>
	CONSUME 
		com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube__java.lang.Double[]_getYData<>>
	CONSUME 
		com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube__java.lang.Double[]_getZData<>>
	CONSUME 
		com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube__java.lang.Object_getValue<com.opengamma.util.tuple.Triple>>
	CONSUME 
		com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube : 1,

		com.opengamma.util.tuple.Triple : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube__java.lang.Object_getValue<java.lang.Object.java.lang.Object.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube : 1,

		java.lang.Object : 3;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube__java.lang.Object[]_getValues<>>
	CONSUME 
		com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube__java.lang.Object[]_getXData<>>
	CONSUME 
		com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube__java.lang.Object[]_getYData<>>
	CONSUME 
		com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube__java.lang.Object[]_getZData<>>
	CONSUME 
		com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube__void_<init><com.opengamma.analytics.math.Plane.java.util.Map.com.opengamma.analytics.math.interpolation.Interpolator1D.boolean>>
	CONSUME 
		boolean : 1,

		com.opengamma.analytics.math.Plane : 1,

		java.util.Map : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.NodalCube__com.opengamma.analytics.math.cube.NodalCube_'from'<java.lang.Object[].java.lang.Object[].java.lang.Object[].java.lang.Object[]>>
	CONSUME 
		java.lang.Object[] : 4;
	PRODUCE 
		com.opengamma.analytics.math.cube.NodalCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.NodalCube__com.opengamma.analytics.math.cube.NodalCube_'from'<java.util.List.java.util.List.java.util.List.java.util.List>>
	CONSUME 
		java.util.List : 4;
	PRODUCE 
		com.opengamma.analytics.math.cube.NodalCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.NodalCube__int_size<>>
	CONSUME 
		com.opengamma.analytics.math.cube.NodalCube : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.cube.NodalCube__java.lang.Object_getValue<com.opengamma.util.tuple.Triple>>
	CONSUME 
		com.opengamma.util.tuple.Triple : 1,

		com.opengamma.analytics.math.cube.NodalCube : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.cube.NodalCube__java.lang.Object_getValue<java.lang.Object.java.lang.Object.java.lang.Object>>
	CONSUME 
		java.lang.Object : 3,

		com.opengamma.analytics.math.cube.NodalCube : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.cube.NodalCube__java.lang.Object[]_getValues<>>
	CONSUME 
		com.opengamma.analytics.math.cube.NodalCube : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.cube.NodalCube__java.lang.Object[]_getXData<>>
	CONSUME 
		com.opengamma.analytics.math.cube.NodalCube : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.cube.NodalCube__java.lang.Object[]_getYData<>>
	CONSUME 
		com.opengamma.analytics.math.cube.NodalCube : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.cube.NodalCube__java.lang.Object[]_getZData<>>
	CONSUME 
		com.opengamma.analytics.math.cube.NodalCube : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.cube.NodalCube__java.lang.String_getName<>>
	CONSUME 
		com.opengamma.analytics.math.cube.NodalCube : 1;
	PRODUCE 
		java.lang.String : 1;
TRANSITION <com.opengamma.analytics.math.cube.NodalCube__void_<init><java.lang.Object[].java.lang.Object[].java.lang.Object[].java.lang.Object[]>>
	CONSUME 
		java.lang.Object[] : 4;
	PRODUCE 
		com.opengamma.analytics.math.cube.NodalCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.NodalCube__void_<init><java.util.Collection.java.lang.String>>
	CONSUME 
		java.util.Collection : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.NodalCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.NodalCube__void_<init><java.util.List.java.util.List.java.util.List.java.util.List>>
	CONSUME 
		java.util.List : 4;
	PRODUCE 
		com.opengamma.analytics.math.cube.NodalCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.NodalCubeAdditiveShiftFunction__com.opengamma.analytics.math.cube.Cube_evaluate<com.opengamma.analytics.math.cube.Cube.double>>
	CONSUME 
		com.opengamma.analytics.math.cube.Cube : 1,

		com.opengamma.analytics.math.cube.NodalCubeAdditiveShiftFunction : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.Cube : 1;
TRANSITION <com.opengamma.analytics.math.cube.NodalCubeAdditiveShiftFunction__com.opengamma.analytics.math.cube.Cube_evaluate<com.opengamma.analytics.math.cube.Cube.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.cube.Cube : 1,

		com.opengamma.analytics.math.cube.NodalCubeAdditiveShiftFunction : 1,

		double : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.Cube : 1;
TRANSITION <com.opengamma.analytics.math.cube.NodalCubeAdditiveShiftFunction__com.opengamma.analytics.math.cube.NodalDoublesCube_evaluate<com.opengamma.analytics.math.cube.NodalDoublesCube.double>>
	CONSUME 
		com.opengamma.analytics.math.cube.NodalDoublesCube : 1,

		com.opengamma.analytics.math.cube.NodalCubeAdditiveShiftFunction : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.NodalDoublesCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.NodalCubeAdditiveShiftFunction__com.opengamma.analytics.math.cube.NodalDoublesCube_evaluate<com.opengamma.analytics.math.cube.NodalDoublesCube.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.cube.NodalDoublesCube : 1,

		com.opengamma.analytics.math.cube.NodalCubeAdditiveShiftFunction : 1,

		double : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.NodalDoublesCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.NodalCubeAdditiveShiftFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.NodalCubeAdditiveShiftFunction : 1;
TRANSITION <com.opengamma.analytics.math.cube.NodalCubeMultiplicativeShiftFunction__com.opengamma.analytics.math.cube.Cube_evaluate<com.opengamma.analytics.math.cube.Cube.double>>
	CONSUME 
		com.opengamma.analytics.math.cube.Cube : 1,

		double : 1,

		com.opengamma.analytics.math.cube.NodalCubeMultiplicativeShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.Cube : 1;
TRANSITION <com.opengamma.analytics.math.cube.NodalCubeMultiplicativeShiftFunction__com.opengamma.analytics.math.cube.Cube_evaluate<com.opengamma.analytics.math.cube.Cube.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.cube.Cube : 1,

		double : 1,

		java.lang.String : 1,

		com.opengamma.analytics.math.cube.NodalCubeMultiplicativeShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.Cube : 1;
TRANSITION <com.opengamma.analytics.math.cube.NodalCubeMultiplicativeShiftFunction__com.opengamma.analytics.math.cube.NodalDoublesCube_evaluate<com.opengamma.analytics.math.cube.NodalDoublesCube.double>>
	CONSUME 
		com.opengamma.analytics.math.cube.NodalDoublesCube : 1,

		double : 1,

		com.opengamma.analytics.math.cube.NodalCubeMultiplicativeShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.NodalDoublesCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.NodalCubeMultiplicativeShiftFunction__com.opengamma.analytics.math.cube.NodalDoublesCube_evaluate<com.opengamma.analytics.math.cube.NodalDoublesCube.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.cube.NodalDoublesCube : 1,

		double : 1,

		java.lang.String : 1,

		com.opengamma.analytics.math.cube.NodalCubeMultiplicativeShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.NodalDoublesCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.NodalCubeMultiplicativeShiftFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.NodalCubeMultiplicativeShiftFunction : 1;
TRANSITION <com.opengamma.analytics.math.cube.NodalDoublesCube__com.opengamma.analytics.math.cube.NodalDoublesCube_'from'<double[].double[].double[].double[]>>
	CONSUME 
		double[] : 4;
	PRODUCE 
		com.opengamma.analytics.math.cube.NodalDoublesCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.NodalDoublesCube__com.opengamma.analytics.math.cube.NodalDoublesCube_'from'<java.lang.Double[].java.lang.Double[].java.lang.Double[].java.lang.Double[]>>
	CONSUME 
		java.lang.Double[] : 4;
	PRODUCE 
		com.opengamma.analytics.math.cube.NodalDoublesCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.NodalDoublesCube__com.opengamma.analytics.math.cube.NodalDoublesCube_'from'<java.util.List.java.util.List.java.util.List.java.util.List>>
	CONSUME 
		java.util.List : 4;
	PRODUCE 
		com.opengamma.analytics.math.cube.NodalDoublesCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.NodalDoublesCube__java.lang.Double_getValue<com.opengamma.util.tuple.Triple>>
	CONSUME 
		com.opengamma.analytics.math.cube.NodalDoublesCube : 1,

		com.opengamma.util.tuple.Triple : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.cube.NodalDoublesCube__java.lang.Double_getValue<java.lang.Double.java.lang.Double.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.cube.NodalDoublesCube : 1,

		java.lang.Double : 3;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.cube.NodalDoublesCube__java.lang.Object_getValue<com.opengamma.util.tuple.Triple>>
	CONSUME 
		com.opengamma.analytics.math.cube.NodalDoublesCube : 1,

		com.opengamma.util.tuple.Triple : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.cube.NodalDoublesCube__java.lang.Object_getValue<java.lang.Object.java.lang.Object.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.cube.NodalDoublesCube : 1,

		java.lang.Object : 3;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.cube.NodalDoublesCube__void_<init><double[].double[].double[].double[]>>
	CONSUME 
		double[] : 4;
	PRODUCE 
		com.opengamma.analytics.math.cube.NodalDoublesCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.NodalDoublesCube__void_<init><java.lang.Double[].java.lang.Double[].java.lang.Double[].java.lang.Double[]>>
	CONSUME 
		java.lang.Double[] : 4;
	PRODUCE 
		com.opengamma.analytics.math.cube.NodalDoublesCube : 1;
TRANSITION <com.opengamma.analytics.math.cube.NodalDoublesCube__void_<init><java.util.List.java.util.List.java.util.List.java.util.List>>
	CONSUME 
		java.util.List : 4;
	PRODUCE 
		com.opengamma.analytics.math.cube.NodalDoublesCube : 1;
TRANSITION <com.opengamma.analytics.math.curve.AddCurveSpreadFunction$1__java.lang.Double_evaluate<java.lang.Double[]>>
	CONSUME 
		java.lang.Double[] : 1,

		com.opengamma.analytics.math.curve.AddCurveSpreadFunction$1 : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.curve.AddCurveSpreadFunction$1__java.lang.Object_evaluate<java.lang.Object[]>>
	CONSUME 
		java.lang.Object[] : 1,

		com.opengamma.analytics.math.curve.AddCurveSpreadFunction$1 : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.curve.AddCurveSpreadFunction__com.opengamma.analytics.math.curve.CurveSpreadFunction_getInstance<>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.CurveSpreadFunction : 1;
TRANSITION <com.opengamma.analytics.math.curve.AddCurveSpreadFunction__com.opengamma.analytics.math.function.Function_evaluate<com.opengamma.analytics.math.curve.Curve[]>>
	CONSUME 
		com.opengamma.analytics.math.curve.AddCurveSpreadFunction : 1,

		com.opengamma.analytics.math.curve.Curve[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.Function : 1;
TRANSITION <com.opengamma.analytics.math.curve.AddCurveSpreadFunction__java.lang.Object_evaluate<java.lang.Object[]>>
	CONSUME 
		java.lang.Object[] : 1,

		com.opengamma.analytics.math.curve.AddCurveSpreadFunction : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.curve.AddCurveSpreadFunction__java.lang.String_getName<>>
	CONSUME 
		com.opengamma.analytics.math.curve.AddCurveSpreadFunction : 1;
	PRODUCE 
		java.lang.String : 1;
TRANSITION <com.opengamma.analytics.math.curve.AddCurveSpreadFunction__java.lang.String_getOperationName<>>
	CONSUME 
		com.opengamma.analytics.math.curve.AddCurveSpreadFunction : 1;
	PRODUCE 
		java.lang.String : 1;
TRANSITION <com.opengamma.analytics.math.curve.AddCurveSpreadFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.AddCurveSpreadFunction : 1;
TRANSITION <com.opengamma.analytics.math.curve.ArraysDoublesCurve$Meta__java.lang.Class_beanType<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve$Meta : 1;
	PRODUCE 
		java.lang.Class : 1;
TRANSITION <com.opengamma.analytics.math.curve.ArraysDoublesCurve$Meta__java.util.Map_metaPropertyMap<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve$Meta : 1;
	PRODUCE 
		java.util.Map : 1;
TRANSITION <com.opengamma.analytics.math.curve.ArraysDoublesCurve$Meta__org.joda.beans.BeanBuilder_builder<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve$Meta : 1;
	PRODUCE 
		org.joda.beans.BeanBuilder : 1;
TRANSITION <com.opengamma.analytics.math.curve.ArraysDoublesCurve$Meta__org.joda.beans.MetaProperty_n<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve$Meta : 1;
	PRODUCE 
		org.joda.beans.MetaProperty : 1;
TRANSITION <com.opengamma.analytics.math.curve.ArraysDoublesCurve$Meta__org.joda.beans.MetaProperty_xData<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve$Meta : 1;
	PRODUCE 
		org.joda.beans.MetaProperty : 1;
TRANSITION <com.opengamma.analytics.math.curve.ArraysDoublesCurve$Meta__org.joda.beans.MetaProperty_xDataObject<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve$Meta : 1;
	PRODUCE 
		org.joda.beans.MetaProperty : 1;
TRANSITION <com.opengamma.analytics.math.curve.ArraysDoublesCurve$Meta__org.joda.beans.MetaProperty_yData<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve$Meta : 1;
	PRODUCE 
		org.joda.beans.MetaProperty : 1;
TRANSITION <com.opengamma.analytics.math.curve.ArraysDoublesCurve$Meta__org.joda.beans.MetaProperty_yDataObject<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve$Meta : 1;
	PRODUCE 
		org.joda.beans.MetaProperty : 1;
TRANSITION <com.opengamma.analytics.math.curve.ArraysDoublesCurve__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.curve.ArraysDoublesCurve__com.opengamma.analytics.math.curve.ArraysDoublesCurve$Meta_meta<>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.ArraysDoublesCurve__com.opengamma.analytics.math.curve.ArraysDoublesCurve$Meta_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.ArraysDoublesCurve__com.opengamma.analytics.math.curve.Curve$Meta_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.ArraysDoublesCurve__com.opengamma.analytics.math.curve.DoublesCurve$Meta_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.DoublesCurve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.ArraysDoublesCurve__double[]_getXDataAsPrimitive<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.curve.ArraysDoublesCurve__double[]_getYDataAsPrimitive<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.curve.ArraysDoublesCurve__int_size<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.curve.ArraysDoublesCurve__java.lang.Comparable[]_getXData<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve : 1;
	PRODUCE 
		java.lang.Comparable[] : 1;
TRANSITION <com.opengamma.analytics.math.curve.ArraysDoublesCurve__java.lang.Double[]_getXData<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.curve.ArraysDoublesCurve__java.lang.Double[]_getYData<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.curve.ArraysDoublesCurve__java.lang.Object[]_getYData<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.curve.ArraysDoublesCurve__org.joda.beans.MetaBean_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve : 1;
	PRODUCE 
		org.joda.beans.MetaBean : 1;
TRANSITION <com.opengamma.analytics.math.curve.ArraysDoublesCurve__org.joda.beans.Property_n<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve : 1;
	PRODUCE 
		org.joda.beans.Property : 1;
TRANSITION <com.opengamma.analytics.math.curve.ArraysDoublesCurve__org.joda.beans.Property_xData<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve : 1;
	PRODUCE 
		org.joda.beans.Property : 1;
TRANSITION <com.opengamma.analytics.math.curve.ArraysDoublesCurve__org.joda.beans.Property_xDataObject<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve : 1;
	PRODUCE 
		org.joda.beans.Property : 1;
TRANSITION <com.opengamma.analytics.math.curve.ArraysDoublesCurve__org.joda.beans.Property_yData<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve : 1;
	PRODUCE 
		org.joda.beans.Property : 1;
TRANSITION <com.opengamma.analytics.math.curve.ArraysDoublesCurve__org.joda.beans.Property_yDataObject<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve : 1;
	PRODUCE 
		org.joda.beans.Property : 1;
TRANSITION <com.opengamma.analytics.math.curve.ArraysDoublesCurve__void_<init><com.opengamma.util.tuple.DoublesPair[].boolean>>
	CONSUME 
		boolean : 1,

		com.opengamma.util.tuple.DoublesPair[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.ArraysDoublesCurve__void_<init><com.opengamma.util.tuple.DoublesPair[].boolean.java.lang.String>>
	CONSUME 
		boolean : 1,

		java.lang.String : 1,

		com.opengamma.util.tuple.DoublesPair[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.ArraysDoublesCurve__void_<init><double[].double[].boolean>>
	CONSUME 
		boolean : 1,

		double[] : 2;
	PRODUCE 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.ArraysDoublesCurve__void_<init><double[].double[].boolean.java.lang.String>>
	CONSUME 
		boolean : 1,

		double[] : 2,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.ArraysDoublesCurve__void_<init><java.lang.Double[].java.lang.Double[].boolean>>
	CONSUME 
		java.lang.Double[] : 2,

		boolean : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.ArraysDoublesCurve__void_<init><java.lang.Double[].java.lang.Double[].boolean.java.lang.String>>
	CONSUME 
		java.lang.Double[] : 2,

		boolean : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.ArraysDoublesCurve__void_<init><java.util.List.boolean>>
	CONSUME 
		java.util.List : 1,

		boolean : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.ArraysDoublesCurve__void_<init><java.util.List.boolean.java.lang.String>>
	CONSUME 
		java.util.List : 1,

		boolean : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.ArraysDoublesCurve__void_<init><java.util.List.java.util.List.boolean>>
	CONSUME 
		java.util.List : 2,

		boolean : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.ArraysDoublesCurve__void_<init><java.util.List.java.util.List.boolean.java.lang.String>>
	CONSUME 
		java.util.List : 2,

		boolean : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.ArraysDoublesCurve__void_<init><java.util.Map.boolean>>
	CONSUME 
		boolean : 1,

		java.util.Map : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.ArraysDoublesCurve__void_<init><java.util.Map.boolean.java.lang.String>>
	CONSUME 
		boolean : 1,

		java.util.Map : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.ArraysDoublesCurve__void_<init><java.util.Set.boolean>>
	CONSUME 
		boolean : 1,

		java.util.Set : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.ArraysDoublesCurve__void_<init><java.util.Set.boolean.java.lang.String>>
	CONSUME 
		boolean : 1,

		java.util.Set : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.ConstantCurveShiftFunction__com.opengamma.analytics.math.curve.ConstantDoublesCurve_evaluate<com.opengamma.analytics.math.curve.ConstantDoublesCurve.double>>
	CONSUME 
		com.opengamma.analytics.math.curve.ConstantCurveShiftFunction : 1,

		double : 1,

		com.opengamma.analytics.math.curve.ConstantDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ConstantDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.ConstantCurveShiftFunction__com.opengamma.analytics.math.curve.ConstantDoublesCurve_evaluate<com.opengamma.analytics.math.curve.ConstantDoublesCurve.double.double>>
	CONSUME 
		com.opengamma.analytics.math.curve.ConstantCurveShiftFunction : 1,

		double : 2,

		com.opengamma.analytics.math.curve.ConstantDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ConstantDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.ConstantCurveShiftFunction__com.opengamma.analytics.math.curve.ConstantDoublesCurve_evaluate<com.opengamma.analytics.math.curve.ConstantDoublesCurve.double.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.curve.ConstantCurveShiftFunction : 1,

		double : 2,

		java.lang.String : 1,

		com.opengamma.analytics.math.curve.ConstantDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ConstantDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.ConstantCurveShiftFunction__com.opengamma.analytics.math.curve.ConstantDoublesCurve_evaluate<com.opengamma.analytics.math.curve.ConstantDoublesCurve.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.curve.ConstantCurveShiftFunction : 1,

		double : 1,

		java.lang.String : 1,

		com.opengamma.analytics.math.curve.ConstantDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ConstantDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.ConstantCurveShiftFunction__com.opengamma.analytics.math.curve.ConstantDoublesCurve_evaluate<com.opengamma.analytics.math.curve.ConstantDoublesCurve.double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.curve.ConstantCurveShiftFunction : 1,

		double[] : 2,

		com.opengamma.analytics.math.curve.ConstantDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ConstantDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.ConstantCurveShiftFunction__com.opengamma.analytics.math.curve.ConstantDoublesCurve_evaluate<com.opengamma.analytics.math.curve.ConstantDoublesCurve.double[].double[].java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.curve.ConstantCurveShiftFunction : 1,

		double[] : 2,

		java.lang.String : 1,

		com.opengamma.analytics.math.curve.ConstantDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ConstantDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.ConstantCurveShiftFunction__com.opengamma.analytics.math.curve.Curve_evaluate<com.opengamma.analytics.math.curve.Curve.double>>
	CONSUME 
		com.opengamma.analytics.math.curve.ConstantCurveShiftFunction : 1,

		com.opengamma.analytics.math.curve.Curve : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve : 1;
TRANSITION <com.opengamma.analytics.math.curve.ConstantCurveShiftFunction__com.opengamma.analytics.math.curve.Curve_evaluate<com.opengamma.analytics.math.curve.Curve.double.double>>
	CONSUME 
		com.opengamma.analytics.math.curve.ConstantCurveShiftFunction : 1,

		com.opengamma.analytics.math.curve.Curve : 1,

		double : 2;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve : 1;
TRANSITION <com.opengamma.analytics.math.curve.ConstantCurveShiftFunction__com.opengamma.analytics.math.curve.Curve_evaluate<com.opengamma.analytics.math.curve.Curve.double.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.curve.ConstantCurveShiftFunction : 1,

		com.opengamma.analytics.math.curve.Curve : 1,

		double : 2,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve : 1;
TRANSITION <com.opengamma.analytics.math.curve.ConstantCurveShiftFunction__com.opengamma.analytics.math.curve.Curve_evaluate<com.opengamma.analytics.math.curve.Curve.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.curve.ConstantCurveShiftFunction : 1,

		com.opengamma.analytics.math.curve.Curve : 1,

		double : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve : 1;
TRANSITION <com.opengamma.analytics.math.curve.ConstantCurveShiftFunction__com.opengamma.analytics.math.curve.Curve_evaluate<com.opengamma.analytics.math.curve.Curve.double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.curve.ConstantCurveShiftFunction : 1,

		com.opengamma.analytics.math.curve.Curve : 1,

		double[] : 2;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve : 1;
TRANSITION <com.opengamma.analytics.math.curve.ConstantCurveShiftFunction__com.opengamma.analytics.math.curve.Curve_evaluate<com.opengamma.analytics.math.curve.Curve.double[].double[].java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.curve.ConstantCurveShiftFunction : 1,

		com.opengamma.analytics.math.curve.Curve : 1,

		double[] : 2,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve : 1;
TRANSITION <com.opengamma.analytics.math.curve.ConstantCurveShiftFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ConstantCurveShiftFunction : 1;
TRANSITION <com.opengamma.analytics.math.curve.ConstantDoublesCurve$Meta__java.lang.Class_beanType<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ConstantDoublesCurve$Meta : 1;
	PRODUCE 
		java.lang.Class : 1;
TRANSITION <com.opengamma.analytics.math.curve.ConstantDoublesCurve$Meta__java.util.Map_metaPropertyMap<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ConstantDoublesCurve$Meta : 1;
	PRODUCE 
		java.util.Map : 1;
TRANSITION <com.opengamma.analytics.math.curve.ConstantDoublesCurve$Meta__org.joda.beans.BeanBuilder_builder<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ConstantDoublesCurve$Meta : 1;
	PRODUCE 
		org.joda.beans.BeanBuilder : 1;
TRANSITION <com.opengamma.analytics.math.curve.ConstantDoublesCurve$Meta__org.joda.beans.MetaProperty_y<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ConstantDoublesCurve$Meta : 1;
	PRODUCE 
		org.joda.beans.MetaProperty : 1;
TRANSITION <com.opengamma.analytics.math.curve.ConstantDoublesCurve__boolean_equals<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.curve.ConstantDoublesCurve : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.curve.ConstantDoublesCurve__com.opengamma.analytics.math.curve.ConstantDoublesCurve_'from'<double>>
	CONSUME 
		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ConstantDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.ConstantDoublesCurve__com.opengamma.analytics.math.curve.ConstantDoublesCurve_'from'<double.java.lang.String>>
	CONSUME 
		double : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ConstantDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.ConstantDoublesCurve__com.opengamma.analytics.math.curve.ConstantDoublesCurve_clone<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ConstantDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ConstantDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.ConstantDoublesCurve__com.opengamma.analytics.math.curve.ConstantDoublesCurve$Meta_meta<>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ConstantDoublesCurve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.ConstantDoublesCurve__com.opengamma.analytics.math.curve.ConstantDoublesCurve$Meta_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ConstantDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ConstantDoublesCurve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.ConstantDoublesCurve__com.opengamma.analytics.math.curve.Curve_clone<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ConstantDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve : 1;
TRANSITION <com.opengamma.analytics.math.curve.ConstantDoublesCurve__com.opengamma.analytics.math.curve.Curve$Meta_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ConstantDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.ConstantDoublesCurve__com.opengamma.analytics.math.curve.DoublesCurve$Meta_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ConstantDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.DoublesCurve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.ConstantDoublesCurve__com.opengamma.analytics.math.curve.InterpolatedDoublesCurve_toInterpolatedDoublesCurve<double[].com.opengamma.analytics.math.interpolation.Interpolator1D>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1,

		com.opengamma.analytics.math.curve.ConstantDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.ConstantDoublesCurve__double_getDyDx<double>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.curve.ConstantDoublesCurve : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.curve.ConstantDoublesCurve__int_size<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ConstantDoublesCurve : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.curve.ConstantDoublesCurve__java.lang.Comparable[]_getXData<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ConstantDoublesCurve : 1;
	PRODUCE 
		java.lang.Comparable[] : 1;
TRANSITION <com.opengamma.analytics.math.curve.ConstantDoublesCurve__java.lang.Double_getYValue<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.curve.ConstantDoublesCurve : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.curve.ConstantDoublesCurve__java.lang.Double[]_getXData<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ConstantDoublesCurve : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.curve.ConstantDoublesCurve__java.lang.Double[]_getYData<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ConstantDoublesCurve : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.curve.ConstantDoublesCurve__java.lang.Double[]_getYValueParameterSensitivity<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.curve.ConstantDoublesCurve : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.curve.ConstantDoublesCurve__java.lang.Object_clone<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ConstantDoublesCurve : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.curve.ConstantDoublesCurve__java.lang.Object_getYValue<java.lang.Comparable>>
	CONSUME 
		java.lang.Comparable : 1,

		com.opengamma.analytics.math.curve.ConstantDoublesCurve : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.curve.ConstantDoublesCurve__java.lang.Object[]_getYData<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ConstantDoublesCurve : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.curve.ConstantDoublesCurve__org.joda.beans.MetaBean_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ConstantDoublesCurve : 1;
	PRODUCE 
		org.joda.beans.MetaBean : 1;
TRANSITION <com.opengamma.analytics.math.curve.ConstantDoublesCurve__org.joda.beans.Property_y<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ConstantDoublesCurve : 1;
	PRODUCE 
		org.joda.beans.Property : 1;
TRANSITION <com.opengamma.analytics.math.curve.ConstantDoublesCurve__void_<init><double>>
	CONSUME 
		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ConstantDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.ConstantDoublesCurve__void_<init><double.java.lang.String>>
	CONSUME 
		double : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ConstantDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.Curve$1__java.lang.Object_evaluate<java.lang.Comparable>>
	CONSUME 
		com.opengamma.analytics.math.curve.Curve$1 : 1,

		java.lang.Comparable : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.curve.Curve$1__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.curve.Curve$1 : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.curve.Curve$Meta__java.lang.Class_beanType<>>
	CONSUME 
		com.opengamma.analytics.math.curve.Curve$Meta : 1;
	PRODUCE 
		java.lang.Class : 1;
TRANSITION <com.opengamma.analytics.math.curve.Curve$Meta__java.util.Map_metaPropertyMap<>>
	CONSUME 
		com.opengamma.analytics.math.curve.Curve$Meta : 1;
	PRODUCE 
		java.util.Map : 1;
TRANSITION <com.opengamma.analytics.math.curve.Curve$Meta__org.joda.beans.BeanBuilder_builder<>>
	CONSUME 
		com.opengamma.analytics.math.curve.Curve$Meta : 1;
	PRODUCE 
		org.joda.beans.BeanBuilder : 1;
TRANSITION <com.opengamma.analytics.math.curve.Curve$Meta__org.joda.beans.MetaProperty_name<>>
	CONSUME 
		com.opengamma.analytics.math.curve.Curve$Meta : 1;
	PRODUCE 
		org.joda.beans.MetaProperty : 1;
TRANSITION <com.opengamma.analytics.math.curve.Curve__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.curve.Curve : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.curve.Curve__com.opengamma.analytics.math.curve.Curve_clone<>>
	CONSUME 
		com.opengamma.analytics.math.curve.Curve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve : 1;
TRANSITION <com.opengamma.analytics.math.curve.Curve__com.opengamma.analytics.math.curve.Curve$Meta_meta<>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.Curve__com.opengamma.analytics.math.curve.Curve$Meta_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.Curve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.Curve__com.opengamma.analytics.math.curve.Curve$Meta_metaCurve<java.lang.Class.java.lang.Class>>
	CONSUME 
		java.lang.Class : 2;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.Curve__com.opengamma.analytics.math.function.Function1D_toFunction1D<>>
	CONSUME 
		com.opengamma.analytics.math.curve.Curve : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.Function1D : 1;
TRANSITION <com.opengamma.analytics.math.curve.Curve__int_size<>>
	CONSUME 
		com.opengamma.analytics.math.curve.Curve : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.curve.Curve__java.lang.Comparable[]_getXData<>>
	CONSUME 
		com.opengamma.analytics.math.curve.Curve : 1;
	PRODUCE 
		java.lang.Comparable[] : 1;
TRANSITION <com.opengamma.analytics.math.curve.Curve__java.lang.Object_clone<>>
	CONSUME 
		com.opengamma.analytics.math.curve.Curve : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.curve.Curve__java.lang.Object_getYValue<java.lang.Comparable>>
	CONSUME 
		com.opengamma.analytics.math.curve.Curve : 1,

		java.lang.Comparable : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.curve.Curve__java.lang.Object[]_getYData<>>
	CONSUME 
		com.opengamma.analytics.math.curve.Curve : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.curve.Curve__java.lang.String_getName<>>
	CONSUME 
		com.opengamma.analytics.math.curve.Curve : 1;
	PRODUCE 
		java.lang.String : 1;
TRANSITION <com.opengamma.analytics.math.curve.Curve__java.util.Set_propertyNames<>>
	CONSUME 
		com.opengamma.analytics.math.curve.Curve : 1;
	PRODUCE 
		java.util.Set : 1;
TRANSITION <com.opengamma.analytics.math.curve.Curve__org.joda.beans.MetaBean_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.Curve : 1;
	PRODUCE 
		org.joda.beans.MetaBean : 1;
TRANSITION <com.opengamma.analytics.math.curve.Curve__org.joda.beans.Property_name<>>
	CONSUME 
		com.opengamma.analytics.math.curve.Curve : 1;
	PRODUCE 
		org.joda.beans.Property : 1;
TRANSITION <com.opengamma.analytics.math.curve.Curve__org.joda.beans.Property_property<java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.curve.Curve : 1,

		java.lang.String : 1;
	PRODUCE 
		org.joda.beans.Property : 1;
TRANSITION <com.opengamma.analytics.math.curve.CurveShiftFunction__com.opengamma.analytics.math.curve.Curve_evaluate<com.opengamma.analytics.math.curve.Curve.double>>
	CONSUME 
		com.opengamma.analytics.math.curve.Curve : 1,

		double : 1,

		com.opengamma.analytics.math.curve.CurveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve : 1;
TRANSITION <com.opengamma.analytics.math.curve.CurveShiftFunction__com.opengamma.analytics.math.curve.Curve_evaluate<com.opengamma.analytics.math.curve.Curve.double.double>>
	CONSUME 
		com.opengamma.analytics.math.curve.Curve : 1,

		double : 2,

		com.opengamma.analytics.math.curve.CurveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve : 1;
TRANSITION <com.opengamma.analytics.math.curve.CurveShiftFunction__com.opengamma.analytics.math.curve.Curve_evaluate<com.opengamma.analytics.math.curve.Curve.double.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.curve.Curve : 1,

		double : 2,

		com.opengamma.analytics.math.curve.CurveShiftFunction : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve : 1;
TRANSITION <com.opengamma.analytics.math.curve.CurveShiftFunction__com.opengamma.analytics.math.curve.Curve_evaluate<com.opengamma.analytics.math.curve.Curve.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.curve.Curve : 1,

		double : 1,

		com.opengamma.analytics.math.curve.CurveShiftFunction : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve : 1;
TRANSITION <com.opengamma.analytics.math.curve.CurveShiftFunction__com.opengamma.analytics.math.curve.Curve_evaluate<com.opengamma.analytics.math.curve.Curve.double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.curve.Curve : 1,

		double[] : 2,

		com.opengamma.analytics.math.curve.CurveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve : 1;
TRANSITION <com.opengamma.analytics.math.curve.CurveShiftFunction__com.opengamma.analytics.math.curve.Curve_evaluate<com.opengamma.analytics.math.curve.Curve.double[].double[].java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.curve.Curve : 1,

		double[] : 2,

		com.opengamma.analytics.math.curve.CurveShiftFunction : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve : 1;
TRANSITION <com.opengamma.analytics.math.curve.CurveShiftFunctionFactory__com.opengamma.analytics.math.curve.CurveShiftFunction_getFunction<java.lang.Class>>
	CONSUME 
		java.lang.Class : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.CurveShiftFunction : 1;
TRANSITION <com.opengamma.analytics.math.curve.CurveShiftFunctionFactory__com.opengamma.analytics.math.curve.DoublesCurve_getShiftedCurve<com.opengamma.analytics.math.curve.Curve.double>>
	CONSUME 
		com.opengamma.analytics.math.curve.Curve : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.DoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.CurveShiftFunctionFactory__com.opengamma.analytics.math.curve.DoublesCurve_getShiftedCurve<com.opengamma.analytics.math.curve.Curve.double.double>>
	CONSUME 
		com.opengamma.analytics.math.curve.Curve : 1,

		double : 2;
	PRODUCE 
		com.opengamma.analytics.math.curve.DoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.CurveShiftFunctionFactory__com.opengamma.analytics.math.curve.DoublesCurve_getShiftedCurve<com.opengamma.analytics.math.curve.Curve.double.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.curve.Curve : 1,

		double : 2,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.DoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.CurveShiftFunctionFactory__com.opengamma.analytics.math.curve.DoublesCurve_getShiftedCurve<com.opengamma.analytics.math.curve.Curve.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.curve.Curve : 1,

		double : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.DoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.CurveShiftFunctionFactory__com.opengamma.analytics.math.curve.DoublesCurve_getShiftedCurve<com.opengamma.analytics.math.curve.Curve.double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.curve.Curve : 1,

		double[] : 2;
	PRODUCE 
		com.opengamma.analytics.math.curve.DoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.CurveShiftFunctionFactory__com.opengamma.analytics.math.curve.DoublesCurve_getShiftedCurve<com.opengamma.analytics.math.curve.Curve.double[].double[].java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.curve.Curve : 1,

		double[] : 2,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.DoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.CurveShiftFunctionFactory__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.CurveShiftFunctionFactory : 1;
TRANSITION <com.opengamma.analytics.math.curve.CurveSpreadFunction__java.lang.String_getOperationName<>>
	CONSUME 
		com.opengamma.analytics.math.curve.CurveSpreadFunction : 1;
	PRODUCE 
		java.lang.String : 1;
TRANSITION <com.opengamma.analytics.math.curve.CurveSpreadFunctionFactory__com.opengamma.analytics.math.curve.CurveSpreadFunction_of<java.lang.String>>
	CONSUME 
		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.CurveSpreadFunction : 1;
TRANSITION <com.opengamma.analytics.math.curve.DivideCurveSpreadFunction$1__java.lang.Double_evaluate<java.lang.Double[]>>
	CONSUME 
		java.lang.Double[] : 1,

		com.opengamma.analytics.math.curve.DivideCurveSpreadFunction$1 : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.curve.DivideCurveSpreadFunction$1__java.lang.Object_evaluate<java.lang.Object[]>>
	CONSUME 
		java.lang.Object[] : 1,

		com.opengamma.analytics.math.curve.DivideCurveSpreadFunction$1 : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.curve.DivideCurveSpreadFunction__com.opengamma.analytics.math.curve.CurveSpreadFunction_getInstance<>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.CurveSpreadFunction : 1;
TRANSITION <com.opengamma.analytics.math.curve.DivideCurveSpreadFunction__com.opengamma.analytics.math.function.Function_evaluate<com.opengamma.analytics.math.curve.Curve[]>>
	CONSUME 
		com.opengamma.analytics.math.curve.DivideCurveSpreadFunction : 1,

		com.opengamma.analytics.math.curve.Curve[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.Function : 1;
TRANSITION <com.opengamma.analytics.math.curve.DivideCurveSpreadFunction__java.lang.Object_evaluate<java.lang.Object[]>>
	CONSUME 
		java.lang.Object[] : 1,

		com.opengamma.analytics.math.curve.DivideCurveSpreadFunction : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.curve.DivideCurveSpreadFunction__java.lang.String_getName<>>
	CONSUME 
		com.opengamma.analytics.math.curve.DivideCurveSpreadFunction : 1;
	PRODUCE 
		java.lang.String : 1;
TRANSITION <com.opengamma.analytics.math.curve.DivideCurveSpreadFunction__java.lang.String_getOperationName<>>
	CONSUME 
		com.opengamma.analytics.math.curve.DivideCurveSpreadFunction : 1;
	PRODUCE 
		java.lang.String : 1;
TRANSITION <com.opengamma.analytics.math.curve.DivideCurveSpreadFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.DivideCurveSpreadFunction : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurve$Meta__java.lang.Class_beanType<>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurve$Meta : 1;
	PRODUCE 
		java.lang.Class : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurve$Meta__java.util.Map_metaPropertyMap<>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurve$Meta : 1;
	PRODUCE 
		java.util.Map : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurve$Meta__org.joda.beans.BeanBuilder_builder<>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurve$Meta : 1;
	PRODUCE 
		org.joda.beans.BeanBuilder : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurve__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurve : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurve__com.opengamma.analytics.math.curve.Curve$Meta_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurve__com.opengamma.analytics.math.curve.DoublesCurve$Meta_meta<>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.DoublesCurve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurve__com.opengamma.analytics.math.curve.DoublesCurve$Meta_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.DoublesCurve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurve__double_getDyDx<double>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurve : 1,

		double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurve__java.lang.Double[]_getYValueParameterSensitivity<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurve : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurve__org.joda.beans.MetaBean_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurve : 1;
	PRODUCE 
		org.joda.beans.MetaBean : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor$Meta__java.lang.Class_beanType<>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor$Meta : 1;
	PRODUCE 
		java.lang.Class : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor$Meta__java.util.Map_metaPropertyMap<>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor$Meta : 1;
	PRODUCE 
		java.util.Map : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor$Meta__org.joda.beans.BeanBuilder_builder<>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor$Meta : 1;
	PRODUCE 
		org.joda.beans.BeanBuilder : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor$Meta__org.joda.beans.MetaProperty_anchorIndex<>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor$Meta : 1;
	PRODUCE 
		org.joda.beans.MetaProperty : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor__com.opengamma.analytics.math.curve.ArraysDoublesCurve$Meta_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor__com.opengamma.analytics.math.curve.Curve_clone<>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor__com.opengamma.analytics.math.curve.Curve$Meta_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor__com.opengamma.analytics.math.curve.DoublesCurve$Meta_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.DoublesCurve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor__com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor_clone<>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor__com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor$Meta_meta<>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor__com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor$Meta_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor__com.opengamma.analytics.math.curve.InterpolatedDoublesCurve_clone<>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor__com.opengamma.analytics.math.curve.InterpolatedDoublesCurve$Meta_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor__int_getAnchorIndex<>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor__int_size<>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor__java.lang.Double[]_getYValueParameterSensitivity<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor__java.lang.Object_clone<>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor__org.joda.beans.MetaBean_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor : 1;
	PRODUCE 
		org.joda.beans.MetaBean : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor__org.joda.beans.Property_anchorIndex<>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor : 1;
	PRODUCE 
		org.joda.beans.Property : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel$Meta__java.lang.Class_beanType<>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel$Meta : 1;
	PRODUCE 
		java.lang.Class : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel$Meta__java.util.Map_metaPropertyMap<>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel$Meta : 1;
	PRODUCE 
		java.util.Map : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel$Meta__org.joda.beans.BeanBuilder_builder<>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel$Meta : 1;
	PRODUCE 
		org.joda.beans.BeanBuilder : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel$Meta__org.joda.beans.MetaProperty_parameters<>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel$Meta : 1;
	PRODUCE 
		org.joda.beans.MetaProperty : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel__com.opengamma.analytics.math.curve.Curve_clone<>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel__com.opengamma.analytics.math.curve.Curve$Meta_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel__com.opengamma.analytics.math.curve.DoublesCurve$Meta_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.DoublesCurve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel__com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel_clone<>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel__com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel$Meta_meta<>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel__com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel$Meta_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel__double_getDyDx<double>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel : 1,

		double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel__int_size<>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel__java.lang.Comparable[]_getXData<>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel : 1;
	PRODUCE 
		java.lang.Comparable[] : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel__java.lang.Double_getYValue<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel__java.lang.Double[]_getXData<>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel__java.lang.Double[]_getYData<>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel__java.lang.Double[]_getYValueParameterSensitivity<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel__java.lang.Object_clone<>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel__java.lang.Object_getYValue<java.lang.Comparable>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel : 1,

		java.lang.Comparable : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel__java.lang.Object[]_getYData<>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel__org.joda.beans.MetaBean_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel : 1;
	PRODUCE 
		org.joda.beans.MetaBean : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel__org.joda.beans.Property_parameters<>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel : 1;
	PRODUCE 
		org.joda.beans.Property : 1;
TRANSITION <com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel__void_<init><java.lang.String.double[]>>
	CONSUME 
		double[] : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction$1__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction$1 : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction$1__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction$1 : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction__com.opengamma.analytics.math.curve.Curve_evaluate<com.opengamma.analytics.math.curve.Curve.double>>
	CONSUME 
		com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction : 1,

		com.opengamma.analytics.math.curve.Curve : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction__com.opengamma.analytics.math.curve.Curve_evaluate<com.opengamma.analytics.math.curve.Curve.double.double>>
	CONSUME 
		com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction : 1,

		com.opengamma.analytics.math.curve.Curve : 1,

		double : 2;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction__com.opengamma.analytics.math.curve.Curve_evaluate<com.opengamma.analytics.math.curve.Curve.double.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction : 1,

		com.opengamma.analytics.math.curve.Curve : 1,

		double : 2,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction__com.opengamma.analytics.math.curve.Curve_evaluate<com.opengamma.analytics.math.curve.Curve.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction : 1,

		com.opengamma.analytics.math.curve.Curve : 1,

		double : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction__com.opengamma.analytics.math.curve.Curve_evaluate<com.opengamma.analytics.math.curve.Curve.double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction : 1,

		com.opengamma.analytics.math.curve.Curve : 1,

		double[] : 2;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction__com.opengamma.analytics.math.curve.Curve_evaluate<com.opengamma.analytics.math.curve.Curve.double[].double[].java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction : 1,

		com.opengamma.analytics.math.curve.Curve : 1,

		double[] : 2,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction__com.opengamma.analytics.math.curve.FunctionalDoublesCurve_evaluate<com.opengamma.analytics.math.curve.FunctionalDoublesCurve.double>>
	CONSUME 
		com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction : 1,

		com.opengamma.analytics.math.curve.FunctionalDoublesCurve : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.FunctionalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction__com.opengamma.analytics.math.curve.FunctionalDoublesCurve_evaluate<com.opengamma.analytics.math.curve.FunctionalDoublesCurve.double.double>>
	CONSUME 
		com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction : 1,

		com.opengamma.analytics.math.curve.FunctionalDoublesCurve : 1,

		double : 2;
	PRODUCE 
		com.opengamma.analytics.math.curve.FunctionalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction__com.opengamma.analytics.math.curve.FunctionalDoublesCurve_evaluate<com.opengamma.analytics.math.curve.FunctionalDoublesCurve.double.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction : 1,

		com.opengamma.analytics.math.curve.FunctionalDoublesCurve : 1,

		double : 2,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.FunctionalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction__com.opengamma.analytics.math.curve.FunctionalDoublesCurve_evaluate<com.opengamma.analytics.math.curve.FunctionalDoublesCurve.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction : 1,

		com.opengamma.analytics.math.curve.FunctionalDoublesCurve : 1,

		double : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.FunctionalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction__com.opengamma.analytics.math.curve.FunctionalDoublesCurve_evaluate<com.opengamma.analytics.math.curve.FunctionalDoublesCurve.double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction : 1,

		com.opengamma.analytics.math.curve.FunctionalDoublesCurve : 1,

		double[] : 2;
	PRODUCE 
		com.opengamma.analytics.math.curve.FunctionalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction__com.opengamma.analytics.math.curve.FunctionalDoublesCurve_evaluate<com.opengamma.analytics.math.curve.FunctionalDoublesCurve.double[].double[].java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction : 1,

		com.opengamma.analytics.math.curve.FunctionalDoublesCurve : 1,

		double[] : 2,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.FunctionalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalDoublesCurve$Meta__java.lang.Class_beanType<>>
	CONSUME 
		com.opengamma.analytics.math.curve.FunctionalDoublesCurve$Meta : 1;
	PRODUCE 
		java.lang.Class : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalDoublesCurve$Meta__java.util.Map_metaPropertyMap<>>
	CONSUME 
		com.opengamma.analytics.math.curve.FunctionalDoublesCurve$Meta : 1;
	PRODUCE 
		java.util.Map : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalDoublesCurve$Meta__org.joda.beans.BeanBuilder_builder<>>
	CONSUME 
		com.opengamma.analytics.math.curve.FunctionalDoublesCurve$Meta : 1;
	PRODUCE 
		org.joda.beans.BeanBuilder : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalDoublesCurve$Meta__org.joda.beans.MetaProperty_derivative<>>
	CONSUME 
		com.opengamma.analytics.math.curve.FunctionalDoublesCurve$Meta : 1;
	PRODUCE 
		org.joda.beans.MetaProperty : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalDoublesCurve$Meta__org.joda.beans.MetaProperty_function<>>
	CONSUME 
		com.opengamma.analytics.math.curve.FunctionalDoublesCurve$Meta : 1;
	PRODUCE 
		org.joda.beans.MetaProperty : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalDoublesCurve__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.curve.FunctionalDoublesCurve : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalDoublesCurve__com.opengamma.analytics.math.curve.Curve_clone<>>
	CONSUME 
		com.opengamma.analytics.math.curve.FunctionalDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalDoublesCurve__com.opengamma.analytics.math.curve.Curve$Meta_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.FunctionalDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalDoublesCurve__com.opengamma.analytics.math.curve.DoublesCurve$Meta_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.FunctionalDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.DoublesCurve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalDoublesCurve__com.opengamma.analytics.math.curve.FunctionalDoublesCurve_'from'<com.opengamma.analytics.math.function.Function1D>>
	CONSUME 
		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.FunctionalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalDoublesCurve__com.opengamma.analytics.math.curve.FunctionalDoublesCurve_'from'<com.opengamma.analytics.math.function.Function1D.com.opengamma.analytics.math.function.Function1D>>
	CONSUME 
		com.opengamma.analytics.math.function.Function1D : 2;
	PRODUCE 
		com.opengamma.analytics.math.curve.FunctionalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalDoublesCurve__com.opengamma.analytics.math.curve.FunctionalDoublesCurve_'from'<com.opengamma.analytics.math.function.Function1D.com.opengamma.analytics.math.function.Function1D.java.lang.String>>
	CONSUME 
		java.lang.String : 1,

		com.opengamma.analytics.math.function.Function1D : 2;
	PRODUCE 
		com.opengamma.analytics.math.curve.FunctionalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalDoublesCurve__com.opengamma.analytics.math.curve.FunctionalDoublesCurve_'from'<com.opengamma.analytics.math.function.Function1D.java.lang.String>>
	CONSUME 
		java.lang.String : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.FunctionalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalDoublesCurve__com.opengamma.analytics.math.curve.FunctionalDoublesCurve_clone<>>
	CONSUME 
		com.opengamma.analytics.math.curve.FunctionalDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.FunctionalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalDoublesCurve__com.opengamma.analytics.math.curve.FunctionalDoublesCurve$Meta_meta<>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.FunctionalDoublesCurve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalDoublesCurve__com.opengamma.analytics.math.curve.FunctionalDoublesCurve$Meta_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.FunctionalDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.FunctionalDoublesCurve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalDoublesCurve__com.opengamma.analytics.math.curve.InterpolatedDoublesCurve_toInterpolatedDoublesCurve<double[].com.opengamma.analytics.math.interpolation.Interpolator1D>>
	CONSUME 
		com.opengamma.analytics.math.curve.FunctionalDoublesCurve : 1,

		double[] : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalDoublesCurve__com.opengamma.analytics.math.function.Function1D_getFirstDerivativeFunction<>>
	CONSUME 
		com.opengamma.analytics.math.curve.FunctionalDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.Function1D : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalDoublesCurve__com.opengamma.analytics.math.function.Function1D_getFunction<>>
	CONSUME 
		com.opengamma.analytics.math.curve.FunctionalDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.Function1D : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalDoublesCurve__double_getDyDx<double>>
	CONSUME 
		com.opengamma.analytics.math.curve.FunctionalDoublesCurve : 1,

		double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalDoublesCurve__int_size<>>
	CONSUME 
		com.opengamma.analytics.math.curve.FunctionalDoublesCurve : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalDoublesCurve__java.lang.Comparable[]_getXData<>>
	CONSUME 
		com.opengamma.analytics.math.curve.FunctionalDoublesCurve : 1;
	PRODUCE 
		java.lang.Comparable[] : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalDoublesCurve__java.lang.Double_getYValue<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.curve.FunctionalDoublesCurve : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalDoublesCurve__java.lang.Double[]_getXData<>>
	CONSUME 
		com.opengamma.analytics.math.curve.FunctionalDoublesCurve : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalDoublesCurve__java.lang.Double[]_getYData<>>
	CONSUME 
		com.opengamma.analytics.math.curve.FunctionalDoublesCurve : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalDoublesCurve__java.lang.Double[]_getYValueParameterSensitivity<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.curve.FunctionalDoublesCurve : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalDoublesCurve__java.lang.Object_clone<>>
	CONSUME 
		com.opengamma.analytics.math.curve.FunctionalDoublesCurve : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalDoublesCurve__java.lang.Object_getYValue<java.lang.Comparable>>
	CONSUME 
		com.opengamma.analytics.math.curve.FunctionalDoublesCurve : 1,

		java.lang.Comparable : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalDoublesCurve__java.lang.Object[]_getYData<>>
	CONSUME 
		com.opengamma.analytics.math.curve.FunctionalDoublesCurve : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalDoublesCurve__org.joda.beans.MetaBean_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.FunctionalDoublesCurve : 1;
	PRODUCE 
		org.joda.beans.MetaBean : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalDoublesCurve__org.joda.beans.Property_derivative<>>
	CONSUME 
		com.opengamma.analytics.math.curve.FunctionalDoublesCurve : 1;
	PRODUCE 
		org.joda.beans.Property : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalDoublesCurve__org.joda.beans.Property_function<>>
	CONSUME 
		com.opengamma.analytics.math.curve.FunctionalDoublesCurve : 1;
	PRODUCE 
		org.joda.beans.Property : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalDoublesCurve__void_<init><com.opengamma.analytics.math.function.Function1D>>
	CONSUME 
		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.FunctionalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.FunctionalDoublesCurve__void_<init><com.opengamma.analytics.math.function.Function1D.java.lang.String>>
	CONSUME 
		java.lang.String : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.FunctionalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedCurveBuildingFunction__java.util.LinkedHashMap_evaluate<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.curve.InterpolatedCurveBuildingFunction : 1;
	PRODUCE 
		java.util.LinkedHashMap : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedCurveBuildingFunction__void_<init><java.util.LinkedHashMap.java.util.LinkedHashMap>>
	CONSUME 
		java.util.LinkedHashMap : 2;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedCurveBuildingFunction : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction__com.opengamma.analytics.math.curve.Curve_evaluate<com.opengamma.analytics.math.curve.Curve.double>>
	CONSUME 
		com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction : 1,

		com.opengamma.analytics.math.curve.Curve : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction__com.opengamma.analytics.math.curve.Curve_evaluate<com.opengamma.analytics.math.curve.Curve.double.double>>
	CONSUME 
		com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction : 1,

		com.opengamma.analytics.math.curve.Curve : 1,

		double : 2;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction__com.opengamma.analytics.math.curve.Curve_evaluate<com.opengamma.analytics.math.curve.Curve.double.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction : 1,

		com.opengamma.analytics.math.curve.Curve : 1,

		double : 2,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction__com.opengamma.analytics.math.curve.Curve_evaluate<com.opengamma.analytics.math.curve.Curve.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction : 1,

		com.opengamma.analytics.math.curve.Curve : 1,

		double : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction__com.opengamma.analytics.math.curve.Curve_evaluate<com.opengamma.analytics.math.curve.Curve.double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction : 1,

		com.opengamma.analytics.math.curve.Curve : 1,

		double[] : 2;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction__com.opengamma.analytics.math.curve.Curve_evaluate<com.opengamma.analytics.math.curve.Curve.double[].double[].java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction : 1,

		com.opengamma.analytics.math.curve.Curve : 1,

		double[] : 2,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction__com.opengamma.analytics.math.curve.InterpolatedDoublesCurve_evaluate<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve.double>>
	CONSUME 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1,

		com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction__com.opengamma.analytics.math.curve.InterpolatedDoublesCurve_evaluate<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve.double.double>>
	CONSUME 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1,

		com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction : 1,

		double : 2;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction__com.opengamma.analytics.math.curve.InterpolatedDoublesCurve_evaluate<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve.double.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1,

		com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction : 1,

		double : 2,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction__com.opengamma.analytics.math.curve.InterpolatedDoublesCurve_evaluate<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1,

		com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction : 1,

		double : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction__com.opengamma.analytics.math.curve.InterpolatedDoublesCurve_evaluate<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve.double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1,

		com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction : 1,

		double[] : 2;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction__com.opengamma.analytics.math.curve.InterpolatedDoublesCurve_evaluate<com.opengamma.analytics.math.curve.InterpolatedDoublesCurve.double[].double[].java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1,

		com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction : 1,

		double[] : 2,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve$Meta__java.lang.Class_beanType<>>
	CONSUME 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve$Meta : 1;
	PRODUCE 
		java.lang.Class : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve$Meta__java.util.Map_metaPropertyMap<>>
	CONSUME 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve$Meta : 1;
	PRODUCE 
		java.util.Map : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve$Meta__org.joda.beans.BeanBuilder_builder<>>
	CONSUME 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve$Meta : 1;
	PRODUCE 
		org.joda.beans.BeanBuilder : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve$Meta__org.joda.beans.MetaProperty_dataBundle<>>
	CONSUME 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve$Meta : 1;
	PRODUCE 
		org.joda.beans.MetaProperty : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve$Meta__org.joda.beans.MetaProperty_interpolator<>>
	CONSUME 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve$Meta : 1;
	PRODUCE 
		org.joda.beans.MetaProperty : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__com.opengamma.analytics.math.curve.ArraysDoublesCurve$Meta_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__com.opengamma.analytics.math.curve.Curve_clone<>>
	CONSUME 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__com.opengamma.analytics.math.curve.Curve$Meta_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__com.opengamma.analytics.math.curve.DoublesCurve$Meta_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.DoublesCurve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__com.opengamma.analytics.math.curve.InterpolatedDoublesCurve_'from'<com.opengamma.util.tuple.DoublesPair[].com.opengamma.analytics.math.interpolation.Interpolator1D>>
	CONSUME 
		com.opengamma.util.tuple.DoublesPair[] : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__com.opengamma.analytics.math.curve.InterpolatedDoublesCurve_'from'<com.opengamma.util.tuple.DoublesPair[].com.opengamma.analytics.math.interpolation.Interpolator1D.java.lang.String>>
	CONSUME 
		java.lang.String : 1,

		com.opengamma.util.tuple.DoublesPair[] : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__com.opengamma.analytics.math.curve.InterpolatedDoublesCurve_'from'<double[].double[].com.opengamma.analytics.math.interpolation.Interpolator1D>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__com.opengamma.analytics.math.curve.InterpolatedDoublesCurve_'from'<double[].double[].com.opengamma.analytics.math.interpolation.Interpolator1D.java.lang.String>>
	CONSUME 
		double[] : 2,

		java.lang.String : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__com.opengamma.analytics.math.curve.InterpolatedDoublesCurve_'from'<java.lang.Double[].java.lang.Double[].com.opengamma.analytics.math.interpolation.Interpolator1D>>
	CONSUME 
		java.lang.Double[] : 2,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__com.opengamma.analytics.math.curve.InterpolatedDoublesCurve_'from'<java.lang.Double[].java.lang.Double[].com.opengamma.analytics.math.interpolation.Interpolator1D.java.lang.String>>
	CONSUME 
		java.lang.Double[] : 2,

		java.lang.String : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__com.opengamma.analytics.math.curve.InterpolatedDoublesCurve_'from'<java.util.List.com.opengamma.analytics.math.interpolation.Interpolator1D>>
	CONSUME 
		java.util.List : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__com.opengamma.analytics.math.curve.InterpolatedDoublesCurve_'from'<java.util.List.com.opengamma.analytics.math.interpolation.Interpolator1D.java.lang.String>>
	CONSUME 
		java.util.List : 1,

		java.lang.String : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__com.opengamma.analytics.math.curve.InterpolatedDoublesCurve_'from'<java.util.List.java.util.List.com.opengamma.analytics.math.interpolation.Interpolator1D>>
	CONSUME 
		java.util.List : 2,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__com.opengamma.analytics.math.curve.InterpolatedDoublesCurve_'from'<java.util.List.java.util.List.com.opengamma.analytics.math.interpolation.Interpolator1D.java.lang.String>>
	CONSUME 
		java.util.List : 2,

		java.lang.String : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__com.opengamma.analytics.math.curve.InterpolatedDoublesCurve_'from'<java.util.Map.com.opengamma.analytics.math.interpolation.Interpolator1D>>
	CONSUME 
		java.util.Map : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__com.opengamma.analytics.math.curve.InterpolatedDoublesCurve_'from'<java.util.Map.com.opengamma.analytics.math.interpolation.Interpolator1D.java.lang.String>>
	CONSUME 
		java.util.Map : 1,

		java.lang.String : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__com.opengamma.analytics.math.curve.InterpolatedDoublesCurve_'from'<java.util.Set.com.opengamma.analytics.math.interpolation.Interpolator1D>>
	CONSUME 
		java.util.Set : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__com.opengamma.analytics.math.curve.InterpolatedDoublesCurve_'from'<java.util.Set.com.opengamma.analytics.math.interpolation.Interpolator1D.java.lang.String>>
	CONSUME 
		java.util.Set : 1,

		java.lang.String : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__com.opengamma.analytics.math.curve.InterpolatedDoublesCurve_clone<>>
	CONSUME 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__com.opengamma.analytics.math.curve.InterpolatedDoublesCurve_fromSorted<com.opengamma.util.tuple.DoublesPair[].com.opengamma.analytics.math.interpolation.Interpolator1D>>
	CONSUME 
		com.opengamma.util.tuple.DoublesPair[] : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__com.opengamma.analytics.math.curve.InterpolatedDoublesCurve_fromSorted<com.opengamma.util.tuple.DoublesPair[].com.opengamma.analytics.math.interpolation.Interpolator1D.java.lang.String>>
	CONSUME 
		java.lang.String : 1,

		com.opengamma.util.tuple.DoublesPair[] : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__com.opengamma.analytics.math.curve.InterpolatedDoublesCurve_fromSorted<double[].double[].com.opengamma.analytics.math.interpolation.Interpolator1D>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__com.opengamma.analytics.math.curve.InterpolatedDoublesCurve_fromSorted<double[].double[].com.opengamma.analytics.math.interpolation.Interpolator1D.java.lang.String>>
	CONSUME 
		double[] : 2,

		java.lang.String : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__com.opengamma.analytics.math.curve.InterpolatedDoublesCurve_fromSorted<java.lang.Double[].java.lang.Double[].com.opengamma.analytics.math.interpolation.Interpolator1D>>
	CONSUME 
		java.lang.Double[] : 2,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__com.opengamma.analytics.math.curve.InterpolatedDoublesCurve_fromSorted<java.lang.Double[].java.lang.Double[].com.opengamma.analytics.math.interpolation.Interpolator1D.java.lang.String>>
	CONSUME 
		java.lang.Double[] : 2,

		java.lang.String : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__com.opengamma.analytics.math.curve.InterpolatedDoublesCurve_fromSorted<java.util.List.com.opengamma.analytics.math.interpolation.Interpolator1D>>
	CONSUME 
		java.util.List : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__com.opengamma.analytics.math.curve.InterpolatedDoublesCurve_fromSorted<java.util.List.com.opengamma.analytics.math.interpolation.Interpolator1D.java.lang.String>>
	CONSUME 
		java.util.List : 1,

		java.lang.String : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__com.opengamma.analytics.math.curve.InterpolatedDoublesCurve_fromSorted<java.util.List.java.util.List.com.opengamma.analytics.math.interpolation.Interpolator1D>>
	CONSUME 
		java.util.List : 2,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__com.opengamma.analytics.math.curve.InterpolatedDoublesCurve_fromSorted<java.util.List.java.util.List.com.opengamma.analytics.math.interpolation.Interpolator1D.java.lang.String>>
	CONSUME 
		java.util.List : 2,

		java.lang.String : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__com.opengamma.analytics.math.curve.InterpolatedDoublesCurve_fromSorted<java.util.Map.com.opengamma.analytics.math.interpolation.Interpolator1D>>
	CONSUME 
		java.util.Map : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__com.opengamma.analytics.math.curve.InterpolatedDoublesCurve_fromSorted<java.util.Map.com.opengamma.analytics.math.interpolation.Interpolator1D.java.lang.String>>
	CONSUME 
		java.util.Map : 1,

		java.lang.String : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__com.opengamma.analytics.math.curve.InterpolatedDoublesCurve_fromSorted<java.util.Set.com.opengamma.analytics.math.interpolation.Interpolator1D>>
	CONSUME 
		java.util.Set : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__com.opengamma.analytics.math.curve.InterpolatedDoublesCurve_fromSorted<java.util.Set.com.opengamma.analytics.math.interpolation.Interpolator1D.java.lang.String>>
	CONSUME 
		java.util.Set : 1,

		java.lang.String : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__com.opengamma.analytics.math.curve.InterpolatedDoublesCurve$Meta_meta<>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__com.opengamma.analytics.math.curve.InterpolatedDoublesCurve$Meta_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__com.opengamma.analytics.math.interpolation.Interpolator1D_getInterpolator<>>
	CONSUME 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundle<>>
	CONSUME 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__double_getDyDx<double>>
	CONSUME 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1,

		double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__java.lang.Double_getYValue<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__java.lang.Double[]_getYValueParameterSensitivity<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__java.lang.Object_clone<>>
	CONSUME 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__java.lang.Object_getYValue<java.lang.Comparable>>
	CONSUME 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1,

		java.lang.Comparable : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__org.joda.beans.MetaBean_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
	PRODUCE 
		org.joda.beans.MetaBean : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__org.joda.beans.Property_dataBundle<>>
	CONSUME 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
	PRODUCE 
		org.joda.beans.Property : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__org.joda.beans.Property_interpolator<>>
	CONSUME 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
	PRODUCE 
		org.joda.beans.Property : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__void_<init><com.opengamma.util.tuple.DoublesPair[].com.opengamma.analytics.math.interpolation.Interpolator1D.boolean>>
	CONSUME 
		boolean : 1,

		com.opengamma.util.tuple.DoublesPair[] : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__void_<init><com.opengamma.util.tuple.DoublesPair[].com.opengamma.analytics.math.interpolation.Interpolator1D.boolean.java.lang.String>>
	CONSUME 
		boolean : 1,

		java.lang.String : 1,

		com.opengamma.util.tuple.DoublesPair[] : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__void_<init><double[].double[].com.opengamma.analytics.math.interpolation.Interpolator1D.boolean>>
	CONSUME 
		boolean : 1,

		double[] : 2,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__void_<init><java.lang.Double[].java.lang.Double[].com.opengamma.analytics.math.interpolation.Interpolator1D.boolean>>
	CONSUME 
		java.lang.Double[] : 2,

		boolean : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__void_<init><java.util.List.com.opengamma.analytics.math.interpolation.Interpolator1D.boolean>>
	CONSUME 
		java.util.List : 1,

		boolean : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__void_<init><java.util.List.com.opengamma.analytics.math.interpolation.Interpolator1D.boolean.java.lang.String>>
	CONSUME 
		java.util.List : 1,

		boolean : 1,

		java.lang.String : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__void_<init><java.util.List.java.util.List.com.opengamma.analytics.math.interpolation.Interpolator1D.boolean>>
	CONSUME 
		java.util.List : 2,

		boolean : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__void_<init><java.util.Map.com.opengamma.analytics.math.interpolation.Interpolator1D.boolean>>
	CONSUME 
		boolean : 1,

		java.util.Map : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__void_<init><java.util.Map.com.opengamma.analytics.math.interpolation.Interpolator1D.boolean.java.lang.String>>
	CONSUME 
		boolean : 1,

		java.util.Map : 1,

		java.lang.String : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__void_<init><java.util.Set.com.opengamma.analytics.math.interpolation.Interpolator1D.boolean>>
	CONSUME 
		boolean : 1,

		java.util.Set : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.InterpolatedDoublesCurve__void_<init><java.util.Set.com.opengamma.analytics.math.interpolation.Interpolator1D.boolean.java.lang.String>>
	CONSUME 
		boolean : 1,

		java.util.Set : 1,

		java.lang.String : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.MultiplyCurveSpreadFunction$1__java.lang.Double_evaluate<java.lang.Double[]>>
	CONSUME 
		com.opengamma.analytics.math.curve.MultiplyCurveSpreadFunction$1 : 1,

		java.lang.Double[] : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.curve.MultiplyCurveSpreadFunction$1__java.lang.Object_evaluate<java.lang.Object[]>>
	CONSUME 
		com.opengamma.analytics.math.curve.MultiplyCurveSpreadFunction$1 : 1,

		java.lang.Object[] : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.curve.MultiplyCurveSpreadFunction__com.opengamma.analytics.math.curve.CurveSpreadFunction_getInstance<>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.CurveSpreadFunction : 1;
TRANSITION <com.opengamma.analytics.math.curve.MultiplyCurveSpreadFunction__com.opengamma.analytics.math.function.Function_evaluate<com.opengamma.analytics.math.curve.Curve[]>>
	CONSUME 
		com.opengamma.analytics.math.curve.MultiplyCurveSpreadFunction : 1,

		com.opengamma.analytics.math.curve.Curve[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.Function : 1;
TRANSITION <com.opengamma.analytics.math.curve.MultiplyCurveSpreadFunction__java.lang.Object_evaluate<java.lang.Object[]>>
	CONSUME 
		java.lang.Object[] : 1,

		com.opengamma.analytics.math.curve.MultiplyCurveSpreadFunction : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.curve.MultiplyCurveSpreadFunction__java.lang.String_getName<>>
	CONSUME 
		com.opengamma.analytics.math.curve.MultiplyCurveSpreadFunction : 1;
	PRODUCE 
		java.lang.String : 1;
TRANSITION <com.opengamma.analytics.math.curve.MultiplyCurveSpreadFunction__java.lang.String_getOperationName<>>
	CONSUME 
		com.opengamma.analytics.math.curve.MultiplyCurveSpreadFunction : 1;
	PRODUCE 
		java.lang.String : 1;
TRANSITION <com.opengamma.analytics.math.curve.MultiplyCurveSpreadFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.MultiplyCurveSpreadFunction : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve$Meta__java.lang.Class_beanType<>>
	CONSUME 
		com.opengamma.analytics.math.curve.NodalDoublesCurve$Meta : 1;
	PRODUCE 
		java.lang.Class : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve$Meta__java.util.Map_metaPropertyMap<>>
	CONSUME 
		com.opengamma.analytics.math.curve.NodalDoublesCurve$Meta : 1;
	PRODUCE 
		java.util.Map : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve$Meta__org.joda.beans.BeanBuilder_builder<>>
	CONSUME 
		com.opengamma.analytics.math.curve.NodalDoublesCurve$Meta : 1;
	PRODUCE 
		org.joda.beans.BeanBuilder : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__com.opengamma.analytics.math.curve.ArraysDoublesCurve$Meta_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__com.opengamma.analytics.math.curve.Curve_clone<>>
	CONSUME 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__com.opengamma.analytics.math.curve.Curve$Meta_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__com.opengamma.analytics.math.curve.DoublesCurve$Meta_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.DoublesCurve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__com.opengamma.analytics.math.curve.NodalDoublesCurve_'from'<com.opengamma.util.tuple.DoublesPair[]>>
	CONSUME 
		com.opengamma.util.tuple.DoublesPair[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__com.opengamma.analytics.math.curve.NodalDoublesCurve_'from'<com.opengamma.util.tuple.DoublesPair[].java.lang.String>>
	CONSUME 
		java.lang.String : 1,

		com.opengamma.util.tuple.DoublesPair[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__com.opengamma.analytics.math.curve.NodalDoublesCurve_'from'<double[].double[]>>
	CONSUME 
		double[] : 2;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__com.opengamma.analytics.math.curve.NodalDoublesCurve_'from'<double[].double[].java.lang.String>>
	CONSUME 
		double[] : 2,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__com.opengamma.analytics.math.curve.NodalDoublesCurve_'from'<java.lang.Double[].java.lang.Double[]>>
	CONSUME 
		java.lang.Double[] : 2;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__com.opengamma.analytics.math.curve.NodalDoublesCurve_'from'<java.lang.Double[].java.lang.Double[].java.lang.String>>
	CONSUME 
		java.lang.Double[] : 2,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__com.opengamma.analytics.math.curve.NodalDoublesCurve_'from'<java.util.List>>
	CONSUME 
		java.util.List : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__com.opengamma.analytics.math.curve.NodalDoublesCurve_'from'<java.util.List.java.lang.String>>
	CONSUME 
		java.util.List : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__com.opengamma.analytics.math.curve.NodalDoublesCurve_'from'<java.util.List.java.util.List>>
	CONSUME 
		java.util.List : 2;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__com.opengamma.analytics.math.curve.NodalDoublesCurve_'from'<java.util.List.java.util.List.java.lang.String>>
	CONSUME 
		java.util.List : 2,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__com.opengamma.analytics.math.curve.NodalDoublesCurve_'from'<java.util.Map>>
	CONSUME 
		java.util.Map : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__com.opengamma.analytics.math.curve.NodalDoublesCurve_'from'<java.util.Map.java.lang.String>>
	CONSUME 
		java.util.Map : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__com.opengamma.analytics.math.curve.NodalDoublesCurve_'from'<java.util.Set>>
	CONSUME 
		java.util.Set : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__com.opengamma.analytics.math.curve.NodalDoublesCurve_'from'<java.util.Set.java.lang.String>>
	CONSUME 
		java.util.Set : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__com.opengamma.analytics.math.curve.NodalDoublesCurve_clone<>>
	CONSUME 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__com.opengamma.analytics.math.curve.NodalDoublesCurve_fromSorted<com.opengamma.util.tuple.DoublesPair[]>>
	CONSUME 
		com.opengamma.util.tuple.DoublesPair[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__com.opengamma.analytics.math.curve.NodalDoublesCurve_fromSorted<com.opengamma.util.tuple.DoublesPair[].java.lang.String>>
	CONSUME 
		java.lang.String : 1,

		com.opengamma.util.tuple.DoublesPair[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__com.opengamma.analytics.math.curve.NodalDoublesCurve_fromSorted<double[].double[]>>
	CONSUME 
		double[] : 2;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__com.opengamma.analytics.math.curve.NodalDoublesCurve_fromSorted<double[].double[].java.lang.String>>
	CONSUME 
		double[] : 2,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__com.opengamma.analytics.math.curve.NodalDoublesCurve_fromSorted<java.lang.Double[].java.lang.Double[]>>
	CONSUME 
		java.lang.Double[] : 2;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__com.opengamma.analytics.math.curve.NodalDoublesCurve_fromSorted<java.lang.Double[].java.lang.Double[].java.lang.String>>
	CONSUME 
		java.lang.Double[] : 2,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__com.opengamma.analytics.math.curve.NodalDoublesCurve_fromSorted<java.util.List>>
	CONSUME 
		java.util.List : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__com.opengamma.analytics.math.curve.NodalDoublesCurve_fromSorted<java.util.List.java.lang.String>>
	CONSUME 
		java.util.List : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__com.opengamma.analytics.math.curve.NodalDoublesCurve_fromSorted<java.util.List.java.util.List>>
	CONSUME 
		java.util.List : 2;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__com.opengamma.analytics.math.curve.NodalDoublesCurve_fromSorted<java.util.List.java.util.List.java.lang.String>>
	CONSUME 
		java.util.List : 2,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__com.opengamma.analytics.math.curve.NodalDoublesCurve_fromSorted<java.util.Map>>
	CONSUME 
		java.util.Map : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__com.opengamma.analytics.math.curve.NodalDoublesCurve_fromSorted<java.util.Map.java.lang.String>>
	CONSUME 
		java.util.Map : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__com.opengamma.analytics.math.curve.NodalDoublesCurve_fromSorted<java.util.Set>>
	CONSUME 
		java.util.Set : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__com.opengamma.analytics.math.curve.NodalDoublesCurve_fromSorted<java.util.Set.java.lang.String>>
	CONSUME 
		java.util.Set : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__com.opengamma.analytics.math.curve.NodalDoublesCurve$Meta_meta<>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalDoublesCurve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__com.opengamma.analytics.math.curve.NodalDoublesCurve$Meta_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalDoublesCurve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__double_getDyDx<double>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__java.lang.Double_getYValue<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__java.lang.Double[]_getYValueParameterSensitivity<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__java.lang.Object_clone<>>
	CONSUME 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__java.lang.Object_getYValue<java.lang.Comparable>>
	CONSUME 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1,

		java.lang.Comparable : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__org.joda.beans.MetaBean_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
	PRODUCE 
		org.joda.beans.MetaBean : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__void_<init><com.opengamma.util.tuple.DoublesPair[].boolean>>
	CONSUME 
		boolean : 1,

		com.opengamma.util.tuple.DoublesPair[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__void_<init><com.opengamma.util.tuple.DoublesPair[].boolean.java.lang.String>>
	CONSUME 
		boolean : 1,

		java.lang.String : 1,

		com.opengamma.util.tuple.DoublesPair[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__void_<init><double[].double[].boolean>>
	CONSUME 
		boolean : 1,

		double[] : 2;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__void_<init><double[].double[].boolean.java.lang.String>>
	CONSUME 
		boolean : 1,

		double[] : 2,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__void_<init><java.lang.Double[].java.lang.Double[].boolean>>
	CONSUME 
		java.lang.Double[] : 2,

		boolean : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__void_<init><java.lang.Double[].java.lang.Double[].boolean.java.lang.String>>
	CONSUME 
		java.lang.Double[] : 2,

		boolean : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__void_<init><java.util.List.boolean>>
	CONSUME 
		java.util.List : 1,

		boolean : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__void_<init><java.util.List.boolean.java.lang.String>>
	CONSUME 
		java.util.List : 1,

		boolean : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__void_<init><java.util.List.java.util.List.boolean>>
	CONSUME 
		java.util.List : 2,

		boolean : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__void_<init><java.util.List.java.util.List.boolean.java.lang.String>>
	CONSUME 
		java.util.List : 2,

		boolean : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__void_<init><java.util.Map.boolean>>
	CONSUME 
		boolean : 1,

		java.util.Map : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__void_<init><java.util.Map.boolean.java.lang.String>>
	CONSUME 
		boolean : 1,

		java.util.Map : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__void_<init><java.util.Set.boolean>>
	CONSUME 
		boolean : 1,

		java.util.Set : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalDoublesCurve__void_<init><java.util.Set.boolean.java.lang.String>>
	CONSUME 
		boolean : 1,

		java.util.Set : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalObjectsCurve$Meta__java.lang.Class_beanType<>>
	CONSUME 
		com.opengamma.analytics.math.curve.NodalObjectsCurve$Meta : 1;
	PRODUCE 
		java.lang.Class : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalObjectsCurve$Meta__java.util.Map_metaPropertyMap<>>
	CONSUME 
		com.opengamma.analytics.math.curve.NodalObjectsCurve$Meta : 1;
	PRODUCE 
		java.util.Map : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalObjectsCurve$Meta__org.joda.beans.BeanBuilder_builder<>>
	CONSUME 
		com.opengamma.analytics.math.curve.NodalObjectsCurve$Meta : 1;
	PRODUCE 
		org.joda.beans.BeanBuilder : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalObjectsCurve__boolean_equals<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.curve.NodalObjectsCurve : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalObjectsCurve__com.opengamma.analytics.math.curve.Curve_clone<>>
	CONSUME 
		com.opengamma.analytics.math.curve.NodalObjectsCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalObjectsCurve__com.opengamma.analytics.math.curve.Curve$Meta_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.NodalObjectsCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalObjectsCurve__com.opengamma.analytics.math.curve.NodalObjectsCurve_'from'<java.lang.Comparable[].java.lang.Object[]>>
	CONSUME 
		java.lang.Comparable[] : 1,

		java.lang.Object[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalObjectsCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalObjectsCurve__com.opengamma.analytics.math.curve.NodalObjectsCurve_'from'<java.lang.Comparable[].java.lang.Object[].java.lang.String>>
	CONSUME 
		java.lang.Comparable[] : 1,

		java.lang.Object[] : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalObjectsCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalObjectsCurve__com.opengamma.analytics.math.curve.NodalObjectsCurve_'from'<java.util.List.java.util.List>>
	CONSUME 
		java.util.List : 2;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalObjectsCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalObjectsCurve__com.opengamma.analytics.math.curve.NodalObjectsCurve_'from'<java.util.List.java.util.List.java.lang.String>>
	CONSUME 
		java.util.List : 2,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalObjectsCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalObjectsCurve__com.opengamma.analytics.math.curve.NodalObjectsCurve_'from'<java.util.Map>>
	CONSUME 
		java.util.Map : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalObjectsCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalObjectsCurve__com.opengamma.analytics.math.curve.NodalObjectsCurve_'from'<java.util.Map.java.lang.String>>
	CONSUME 
		java.util.Map : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalObjectsCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalObjectsCurve__com.opengamma.analytics.math.curve.NodalObjectsCurve_'from'<java.util.Set>>
	CONSUME 
		java.util.Set : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalObjectsCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalObjectsCurve__com.opengamma.analytics.math.curve.NodalObjectsCurve_'from'<java.util.Set.java.lang.String>>
	CONSUME 
		java.util.Set : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalObjectsCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalObjectsCurve__com.opengamma.analytics.math.curve.NodalObjectsCurve_clone<>>
	CONSUME 
		com.opengamma.analytics.math.curve.NodalObjectsCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalObjectsCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalObjectsCurve__com.opengamma.analytics.math.curve.NodalObjectsCurve_fromSorted<java.lang.Comparable[].java.lang.Object[]>>
	CONSUME 
		java.lang.Comparable[] : 1,

		java.lang.Object[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalObjectsCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalObjectsCurve__com.opengamma.analytics.math.curve.NodalObjectsCurve_fromSorted<java.lang.Comparable[].java.lang.Object[].java.lang.String>>
	CONSUME 
		java.lang.Comparable[] : 1,

		java.lang.Object[] : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalObjectsCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalObjectsCurve__com.opengamma.analytics.math.curve.NodalObjectsCurve_fromSorted<java.util.List.java.util.List>>
	CONSUME 
		java.util.List : 2;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalObjectsCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalObjectsCurve__com.opengamma.analytics.math.curve.NodalObjectsCurve_fromSorted<java.util.List.java.util.List.java.lang.String>>
	CONSUME 
		java.util.List : 2,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalObjectsCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalObjectsCurve__com.opengamma.analytics.math.curve.NodalObjectsCurve_fromSorted<java.util.Map>>
	CONSUME 
		java.util.Map : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalObjectsCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalObjectsCurve__com.opengamma.analytics.math.curve.NodalObjectsCurve_fromSorted<java.util.Map.java.lang.String>>
	CONSUME 
		java.util.Map : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalObjectsCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalObjectsCurve__com.opengamma.analytics.math.curve.NodalObjectsCurve_fromSorted<java.util.Set>>
	CONSUME 
		java.util.Set : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalObjectsCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalObjectsCurve__com.opengamma.analytics.math.curve.NodalObjectsCurve_fromSorted<java.util.Set.java.lang.String>>
	CONSUME 
		java.util.Set : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalObjectsCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalObjectsCurve__com.opengamma.analytics.math.curve.NodalObjectsCurve$Meta_meta<>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalObjectsCurve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalObjectsCurve__com.opengamma.analytics.math.curve.NodalObjectsCurve$Meta_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.NodalObjectsCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalObjectsCurve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalObjectsCurve__com.opengamma.analytics.math.curve.NodalObjectsCurve$Meta_metaNodalObjectsCurve<java.lang.Class.java.lang.Class>>
	CONSUME 
		java.lang.Class : 2;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalObjectsCurve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalObjectsCurve__com.opengamma.analytics.math.curve.ObjectsCurve$Meta_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.NodalObjectsCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ObjectsCurve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalObjectsCurve__java.lang.Object_clone<>>
	CONSUME 
		com.opengamma.analytics.math.curve.NodalObjectsCurve : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalObjectsCurve__java.lang.Object_getYValue<java.lang.Comparable>>
	CONSUME 
		java.lang.Comparable : 1,

		com.opengamma.analytics.math.curve.NodalObjectsCurve : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalObjectsCurve__org.joda.beans.MetaBean_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.NodalObjectsCurve : 1;
	PRODUCE 
		org.joda.beans.MetaBean : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalObjectsCurve__void_<init><java.lang.Comparable[].java.lang.Object[].boolean>>
	CONSUME 
		boolean : 1,

		java.lang.Comparable[] : 1,

		java.lang.Object[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalObjectsCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalObjectsCurve__void_<init><java.lang.Comparable[].java.lang.Object[].boolean.java.lang.String>>
	CONSUME 
		boolean : 1,

		java.lang.Comparable[] : 1,

		java.lang.Object[] : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalObjectsCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalObjectsCurve__void_<init><java.util.List.java.util.List.boolean>>
	CONSUME 
		java.util.List : 2,

		boolean : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalObjectsCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalObjectsCurve__void_<init><java.util.List.java.util.List.boolean.java.lang.String>>
	CONSUME 
		java.util.List : 2,

		boolean : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalObjectsCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalObjectsCurve__void_<init><java.util.Map.boolean>>
	CONSUME 
		boolean : 1,

		java.util.Map : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalObjectsCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalObjectsCurve__void_<init><java.util.Map.boolean.java.lang.String>>
	CONSUME 
		boolean : 1,

		java.util.Map : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalObjectsCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalObjectsCurve__void_<init><java.util.Set.boolean>>
	CONSUME 
		boolean : 1,

		java.util.Set : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalObjectsCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalObjectsCurve__void_<init><java.util.Set.boolean.java.lang.String>>
	CONSUME 
		boolean : 1,

		java.util.Set : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalObjectsCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalTenorDoubleCurve$Meta__java.lang.Class_beanType<>>
	CONSUME 
		com.opengamma.analytics.math.curve.NodalTenorDoubleCurve$Meta : 1;
	PRODUCE 
		java.lang.Class : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalTenorDoubleCurve$Meta__java.util.Map_metaPropertyMap<>>
	CONSUME 
		com.opengamma.analytics.math.curve.NodalTenorDoubleCurve$Meta : 1;
	PRODUCE 
		java.util.Map : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalTenorDoubleCurve$Meta__org.joda.beans.BeanBuilder_builder<>>
	CONSUME 
		com.opengamma.analytics.math.curve.NodalTenorDoubleCurve$Meta : 1;
	PRODUCE 
		org.joda.beans.BeanBuilder : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalTenorDoubleCurve__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.curve.NodalTenorDoubleCurve : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalTenorDoubleCurve__com.opengamma.analytics.math.curve.Curve_clone<>>
	CONSUME 
		com.opengamma.analytics.math.curve.NodalTenorDoubleCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalTenorDoubleCurve__com.opengamma.analytics.math.curve.Curve$Meta_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.NodalTenorDoubleCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalTenorDoubleCurve__com.opengamma.analytics.math.curve.NodalObjectsCurve_clone<>>
	CONSUME 
		com.opengamma.analytics.math.curve.NodalTenorDoubleCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalObjectsCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalTenorDoubleCurve__com.opengamma.analytics.math.curve.NodalObjectsCurve$Meta_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.NodalTenorDoubleCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalObjectsCurve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalTenorDoubleCurve__com.opengamma.analytics.math.curve.NodalTenorDoubleCurve_'from'<com.opengamma.util.time.Tenor[].java.lang.Double[]>>
	CONSUME 
		com.opengamma.util.time.Tenor[] : 1,

		java.lang.Double[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalTenorDoubleCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalTenorDoubleCurve__com.opengamma.analytics.math.curve.NodalTenorDoubleCurve_'from'<com.opengamma.util.time.Tenor[].java.lang.Double[].java.lang.String>>
	CONSUME 
		com.opengamma.util.time.Tenor[] : 1,

		java.lang.Double[] : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalTenorDoubleCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalTenorDoubleCurve__com.opengamma.analytics.math.curve.NodalTenorDoubleCurve_clone<>>
	CONSUME 
		com.opengamma.analytics.math.curve.NodalTenorDoubleCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalTenorDoubleCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalTenorDoubleCurve__com.opengamma.analytics.math.curve.NodalTenorDoubleCurve_fromSorted<com.opengamma.util.time.Tenor[].java.lang.Double[]>>
	CONSUME 
		com.opengamma.util.time.Tenor[] : 1,

		java.lang.Double[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalTenorDoubleCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalTenorDoubleCurve__com.opengamma.analytics.math.curve.NodalTenorDoubleCurve_fromSorted<com.opengamma.util.time.Tenor[].java.lang.Double[].java.lang.String>>
	CONSUME 
		com.opengamma.util.time.Tenor[] : 1,

		java.lang.Double[] : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalTenorDoubleCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalTenorDoubleCurve__com.opengamma.analytics.math.curve.NodalTenorDoubleCurve$Meta_meta<>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalTenorDoubleCurve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalTenorDoubleCurve__com.opengamma.analytics.math.curve.NodalTenorDoubleCurve$Meta_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.NodalTenorDoubleCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalTenorDoubleCurve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalTenorDoubleCurve__com.opengamma.analytics.math.curve.ObjectsCurve$Meta_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.NodalTenorDoubleCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ObjectsCurve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalTenorDoubleCurve__java.lang.Object_clone<>>
	CONSUME 
		com.opengamma.analytics.math.curve.NodalTenorDoubleCurve : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalTenorDoubleCurve__org.joda.beans.MetaBean_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.NodalTenorDoubleCurve : 1;
	PRODUCE 
		org.joda.beans.MetaBean : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalTenorDoubleCurve__void_<init><com.opengamma.util.time.Tenor[].java.lang.Double[].boolean>>
	CONSUME 
		com.opengamma.util.time.Tenor[] : 1,

		java.lang.Double[] : 1,

		boolean : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalTenorDoubleCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalTenorDoubleCurve__void_<init><com.opengamma.util.time.Tenor[].java.lang.Double[].boolean.java.lang.String>>
	CONSUME 
		com.opengamma.util.time.Tenor[] : 1,

		java.lang.Double[] : 1,

		boolean : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalTenorDoubleCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalTenorDoubleCurve__void_<init><java.util.List.java.util.List.boolean>>
	CONSUME 
		java.util.List : 2,

		boolean : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalTenorDoubleCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalTenorDoubleCurve__void_<init><java.util.List.java.util.List.boolean.java.lang.String>>
	CONSUME 
		java.util.List : 2,

		boolean : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalTenorDoubleCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalTenorDoubleCurve__void_<init><java.util.Map.boolean>>
	CONSUME 
		boolean : 1,

		java.util.Map : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalTenorDoubleCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalTenorDoubleCurve__void_<init><java.util.Map.boolean.java.lang.String>>
	CONSUME 
		boolean : 1,

		java.util.Map : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalTenorDoubleCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalTenorDoubleCurve__void_<init><java.util.Set.boolean>>
	CONSUME 
		boolean : 1,

		java.util.Set : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalTenorDoubleCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.NodalTenorDoubleCurve__void_<init><java.util.Set.boolean.java.lang.String>>
	CONSUME 
		boolean : 1,

		java.util.Set : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalTenorDoubleCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.ObjectsCurve$Meta__java.lang.Class_beanType<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ObjectsCurve$Meta : 1;
	PRODUCE 
		java.lang.Class : 1;
TRANSITION <com.opengamma.analytics.math.curve.ObjectsCurve$Meta__java.util.Map_metaPropertyMap<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ObjectsCurve$Meta : 1;
	PRODUCE 
		java.util.Map : 1;
TRANSITION <com.opengamma.analytics.math.curve.ObjectsCurve$Meta__org.joda.beans.BeanBuilder_builder<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ObjectsCurve$Meta : 1;
	PRODUCE 
		org.joda.beans.BeanBuilder : 1;
TRANSITION <com.opengamma.analytics.math.curve.ObjectsCurve$Meta__org.joda.beans.MetaProperty_n<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ObjectsCurve$Meta : 1;
	PRODUCE 
		org.joda.beans.MetaProperty : 1;
TRANSITION <com.opengamma.analytics.math.curve.ObjectsCurve$Meta__org.joda.beans.MetaProperty_xData<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ObjectsCurve$Meta : 1;
	PRODUCE 
		org.joda.beans.MetaProperty : 1;
TRANSITION <com.opengamma.analytics.math.curve.ObjectsCurve$Meta__org.joda.beans.MetaProperty_yData<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ObjectsCurve$Meta : 1;
	PRODUCE 
		org.joda.beans.MetaProperty : 1;
TRANSITION <com.opengamma.analytics.math.curve.ObjectsCurve__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.curve.ObjectsCurve : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.curve.ObjectsCurve__com.opengamma.analytics.math.curve.Curve$Meta_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ObjectsCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.ObjectsCurve__com.opengamma.analytics.math.curve.ObjectsCurve$Meta_meta<>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ObjectsCurve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.ObjectsCurve__com.opengamma.analytics.math.curve.ObjectsCurve$Meta_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ObjectsCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ObjectsCurve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.ObjectsCurve__com.opengamma.analytics.math.curve.ObjectsCurve$Meta_metaObjectsCurve<java.lang.Class.java.lang.Class>>
	CONSUME 
		java.lang.Class : 2;
	PRODUCE 
		com.opengamma.analytics.math.curve.ObjectsCurve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.ObjectsCurve__int_size<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ObjectsCurve : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.curve.ObjectsCurve__java.lang.Comparable[]_getXData<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ObjectsCurve : 1;
	PRODUCE 
		java.lang.Comparable[] : 1;
TRANSITION <com.opengamma.analytics.math.curve.ObjectsCurve__java.lang.Object[]_getYData<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ObjectsCurve : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.curve.ObjectsCurve__org.joda.beans.MetaBean_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ObjectsCurve : 1;
	PRODUCE 
		org.joda.beans.MetaBean : 1;
TRANSITION <com.opengamma.analytics.math.curve.ObjectsCurve__org.joda.beans.Property_n<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ObjectsCurve : 1;
	PRODUCE 
		org.joda.beans.Property : 1;
TRANSITION <com.opengamma.analytics.math.curve.ObjectsCurve__org.joda.beans.Property_xData<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ObjectsCurve : 1;
	PRODUCE 
		org.joda.beans.Property : 1;
TRANSITION <com.opengamma.analytics.math.curve.ObjectsCurve__org.joda.beans.Property_yData<>>
	CONSUME 
		com.opengamma.analytics.math.curve.ObjectsCurve : 1;
	PRODUCE 
		org.joda.beans.Property : 1;
TRANSITION <com.opengamma.analytics.math.curve.ObjectsCurve__void_<init><java.lang.Comparable[].java.lang.Object[].boolean>>
	CONSUME 
		boolean : 1,

		java.lang.Comparable[] : 1,

		java.lang.Object[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ObjectsCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.ObjectsCurve__void_<init><java.lang.Comparable[].java.lang.Object[].boolean.java.lang.String>>
	CONSUME 
		boolean : 1,

		java.lang.Comparable[] : 1,

		java.lang.Object[] : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ObjectsCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.ObjectsCurve__void_<init><java.util.List.java.util.List.boolean>>
	CONSUME 
		java.util.List : 2,

		boolean : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ObjectsCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.ObjectsCurve__void_<init><java.util.List.java.util.List.boolean.java.lang.String>>
	CONSUME 
		java.util.List : 2,

		boolean : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ObjectsCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.ObjectsCurve__void_<init><java.util.Map.boolean>>
	CONSUME 
		boolean : 1,

		java.util.Map : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ObjectsCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.ObjectsCurve__void_<init><java.util.Map.boolean.java.lang.String>>
	CONSUME 
		boolean : 1,

		java.util.Map : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ObjectsCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.ObjectsCurve__void_<init><java.util.Set.boolean>>
	CONSUME 
		boolean : 1,

		java.util.Set : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ObjectsCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.ObjectsCurve__void_<init><java.util.Set.boolean.java.lang.String>>
	CONSUME 
		boolean : 1,

		java.util.Set : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ObjectsCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.SpreadCurveShiftFunction__com.opengamma.analytics.math.curve.Curve_evaluate<com.opengamma.analytics.math.curve.Curve.double>>
	CONSUME 
		com.opengamma.analytics.math.curve.Curve : 1,

		double : 1,

		com.opengamma.analytics.math.curve.SpreadCurveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve : 1;
TRANSITION <com.opengamma.analytics.math.curve.SpreadCurveShiftFunction__com.opengamma.analytics.math.curve.Curve_evaluate<com.opengamma.analytics.math.curve.Curve.double.double>>
	CONSUME 
		com.opengamma.analytics.math.curve.Curve : 1,

		double : 2,

		com.opengamma.analytics.math.curve.SpreadCurveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve : 1;
TRANSITION <com.opengamma.analytics.math.curve.SpreadCurveShiftFunction__com.opengamma.analytics.math.curve.Curve_evaluate<com.opengamma.analytics.math.curve.Curve.double.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.curve.Curve : 1,

		double : 2,

		com.opengamma.analytics.math.curve.SpreadCurveShiftFunction : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve : 1;
TRANSITION <com.opengamma.analytics.math.curve.SpreadCurveShiftFunction__com.opengamma.analytics.math.curve.Curve_evaluate<com.opengamma.analytics.math.curve.Curve.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.curve.Curve : 1,

		double : 1,

		com.opengamma.analytics.math.curve.SpreadCurveShiftFunction : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve : 1;
TRANSITION <com.opengamma.analytics.math.curve.SpreadCurveShiftFunction__com.opengamma.analytics.math.curve.Curve_evaluate<com.opengamma.analytics.math.curve.Curve.double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.curve.Curve : 1,

		double[] : 2,

		com.opengamma.analytics.math.curve.SpreadCurveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve : 1;
TRANSITION <com.opengamma.analytics.math.curve.SpreadCurveShiftFunction__com.opengamma.analytics.math.curve.Curve_evaluate<com.opengamma.analytics.math.curve.Curve.double[].double[].java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.curve.Curve : 1,

		double[] : 2,

		com.opengamma.analytics.math.curve.SpreadCurveShiftFunction : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve : 1;
TRANSITION <com.opengamma.analytics.math.curve.SpreadCurveShiftFunction__com.opengamma.analytics.math.curve.SpreadDoublesCurve_evaluate<com.opengamma.analytics.math.curve.SpreadDoublesCurve.double>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.curve.SpreadDoublesCurve : 1,

		com.opengamma.analytics.math.curve.SpreadCurveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.SpreadDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.SpreadCurveShiftFunction__com.opengamma.analytics.math.curve.SpreadDoublesCurve_evaluate<com.opengamma.analytics.math.curve.SpreadDoublesCurve.double.double>>
	CONSUME 
		double : 2,

		com.opengamma.analytics.math.curve.SpreadDoublesCurve : 1,

		com.opengamma.analytics.math.curve.SpreadCurveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.SpreadDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.SpreadCurveShiftFunction__com.opengamma.analytics.math.curve.SpreadDoublesCurve_evaluate<com.opengamma.analytics.math.curve.SpreadDoublesCurve.double.double.java.lang.String>>
	CONSUME 
		double : 2,

		com.opengamma.analytics.math.curve.SpreadDoublesCurve : 1,

		com.opengamma.analytics.math.curve.SpreadCurveShiftFunction : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.SpreadDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.SpreadCurveShiftFunction__com.opengamma.analytics.math.curve.SpreadDoublesCurve_evaluate<com.opengamma.analytics.math.curve.SpreadDoublesCurve.double.java.lang.String>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.curve.SpreadDoublesCurve : 1,

		com.opengamma.analytics.math.curve.SpreadCurveShiftFunction : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.SpreadDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.SpreadCurveShiftFunction__com.opengamma.analytics.math.curve.SpreadDoublesCurve_evaluate<com.opengamma.analytics.math.curve.SpreadDoublesCurve.double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.curve.SpreadDoublesCurve : 1,

		com.opengamma.analytics.math.curve.SpreadCurveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.SpreadDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.SpreadCurveShiftFunction__com.opengamma.analytics.math.curve.SpreadDoublesCurve_evaluate<com.opengamma.analytics.math.curve.SpreadDoublesCurve.double[].double[].java.lang.String>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.curve.SpreadDoublesCurve : 1,

		com.opengamma.analytics.math.curve.SpreadCurveShiftFunction : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.SpreadDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.SpreadCurveShiftFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.SpreadCurveShiftFunction : 1;
TRANSITION <com.opengamma.analytics.math.curve.SpreadDoublesCurve$Meta__java.lang.Class_beanType<>>
	CONSUME 
		com.opengamma.analytics.math.curve.SpreadDoublesCurve$Meta : 1;
	PRODUCE 
		java.lang.Class : 1;
TRANSITION <com.opengamma.analytics.math.curve.SpreadDoublesCurve$Meta__java.util.Map_metaPropertyMap<>>
	CONSUME 
		com.opengamma.analytics.math.curve.SpreadDoublesCurve$Meta : 1;
	PRODUCE 
		java.util.Map : 1;
TRANSITION <com.opengamma.analytics.math.curve.SpreadDoublesCurve$Meta__org.joda.beans.BeanBuilder_builder<>>
	CONSUME 
		com.opengamma.analytics.math.curve.SpreadDoublesCurve$Meta : 1;
	PRODUCE 
		org.joda.beans.BeanBuilder : 1;
TRANSITION <com.opengamma.analytics.math.curve.SpreadDoublesCurve$Meta__org.joda.beans.MetaProperty_curves<>>
	CONSUME 
		com.opengamma.analytics.math.curve.SpreadDoublesCurve$Meta : 1;
	PRODUCE 
		org.joda.beans.MetaProperty : 1;
TRANSITION <com.opengamma.analytics.math.curve.SpreadDoublesCurve$Meta__org.joda.beans.MetaProperty_f<>>
	CONSUME 
		com.opengamma.analytics.math.curve.SpreadDoublesCurve$Meta : 1;
	PRODUCE 
		org.joda.beans.MetaProperty : 1;
TRANSITION <com.opengamma.analytics.math.curve.SpreadDoublesCurve$Meta__org.joda.beans.MetaProperty_spreadFunction<>>
	CONSUME 
		com.opengamma.analytics.math.curve.SpreadDoublesCurve$Meta : 1;
	PRODUCE 
		org.joda.beans.MetaProperty : 1;
TRANSITION <com.opengamma.analytics.math.curve.SpreadDoublesCurve__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.curve.SpreadDoublesCurve : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.curve.SpreadDoublesCurve__com.opengamma.analytics.math.curve.Curve_clone<>>
	CONSUME 
		com.opengamma.analytics.math.curve.SpreadDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve : 1;
TRANSITION <com.opengamma.analytics.math.curve.SpreadDoublesCurve__com.opengamma.analytics.math.curve.Curve$Meta_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.SpreadDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.SpreadDoublesCurve__com.opengamma.analytics.math.curve.DoublesCurve$Meta_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.SpreadDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.DoublesCurve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.SpreadDoublesCurve__com.opengamma.analytics.math.curve.DoublesCurve[]_getUnderlyingCurves<>>
	CONSUME 
		com.opengamma.analytics.math.curve.SpreadDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.DoublesCurve[] : 1;
TRANSITION <com.opengamma.analytics.math.curve.SpreadDoublesCurve__com.opengamma.analytics.math.curve.SpreadDoublesCurve_'from'<com.opengamma.analytics.math.curve.CurveSpreadFunction.com.opengamma.analytics.math.curve.DoublesCurve[]>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurve[] : 1,

		com.opengamma.analytics.math.curve.CurveSpreadFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.SpreadDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.SpreadDoublesCurve__com.opengamma.analytics.math.curve.SpreadDoublesCurve_'from'<com.opengamma.analytics.math.curve.CurveSpreadFunction.java.lang.String.com.opengamma.analytics.math.curve.DoublesCurve[]>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurve[] : 1,

		com.opengamma.analytics.math.curve.CurveSpreadFunction : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.SpreadDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.SpreadDoublesCurve__com.opengamma.analytics.math.curve.SpreadDoublesCurve_clone<>>
	CONSUME 
		com.opengamma.analytics.math.curve.SpreadDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.SpreadDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.SpreadDoublesCurve__com.opengamma.analytics.math.curve.SpreadDoublesCurve$Meta_meta<>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.SpreadDoublesCurve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.SpreadDoublesCurve__com.opengamma.analytics.math.curve.SpreadDoublesCurve$Meta_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.SpreadDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.SpreadDoublesCurve$Meta : 1;
TRANSITION <com.opengamma.analytics.math.curve.SpreadDoublesCurve__double_getDyDx<double>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.curve.SpreadDoublesCurve : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.curve.SpreadDoublesCurve__int_size<>>
	CONSUME 
		com.opengamma.analytics.math.curve.SpreadDoublesCurve : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.curve.SpreadDoublesCurve__java.lang.Comparable[]_getXData<>>
	CONSUME 
		com.opengamma.analytics.math.curve.SpreadDoublesCurve : 1;
	PRODUCE 
		java.lang.Comparable[] : 1;
TRANSITION <com.opengamma.analytics.math.curve.SpreadDoublesCurve__java.lang.Double_getYValue<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.curve.SpreadDoublesCurve : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.curve.SpreadDoublesCurve__java.lang.Double[]_getXData<>>
	CONSUME 
		com.opengamma.analytics.math.curve.SpreadDoublesCurve : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.curve.SpreadDoublesCurve__java.lang.Double[]_getYData<>>
	CONSUME 
		com.opengamma.analytics.math.curve.SpreadDoublesCurve : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.curve.SpreadDoublesCurve__java.lang.Double[]_getYValueParameterSensitivity<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.curve.SpreadDoublesCurve : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.curve.SpreadDoublesCurve__java.lang.Object_clone<>>
	CONSUME 
		com.opengamma.analytics.math.curve.SpreadDoublesCurve : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.curve.SpreadDoublesCurve__java.lang.Object_getYValue<java.lang.Comparable>>
	CONSUME 
		com.opengamma.analytics.math.curve.SpreadDoublesCurve : 1,

		java.lang.Comparable : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.curve.SpreadDoublesCurve__java.lang.Object[]_getYData<>>
	CONSUME 
		com.opengamma.analytics.math.curve.SpreadDoublesCurve : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.curve.SpreadDoublesCurve__java.lang.String_getLongName<>>
	CONSUME 
		com.opengamma.analytics.math.curve.SpreadDoublesCurve : 1;
	PRODUCE 
		java.lang.String : 1;
TRANSITION <com.opengamma.analytics.math.curve.SpreadDoublesCurve__java.util.Set_getUnderlyingNames<>>
	CONSUME 
		com.opengamma.analytics.math.curve.SpreadDoublesCurve : 1;
	PRODUCE 
		java.util.Set : 1;
TRANSITION <com.opengamma.analytics.math.curve.SpreadDoublesCurve__org.joda.beans.MetaBean_metaBean<>>
	CONSUME 
		com.opengamma.analytics.math.curve.SpreadDoublesCurve : 1;
	PRODUCE 
		org.joda.beans.MetaBean : 1;
TRANSITION <com.opengamma.analytics.math.curve.SpreadDoublesCurve__org.joda.beans.Property_curves<>>
	CONSUME 
		com.opengamma.analytics.math.curve.SpreadDoublesCurve : 1;
	PRODUCE 
		org.joda.beans.Property : 1;
TRANSITION <com.opengamma.analytics.math.curve.SpreadDoublesCurve__org.joda.beans.Property_f<>>
	CONSUME 
		com.opengamma.analytics.math.curve.SpreadDoublesCurve : 1;
	PRODUCE 
		org.joda.beans.Property : 1;
TRANSITION <com.opengamma.analytics.math.curve.SpreadDoublesCurve__org.joda.beans.Property_spreadFunction<>>
	CONSUME 
		com.opengamma.analytics.math.curve.SpreadDoublesCurve : 1;
	PRODUCE 
		org.joda.beans.Property : 1;
TRANSITION <com.opengamma.analytics.math.curve.SpreadDoublesCurve__void_<init><com.opengamma.analytics.math.curve.CurveSpreadFunction.com.opengamma.analytics.math.curve.DoublesCurve[]>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurve[] : 1,

		com.opengamma.analytics.math.curve.CurveSpreadFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.SpreadDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.SpreadDoublesCurve__void_<init><com.opengamma.analytics.math.curve.CurveSpreadFunction.java.lang.String.com.opengamma.analytics.math.curve.DoublesCurve[]>>
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurve[] : 1,

		com.opengamma.analytics.math.curve.CurveSpreadFunction : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.SpreadDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.curve.SubtractCurveSpreadFunction$1__java.lang.Double_evaluate<java.lang.Double[]>>
	CONSUME 
		java.lang.Double[] : 1,

		com.opengamma.analytics.math.curve.SubtractCurveSpreadFunction$1 : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.curve.SubtractCurveSpreadFunction$1__java.lang.Object_evaluate<java.lang.Object[]>>
	CONSUME 
		java.lang.Object[] : 1,

		com.opengamma.analytics.math.curve.SubtractCurveSpreadFunction$1 : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.curve.SubtractCurveSpreadFunction__com.opengamma.analytics.math.curve.CurveSpreadFunction_getInstance<>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.CurveSpreadFunction : 1;
TRANSITION <com.opengamma.analytics.math.curve.SubtractCurveSpreadFunction__com.opengamma.analytics.math.function.Function_evaluate<com.opengamma.analytics.math.curve.Curve[]>>
	CONSUME 
		com.opengamma.analytics.math.curve.SubtractCurveSpreadFunction : 1,

		com.opengamma.analytics.math.curve.Curve[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.Function : 1;
TRANSITION <com.opengamma.analytics.math.curve.SubtractCurveSpreadFunction__java.lang.Object_evaluate<java.lang.Object[]>>
	CONSUME 
		java.lang.Object[] : 1,

		com.opengamma.analytics.math.curve.SubtractCurveSpreadFunction : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.curve.SubtractCurveSpreadFunction__java.lang.String_getName<>>
	CONSUME 
		com.opengamma.analytics.math.curve.SubtractCurveSpreadFunction : 1;
	PRODUCE 
		java.lang.String : 1;
TRANSITION <com.opengamma.analytics.math.curve.SubtractCurveSpreadFunction__java.lang.String_getOperationName<>>
	CONSUME 
		com.opengamma.analytics.math.curve.SubtractCurveSpreadFunction : 1;
	PRODUCE 
		java.lang.String : 1;
TRANSITION <com.opengamma.analytics.math.curve.SubtractCurveSpreadFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.SubtractCurveSpreadFunction : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.Differentiator__com.opengamma.analytics.math.function.Function1D_differentiate<com.opengamma.analytics.math.function.Function1D>>
	CONSUME 
		com.opengamma.analytics.math.differentiation.Differentiator : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.Function1D : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.Differentiator__com.opengamma.analytics.math.function.Function1D_differentiate<com.opengamma.analytics.math.function.Function1D.com.opengamma.analytics.math.function.Function1D>>
	CONSUME 
		com.opengamma.analytics.math.differentiation.Differentiator : 1,

		com.opengamma.analytics.math.function.Function1D : 2;
	PRODUCE 
		com.opengamma.analytics.math.function.Function1D : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.FiniteDifferenceType__com.opengamma.analytics.math.differentiation.FiniteDifferenceType_valueOf<java.lang.String>>
	CONSUME 
		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.differentiation.FiniteDifferenceType : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.FiniteDifferenceType__com.opengamma.analytics.math.differentiation.FiniteDifferenceType[]_values<>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.differentiation.FiniteDifferenceType[] : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.MatrixFieldFirstOrderDifferentiator$1__com.opengamma.analytics.math.matrix.DoubleMatrix2D[]_evaluate<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.differentiation.MatrixFieldFirstOrderDifferentiator$1 : 1,

		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D[] : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.MatrixFieldFirstOrderDifferentiator$1__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.differentiation.MatrixFieldFirstOrderDifferentiator$1 : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.MatrixFieldFirstOrderDifferentiator$2__com.opengamma.analytics.math.matrix.DoubleMatrix2D[]_evaluate<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.differentiation.MatrixFieldFirstOrderDifferentiator$2 : 1,

		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D[] : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.MatrixFieldFirstOrderDifferentiator$2__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.differentiation.MatrixFieldFirstOrderDifferentiator$2 : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.MatrixFieldFirstOrderDifferentiator__com.opengamma.analytics.math.function.Function1D_differentiate<com.opengamma.analytics.math.function.Function1D>>
	CONSUME 
		com.opengamma.analytics.math.differentiation.MatrixFieldFirstOrderDifferentiator : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.Function1D : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.MatrixFieldFirstOrderDifferentiator__com.opengamma.analytics.math.function.Function1D_differentiate<com.opengamma.analytics.math.function.Function1D.com.opengamma.analytics.math.function.Function1D>>
	CONSUME 
		com.opengamma.analytics.math.differentiation.MatrixFieldFirstOrderDifferentiator : 1,

		com.opengamma.analytics.math.function.Function1D : 2;
	PRODUCE 
		com.opengamma.analytics.math.function.Function1D : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.MatrixFieldFirstOrderDifferentiator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.differentiation.MatrixFieldFirstOrderDifferentiator : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.MatrixFieldFirstOrderDifferentiator__void_<init><double>>
	CONSUME 
		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.differentiation.MatrixFieldFirstOrderDifferentiator : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.ScalarFieldFirstOrderDifferentiator$1__com.opengamma.analytics.math.matrix.DoubleMatrix1D_evaluate<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.differentiation.ScalarFieldFirstOrderDifferentiator$1 : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.ScalarFieldFirstOrderDifferentiator$1__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.differentiation.ScalarFieldFirstOrderDifferentiator$1 : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.ScalarFieldFirstOrderDifferentiator$2__com.opengamma.analytics.math.matrix.DoubleMatrix1D_evaluate<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.differentiation.ScalarFieldFirstOrderDifferentiator$2 : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.ScalarFieldFirstOrderDifferentiator$2__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.differentiation.ScalarFieldFirstOrderDifferentiator$2 : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.ScalarFieldFirstOrderDifferentiator$3__com.opengamma.analytics.math.matrix.DoubleMatrix1D_evaluate<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.differentiation.ScalarFieldFirstOrderDifferentiator$3 : 1,

		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.ScalarFieldFirstOrderDifferentiator$3__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.differentiation.ScalarFieldFirstOrderDifferentiator$3 : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.ScalarFieldFirstOrderDifferentiator$4__com.opengamma.analytics.math.matrix.DoubleMatrix1D_evaluate<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.differentiation.ScalarFieldFirstOrderDifferentiator$4 : 1,

		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.ScalarFieldFirstOrderDifferentiator$4__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.differentiation.ScalarFieldFirstOrderDifferentiator$4 : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.ScalarFieldFirstOrderDifferentiator__com.opengamma.analytics.math.function.Function1D_differentiate<com.opengamma.analytics.math.function.Function1D>>
	CONSUME 
		com.opengamma.analytics.math.differentiation.ScalarFieldFirstOrderDifferentiator : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.Function1D : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.ScalarFieldFirstOrderDifferentiator__com.opengamma.analytics.math.function.Function1D_differentiate<com.opengamma.analytics.math.function.Function1D.com.opengamma.analytics.math.function.Function1D>>
	CONSUME 
		com.opengamma.analytics.math.differentiation.ScalarFieldFirstOrderDifferentiator : 1,

		com.opengamma.analytics.math.function.Function1D : 2;
	PRODUCE 
		com.opengamma.analytics.math.function.Function1D : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.ScalarFieldFirstOrderDifferentiator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.differentiation.ScalarFieldFirstOrderDifferentiator : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.ScalarFieldFirstOrderDifferentiator__void_<init><com.opengamma.analytics.math.differentiation.FiniteDifferenceType.double>>
	CONSUME 
		com.opengamma.analytics.math.differentiation.FiniteDifferenceType : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.differentiation.ScalarFieldFirstOrderDifferentiator : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator$1__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator$1 : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator$1__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator$1 : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator$2__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator$2 : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator$2__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator$2 : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator$3__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator$3 : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator$3__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator$3 : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator$4__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator$4 : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator$4__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator$4 : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator__com.opengamma.analytics.math.function.Function1D_differentiate<com.opengamma.analytics.math.function.Function1D>>
	CONSUME 
		com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.Function1D : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator__com.opengamma.analytics.math.function.Function1D_differentiate<com.opengamma.analytics.math.function.Function1D.com.opengamma.analytics.math.function.Function1D>>
	CONSUME 
		com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator : 1,

		com.opengamma.analytics.math.function.Function1D : 2;
	PRODUCE 
		com.opengamma.analytics.math.function.Function1D : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator__void_<init><com.opengamma.analytics.math.differentiation.FiniteDifferenceType>>
	CONSUME 
		com.opengamma.analytics.math.differentiation.FiniteDifferenceType : 1;
	PRODUCE 
		com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator__void_<init><com.opengamma.analytics.math.differentiation.FiniteDifferenceType.double>>
	CONSUME 
		com.opengamma.analytics.math.differentiation.FiniteDifferenceType : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator$1__com.opengamma.analytics.math.matrix.DoubleMatrix2D_evaluate<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator$1 : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator$1__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator$1 : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator$2__com.opengamma.analytics.math.matrix.DoubleMatrix2D_evaluate<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator$2 : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator$2__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator$2 : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator$3__com.opengamma.analytics.math.matrix.DoubleMatrix2D_evaluate<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator$3 : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator$3__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator$3 : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator$4__com.opengamma.analytics.math.matrix.DoubleMatrix2D_evaluate<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator$4 : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator$4__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator$4 : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator__com.opengamma.analytics.math.function.Function1D_differentiate<com.opengamma.analytics.math.function.Function1D>>
	CONSUME 
		com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.Function1D : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator__com.opengamma.analytics.math.function.Function1D_differentiate<com.opengamma.analytics.math.function.Function1D.com.opengamma.analytics.math.function.Function1D>>
	CONSUME 
		com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator : 1,

		com.opengamma.analytics.math.function.Function1D : 2;
	PRODUCE 
		com.opengamma.analytics.math.function.Function1D : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator__void_<init><com.opengamma.analytics.math.differentiation.FiniteDifferenceType>>
	CONSUME 
		com.opengamma.analytics.math.differentiation.FiniteDifferenceType : 1;
	PRODUCE 
		com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator__void_<init><com.opengamma.analytics.math.differentiation.FiniteDifferenceType.double>>
	CONSUME 
		com.opengamma.analytics.math.differentiation.FiniteDifferenceType : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator__void_<init><double>>
	CONSUME 
		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator$1__com.opengamma.analytics.math.matrix.DoubleMatrix2D[]_evaluate<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator$1 : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D[] : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator$1__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator$1 : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator$2__com.opengamma.analytics.math.matrix.DoubleMatrix2D[]_evaluate<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator$2 : 1,

		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D[] : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator$2__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator$2 : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator$3__com.opengamma.analytics.math.matrix.DoubleMatrix2D[]_evaluate<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator$3 : 1,

		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D[] : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator$3__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator$3 : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator$4__com.opengamma.analytics.math.matrix.DoubleMatrix2D_evaluate<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator$4 : 1,

		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator$4__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator$4 : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator__com.opengamma.analytics.math.function.Function1D_differentiate<com.opengamma.analytics.math.function.Function1D>>
	CONSUME 
		com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.Function1D : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator__com.opengamma.analytics.math.function.Function1D_differentiate<com.opengamma.analytics.math.function.Function1D.com.opengamma.analytics.math.function.Function1D>>
	CONSUME 
		com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator : 1,

		com.opengamma.analytics.math.function.Function1D : 2;
	PRODUCE 
		com.opengamma.analytics.math.function.Function1D : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator__com.opengamma.analytics.math.function.Function1D_differentiateFull<com.opengamma.analytics.math.function.Function1D>>
	CONSUME 
		com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.Function1D : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator__com.opengamma.analytics.math.function.Function1D_differentiateNoCross<com.opengamma.analytics.math.function.Function1D>>
	CONSUME 
		com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.Function1D : 1;
TRANSITION <com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator : 1;
TRANSITION <com.opengamma.analytics.math.fft.JTransformsWrapper__com.opengamma.analytics.math.number.ComplexNumber[]_fullInverseTransform1DReal<double[].boolean>>
	CONSUME 
		boolean : 1,

		double[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.number.ComplexNumber[] : 1;
TRANSITION <com.opengamma.analytics.math.fft.JTransformsWrapper__com.opengamma.analytics.math.number.ComplexNumber[]_fullTransform1DReal<double[]>>
	CONSUME 
		double[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.number.ComplexNumber[] : 1;
TRANSITION <com.opengamma.analytics.math.fft.JTransformsWrapper__com.opengamma.analytics.math.number.ComplexNumber[]_inverseTransform1DComplex<com.opengamma.analytics.math.number.ComplexNumber[].boolean>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber[] : 1,

		boolean : 1;
	PRODUCE 
		com.opengamma.analytics.math.number.ComplexNumber[] : 1;
TRANSITION <com.opengamma.analytics.math.fft.JTransformsWrapper__com.opengamma.analytics.math.number.ComplexNumber[]_inverseTransform1DReal<double[].boolean>>
	CONSUME 
		boolean : 1,

		double[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.number.ComplexNumber[] : 1;
TRANSITION <com.opengamma.analytics.math.fft.JTransformsWrapper__com.opengamma.analytics.math.number.ComplexNumber[]_transform1DComplex<com.opengamma.analytics.math.number.ComplexNumber[]>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.number.ComplexNumber[] : 1;
TRANSITION <com.opengamma.analytics.math.fft.JTransformsWrapper__com.opengamma.analytics.math.number.ComplexNumber[]_transform1DReal<double[]>>
	CONSUME 
		double[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.number.ComplexNumber[] : 1;
TRANSITION <com.opengamma.analytics.math.fft.JTransformsWrapper__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.fft.JTransformsWrapper : 1;
TRANSITION <com.opengamma.analytics.math.function.ConcatenatedVectorFunction__com.opengamma.analytics.math.matrix.DoubleMatrix1D_evaluate<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.function.ConcatenatedVectorFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.function.ConcatenatedVectorFunction__com.opengamma.analytics.math.matrix.DoubleMatrix2D_calculateJacobian<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.function.ConcatenatedVectorFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.function.ConcatenatedVectorFunction__int_getLengthOfDomain<>>
	CONSUME 
		com.opengamma.analytics.math.function.ConcatenatedVectorFunction : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.function.ConcatenatedVectorFunction__int_getLengthOfRange<>>
	CONSUME 
		com.opengamma.analytics.math.function.ConcatenatedVectorFunction : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.function.ConcatenatedVectorFunction__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.function.ConcatenatedVectorFunction : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.function.ConcatenatedVectorFunction__void_<init><com.opengamma.analytics.math.function.VectorFunction[]>>
	CONSUME 
		com.opengamma.analytics.math.function.VectorFunction[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.ConcatenatedVectorFunction : 1;
TRANSITION <com.opengamma.analytics.math.function.DoubleFunction1D$10__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.function.DoubleFunction1D$10 : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.function.DoubleFunction1D$10__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.function.DoubleFunction1D$10 : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.function.DoubleFunction1D$11__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.function.DoubleFunction1D$11 : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.function.DoubleFunction1D$11__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.function.DoubleFunction1D$11 : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.function.DoubleFunction1D$12__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.function.DoubleFunction1D$12 : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.function.DoubleFunction1D$12__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.function.DoubleFunction1D$12 : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.function.DoubleFunction1D$1__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.function.DoubleFunction1D$1 : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.function.DoubleFunction1D$1__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.function.DoubleFunction1D$1 : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.function.DoubleFunction1D$2__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.function.DoubleFunction1D$2 : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.function.DoubleFunction1D$2__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.function.DoubleFunction1D$2 : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.function.DoubleFunction1D$3__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.function.DoubleFunction1D$3 : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.function.DoubleFunction1D$3__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.function.DoubleFunction1D$3 : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.function.DoubleFunction1D$4__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.function.DoubleFunction1D$4 : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.function.DoubleFunction1D$4__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.function.DoubleFunction1D$4 : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.function.DoubleFunction1D$5__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.function.DoubleFunction1D$5 : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.function.DoubleFunction1D$5__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.function.DoubleFunction1D$5 : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.function.DoubleFunction1D$6__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.function.DoubleFunction1D$6 : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.function.DoubleFunction1D$6__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.function.DoubleFunction1D$6 : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.function.DoubleFunction1D$7__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.function.DoubleFunction1D$7 : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.function.DoubleFunction1D$7__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.function.DoubleFunction1D$7 : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.function.DoubleFunction1D$8__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.function.DoubleFunction1D$8 : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.function.DoubleFunction1D$8__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.function.DoubleFunction1D$8 : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.function.DoubleFunction1D$9__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.function.DoubleFunction1D$9 : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.function.DoubleFunction1D$9__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.function.DoubleFunction1D$9 : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.function.DoubleFunction1D__com.opengamma.analytics.math.function.DoubleFunction1D_'from'<com.opengamma.analytics.math.function.Function1D>>
	CONSUME 
		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.DoubleFunction1D : 1;
TRANSITION <com.opengamma.analytics.math.function.DoubleFunction1D__com.opengamma.analytics.math.function.DoubleFunction1D_add<com.opengamma.analytics.math.function.DoubleFunction1D>>
	CONSUME 
		com.opengamma.analytics.math.function.DoubleFunction1D : 2;
	PRODUCE 
		com.opengamma.analytics.math.function.DoubleFunction1D : 1;
TRANSITION <com.opengamma.analytics.math.function.DoubleFunction1D__com.opengamma.analytics.math.function.DoubleFunction1D_add<double>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.function.DoubleFunction1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.DoubleFunction1D : 1;
TRANSITION <com.opengamma.analytics.math.function.DoubleFunction1D__com.opengamma.analytics.math.function.DoubleFunction1D_derivative<>>
	CONSUME 
		com.opengamma.analytics.math.function.DoubleFunction1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.DoubleFunction1D : 1;
TRANSITION <com.opengamma.analytics.math.function.DoubleFunction1D__com.opengamma.analytics.math.function.DoubleFunction1D_derivative<com.opengamma.analytics.math.differentiation.FiniteDifferenceType.double>>
	CONSUME 
		com.opengamma.analytics.math.differentiation.FiniteDifferenceType : 1,

		double : 1,

		com.opengamma.analytics.math.function.DoubleFunction1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.DoubleFunction1D : 1;
TRANSITION <com.opengamma.analytics.math.function.DoubleFunction1D__com.opengamma.analytics.math.function.DoubleFunction1D_divide<com.opengamma.analytics.math.function.DoubleFunction1D>>
	CONSUME 
		com.opengamma.analytics.math.function.DoubleFunction1D : 2;
	PRODUCE 
		com.opengamma.analytics.math.function.DoubleFunction1D : 1;
TRANSITION <com.opengamma.analytics.math.function.DoubleFunction1D__com.opengamma.analytics.math.function.DoubleFunction1D_divide<double>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.function.DoubleFunction1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.DoubleFunction1D : 1;
TRANSITION <com.opengamma.analytics.math.function.DoubleFunction1D__com.opengamma.analytics.math.function.DoubleFunction1D_multiply<com.opengamma.analytics.math.function.DoubleFunction1D>>
	CONSUME 
		com.opengamma.analytics.math.function.DoubleFunction1D : 2;
	PRODUCE 
		com.opengamma.analytics.math.function.DoubleFunction1D : 1;
TRANSITION <com.opengamma.analytics.math.function.DoubleFunction1D__com.opengamma.analytics.math.function.DoubleFunction1D_multiply<double>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.function.DoubleFunction1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.DoubleFunction1D : 1;
TRANSITION <com.opengamma.analytics.math.function.DoubleFunction1D__com.opengamma.analytics.math.function.DoubleFunction1D_subtract<com.opengamma.analytics.math.function.DoubleFunction1D>>
	CONSUME 
		com.opengamma.analytics.math.function.DoubleFunction1D : 2;
	PRODUCE 
		com.opengamma.analytics.math.function.DoubleFunction1D : 1;
TRANSITION <com.opengamma.analytics.math.function.DoubleFunction1D__com.opengamma.analytics.math.function.DoubleFunction1D_subtract<double>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.function.DoubleFunction1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.DoubleFunction1D : 1;
TRANSITION <com.opengamma.analytics.math.function.DoubleFunction1D__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.DoubleFunction1D : 1;
TRANSITION <com.opengamma.analytics.math.function.DoublesVectorFunctionProvider__com.opengamma.analytics.math.function.VectorFunction_'from'<double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.function.DoublesVectorFunctionProvider : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.VectorFunction : 1;
TRANSITION <com.opengamma.analytics.math.function.DoublesVectorFunctionProvider__com.opengamma.analytics.math.function.VectorFunction_'from'<java.lang.Double[]>>
	CONSUME 
		java.lang.Double[] : 1,

		com.opengamma.analytics.math.function.DoublesVectorFunctionProvider : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.VectorFunction : 1;
TRANSITION <com.opengamma.analytics.math.function.DoublesVectorFunctionProvider__com.opengamma.analytics.math.function.VectorFunction_'from'<java.lang.Object[]>>
	CONSUME 
		java.lang.Object[] : 1,

		com.opengamma.analytics.math.function.DoublesVectorFunctionProvider : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.VectorFunction : 1;
TRANSITION <com.opengamma.analytics.math.function.DoublesVectorFunctionProvider__com.opengamma.analytics.math.function.VectorFunction_'from'<java.util.List>>
	CONSUME 
		java.util.List : 1,

		com.opengamma.analytics.math.function.DoublesVectorFunctionProvider : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.VectorFunction : 1;
TRANSITION <com.opengamma.analytics.math.function.DoublesVectorFunctionProvider__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.DoublesVectorFunctionProvider : 1;
TRANSITION <com.opengamma.analytics.math.function.Function1D__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.function.Function1D__java.lang.Object_evaluate<java.lang.Object[]>>
	CONSUME 
		java.lang.Object[] : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.function.Function1D__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.Function1D : 1;
TRANSITION <com.opengamma.analytics.math.function.Function2D__java.lang.Object_evaluate<java.lang.Object.java.lang.Object>>
	CONSUME 
		java.lang.Object : 2,

		com.opengamma.analytics.math.function.Function2D : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.function.Function2D__java.lang.Object_evaluate<java.lang.Object[]>>
	CONSUME 
		java.lang.Object[] : 1,

		com.opengamma.analytics.math.function.Function2D : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.function.Function2D__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.Function2D : 1;
TRANSITION <com.opengamma.analytics.math.function.Function__java.lang.Object_evaluate<java.lang.Object[]>>
	CONSUME 
		com.opengamma.analytics.math.function.Function : 1,

		java.lang.Object[] : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.function.FunctionND__java.lang.Object_evaluate<java.lang.Object[]>>
	CONSUME 
		java.lang.Object[] : 1,

		com.opengamma.analytics.math.function.FunctionND : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.function.FunctionND__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.FunctionND : 1;
TRANSITION <com.opengamma.analytics.math.function.InterpolatedCurveVectorFunction__com.opengamma.analytics.math.matrix.DoubleMatrix1D_evaluate<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.function.InterpolatedCurveVectorFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.function.InterpolatedCurveVectorFunction__com.opengamma.analytics.math.matrix.DoubleMatrix2D_calculateJacobian<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.function.InterpolatedCurveVectorFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.function.InterpolatedCurveVectorFunction__int_getLengthOfDomain<>>
	CONSUME 
		com.opengamma.analytics.math.function.InterpolatedCurveVectorFunction : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.function.InterpolatedCurveVectorFunction__int_getLengthOfRange<>>
	CONSUME 
		com.opengamma.analytics.math.function.InterpolatedCurveVectorFunction : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.function.InterpolatedCurveVectorFunction__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.function.InterpolatedCurveVectorFunction : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.function.InterpolatedCurveVectorFunction__void_<init><double[].com.opengamma.analytics.math.interpolation.Interpolator1D.double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.InterpolatedCurveVectorFunction : 1;
TRANSITION <com.opengamma.analytics.math.function.InterpolatedVectorFunctionProvider__com.opengamma.analytics.math.function.VectorFunction_'from'<double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.function.InterpolatedVectorFunctionProvider : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.VectorFunction : 1;
TRANSITION <com.opengamma.analytics.math.function.InterpolatedVectorFunctionProvider__com.opengamma.analytics.math.interpolation.Interpolator1D_getInterpolator<>>
	CONSUME 
		com.opengamma.analytics.math.function.InterpolatedVectorFunctionProvider : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.function.InterpolatedVectorFunctionProvider__double[]_getKnots<>>
	CONSUME 
		com.opengamma.analytics.math.function.InterpolatedVectorFunctionProvider : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.function.InterpolatedVectorFunctionProvider__void_<init><com.opengamma.analytics.math.interpolation.Interpolator1D.double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.InterpolatedVectorFunctionProvider : 1;
TRANSITION <com.opengamma.analytics.math.function.ParameterizedCurve$1__com.opengamma.analytics.math.matrix.DoubleMatrix1D_evaluate<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.function.ParameterizedCurve$1 : 1,

		java.lang.Double : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.function.ParameterizedCurve$1__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.function.ParameterizedCurve$1 : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.function.ParameterizedCurve__com.opengamma.analytics.math.function.Function1D_getYParameterSensitivity<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.function.ParameterizedCurve : 1,

		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.Function1D : 1;
TRANSITION <com.opengamma.analytics.math.function.ParameterizedCurve__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.ParameterizedCurve : 1;
TRANSITION <com.opengamma.analytics.math.function.ParameterizedCurveVectorFunction__com.opengamma.analytics.math.matrix.DoubleMatrix1D_evaluate<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.function.ParameterizedCurveVectorFunction : 1,

		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.function.ParameterizedCurveVectorFunction__com.opengamma.analytics.math.matrix.DoubleMatrix2D_calculateJacobian<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.function.ParameterizedCurveVectorFunction : 1,

		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.function.ParameterizedCurveVectorFunction__int_getLengthOfDomain<>>
	CONSUME 
		com.opengamma.analytics.math.function.ParameterizedCurveVectorFunction : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.function.ParameterizedCurveVectorFunction__int_getLengthOfRange<>>
	CONSUME 
		com.opengamma.analytics.math.function.ParameterizedCurveVectorFunction : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.function.ParameterizedCurveVectorFunction__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.function.ParameterizedCurveVectorFunction : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.function.ParameterizedCurveVectorFunction__void_<init><double[].com.opengamma.analytics.math.function.ParameterizedCurve>>
	CONSUME 
		com.opengamma.analytics.math.function.ParameterizedCurve : 1,

		double[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.ParameterizedCurveVectorFunction : 1;
TRANSITION <com.opengamma.analytics.math.function.ParameterizedCurveVectorFunctionProvider__com.opengamma.analytics.math.function.VectorFunction_'from'<double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.function.ParameterizedCurveVectorFunctionProvider : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.VectorFunction : 1;
TRANSITION <com.opengamma.analytics.math.function.ParameterizedCurveVectorFunctionProvider__void_<init><com.opengamma.analytics.math.function.ParameterizedCurve>>
	CONSUME 
		com.opengamma.analytics.math.function.ParameterizedCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.ParameterizedCurveVectorFunctionProvider : 1;
TRANSITION <com.opengamma.analytics.math.function.ParameterizedFunction$1__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.function.ParameterizedFunction$1 : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.function.ParameterizedFunction$1__java.lang.Object_writeReplace<>>
	CONSUME 
		com.opengamma.analytics.math.function.ParameterizedFunction$1 : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.function.ParameterizedFunction$2__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.function.ParameterizedFunction$2 : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.function.ParameterizedFunction$2__java.lang.Object_writeReplace<>>
	CONSUME 
		com.opengamma.analytics.math.function.ParameterizedFunction$2 : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.function.ParameterizedFunction__com.opengamma.analytics.math.function.Function1D_asFunctionOfArguments<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.function.ParameterizedFunction : 1,

		java.lang.Object : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.Function1D : 1;
TRANSITION <com.opengamma.analytics.math.function.ParameterizedFunction__com.opengamma.analytics.math.function.Function1D_asFunctionOfParameters<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.function.ParameterizedFunction : 1,

		java.lang.Object : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.Function1D : 1;
TRANSITION <com.opengamma.analytics.math.function.ParameterizedFunction__int_getNumberOfParameters<>>
	CONSUME 
		com.opengamma.analytics.math.function.ParameterizedFunction : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.function.ParameterizedFunction__java.lang.Object_evaluate<java.lang.Object.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.function.ParameterizedFunction : 1,

		java.lang.Object : 2;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.function.ParameterizedFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.ParameterizedFunction : 1;
TRANSITION <com.opengamma.analytics.math.function.ParameterizedSurface$1__com.opengamma.analytics.math.matrix.DoubleMatrix1D_evaluate<com.opengamma.util.tuple.DoublesPair>>
	CONSUME 
		com.opengamma.analytics.math.function.ParameterizedSurface$1 : 1,

		com.opengamma.util.tuple.DoublesPair : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.function.ParameterizedSurface$1__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.function.ParameterizedSurface$1 : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.function.ParameterizedSurface__com.opengamma.analytics.math.function.Function1D_getZParameterSensitivity<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.function.ParameterizedSurface : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.Function1D : 1;
TRANSITION <com.opengamma.analytics.math.function.ParameterizedSurface__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.ParameterizedSurface : 1;
TRANSITION <com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D__com.opengamma.analytics.math.matrix.DoubleMatrix1D_differentiate<com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult.double>>
	CONSUME 
		com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D : 1,

		double : 1,

		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D__com.opengamma.analytics.math.matrix.DoubleMatrix1D_differentiateTwice<com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult.double>>
	CONSUME 
		com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D : 1,

		double : 1,

		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D__com.opengamma.analytics.math.matrix.DoubleMatrix1D_evaluate<com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult.double>>
	CONSUME 
		com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D : 1,

		double : 1,

		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D__com.opengamma.analytics.math.matrix.DoubleMatrix1D_integrate<com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult.double.double[]>>
	CONSUME 
		com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D : 1,

		double[] : 1,

		double : 1,

		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D__com.opengamma.analytics.math.matrix.DoubleMatrix2D_differentiate<com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult.double[]>>
	CONSUME 
		com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D : 1,

		double[] : 1,

		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D__com.opengamma.analytics.math.matrix.DoubleMatrix2D_differentiateTwice<com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult.double[]>>
	CONSUME 
		com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D : 1,

		double[] : 1,

		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D__com.opengamma.analytics.math.matrix.DoubleMatrix2D_evaluate<com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult.double[]>>
	CONSUME 
		com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D : 1,

		double[] : 1,

		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D__com.opengamma.analytics.math.matrix.DoubleMatrix2D[]_evaluate<com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult.double[][]>>
	CONSUME 
		com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D : 1,

		double[][] : 1,

		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D[] : 1;
TRANSITION <com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D__double_integrate<com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult.double.double>>
	CONSUME 
		com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D : 1,

		double : 2,

		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D : 1;
TRANSITION <com.opengamma.analytics.math.function.PiecewisePolynomialFunction2D__com.opengamma.analytics.math.matrix.DoubleMatrix2D_differentiateCross<com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D.double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.function.PiecewisePolynomialFunction2D : 1,

		double[] : 2,

		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.function.PiecewisePolynomialFunction2D__com.opengamma.analytics.math.matrix.DoubleMatrix2D_differentiateTwiceX0<com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D.double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.function.PiecewisePolynomialFunction2D : 1,

		double[] : 2,

		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.function.PiecewisePolynomialFunction2D__com.opengamma.analytics.math.matrix.DoubleMatrix2D_differentiateTwiceX1<com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D.double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.function.PiecewisePolynomialFunction2D : 1,

		double[] : 2,

		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.function.PiecewisePolynomialFunction2D__com.opengamma.analytics.math.matrix.DoubleMatrix2D_differentiateX0<com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D.double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.function.PiecewisePolynomialFunction2D : 1,

		double[] : 2,

		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.function.PiecewisePolynomialFunction2D__com.opengamma.analytics.math.matrix.DoubleMatrix2D_differentiateX1<com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D.double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.function.PiecewisePolynomialFunction2D : 1,

		double[] : 2,

		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.function.PiecewisePolynomialFunction2D__com.opengamma.analytics.math.matrix.DoubleMatrix2D_evaluate<com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D.double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.function.PiecewisePolynomialFunction2D : 1,

		double[] : 2,

		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.function.PiecewisePolynomialFunction2D__double_differentiateCross<com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D.double.double>>
	CONSUME 
		com.opengamma.analytics.math.function.PiecewisePolynomialFunction2D : 1,

		double : 2,

		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.function.PiecewisePolynomialFunction2D__double_differentiateTwiceX0<com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D.double.double>>
	CONSUME 
		com.opengamma.analytics.math.function.PiecewisePolynomialFunction2D : 1,

		double : 2,

		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.function.PiecewisePolynomialFunction2D__double_differentiateTwiceX1<com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D.double.double>>
	CONSUME 
		com.opengamma.analytics.math.function.PiecewisePolynomialFunction2D : 1,

		double : 2,

		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.function.PiecewisePolynomialFunction2D__double_differentiateX0<com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D.double.double>>
	CONSUME 
		com.opengamma.analytics.math.function.PiecewisePolynomialFunction2D : 1,

		double : 2,

		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.function.PiecewisePolynomialFunction2D__double_differentiateX1<com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D.double.double>>
	CONSUME 
		com.opengamma.analytics.math.function.PiecewisePolynomialFunction2D : 1,

		double : 2,

		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.function.PiecewisePolynomialFunction2D__double_evaluate<com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D.double.double>>
	CONSUME 
		com.opengamma.analytics.math.function.PiecewisePolynomialFunction2D : 1,

		double : 2,

		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.function.PiecewisePolynomialFunction2D__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.PiecewisePolynomialFunction2D : 1;
TRANSITION <com.opengamma.analytics.math.function.PiecewisePolynomialWithSensitivityFunction1D__com.opengamma.analytics.math.matrix.DoubleMatrix1D_differentiateNodeSensitivity<com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity.double>>
	CONSUME 
		com.opengamma.analytics.math.function.PiecewisePolynomialWithSensitivityFunction1D : 1,

		double : 1,

		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.function.PiecewisePolynomialWithSensitivityFunction1D__com.opengamma.analytics.math.matrix.DoubleMatrix1D_differentiateTwiceNodeSensitivity<com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity.double>>
	CONSUME 
		com.opengamma.analytics.math.function.PiecewisePolynomialWithSensitivityFunction1D : 1,

		double : 1,

		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.function.PiecewisePolynomialWithSensitivityFunction1D__com.opengamma.analytics.math.matrix.DoubleMatrix1D_nodeSensitivity<com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity.double>>
	CONSUME 
		com.opengamma.analytics.math.function.PiecewisePolynomialWithSensitivityFunction1D : 1,

		double : 1,

		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.function.PiecewisePolynomialWithSensitivityFunction1D__com.opengamma.analytics.math.matrix.DoubleMatrix1D[]_differentiateNodeSensitivity<com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity.double[]>>
	CONSUME 
		com.opengamma.analytics.math.function.PiecewisePolynomialWithSensitivityFunction1D : 1,

		double[] : 1,

		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D[] : 1;
TRANSITION <com.opengamma.analytics.math.function.PiecewisePolynomialWithSensitivityFunction1D__com.opengamma.analytics.math.matrix.DoubleMatrix1D[]_differentiateTwiceNodeSensitivity<com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity.double[]>>
	CONSUME 
		com.opengamma.analytics.math.function.PiecewisePolynomialWithSensitivityFunction1D : 1,

		double[] : 1,

		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D[] : 1;
TRANSITION <com.opengamma.analytics.math.function.PiecewisePolynomialWithSensitivityFunction1D__com.opengamma.analytics.math.matrix.DoubleMatrix1D[]_nodeSensitivity<com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity.double[]>>
	CONSUME 
		com.opengamma.analytics.math.function.PiecewisePolynomialWithSensitivityFunction1D : 1,

		double[] : 1,

		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D[] : 1;
TRANSITION <com.opengamma.analytics.math.function.PiecewisePolynomialWithSensitivityFunction1D__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.PiecewisePolynomialWithSensitivityFunction1D : 1;
TRANSITION <com.opengamma.analytics.math.function.RealPolynomialFunction1D__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.function.RealPolynomialFunction1D : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.function.RealPolynomialFunction1D__com.opengamma.analytics.math.function.DoubleFunction1D_add<com.opengamma.analytics.math.function.DoubleFunction1D>>
	CONSUME 
		com.opengamma.analytics.math.function.RealPolynomialFunction1D : 1,

		com.opengamma.analytics.math.function.DoubleFunction1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.DoubleFunction1D : 1;
TRANSITION <com.opengamma.analytics.math.function.RealPolynomialFunction1D__com.opengamma.analytics.math.function.DoubleFunction1D_add<double>>
	CONSUME 
		com.opengamma.analytics.math.function.RealPolynomialFunction1D : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.DoubleFunction1D : 1;
TRANSITION <com.opengamma.analytics.math.function.RealPolynomialFunction1D__com.opengamma.analytics.math.function.DoubleFunction1D_derivative<>>
	CONSUME 
		com.opengamma.analytics.math.function.RealPolynomialFunction1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.DoubleFunction1D : 1;
TRANSITION <com.opengamma.analytics.math.function.RealPolynomialFunction1D__com.opengamma.analytics.math.function.DoubleFunction1D_divide<double>>
	CONSUME 
		com.opengamma.analytics.math.function.RealPolynomialFunction1D : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.DoubleFunction1D : 1;
TRANSITION <com.opengamma.analytics.math.function.RealPolynomialFunction1D__com.opengamma.analytics.math.function.DoubleFunction1D_multiply<com.opengamma.analytics.math.function.DoubleFunction1D>>
	CONSUME 
		com.opengamma.analytics.math.function.RealPolynomialFunction1D : 1,

		com.opengamma.analytics.math.function.DoubleFunction1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.DoubleFunction1D : 1;
TRANSITION <com.opengamma.analytics.math.function.RealPolynomialFunction1D__com.opengamma.analytics.math.function.DoubleFunction1D_multiply<double>>
	CONSUME 
		com.opengamma.analytics.math.function.RealPolynomialFunction1D : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.DoubleFunction1D : 1;
TRANSITION <com.opengamma.analytics.math.function.RealPolynomialFunction1D__com.opengamma.analytics.math.function.DoubleFunction1D_subtract<com.opengamma.analytics.math.function.DoubleFunction1D>>
	CONSUME 
		com.opengamma.analytics.math.function.RealPolynomialFunction1D : 1,

		com.opengamma.analytics.math.function.DoubleFunction1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.DoubleFunction1D : 1;
TRANSITION <com.opengamma.analytics.math.function.RealPolynomialFunction1D__com.opengamma.analytics.math.function.DoubleFunction1D_subtract<double>>
	CONSUME 
		com.opengamma.analytics.math.function.RealPolynomialFunction1D : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.DoubleFunction1D : 1;
TRANSITION <com.opengamma.analytics.math.function.RealPolynomialFunction1D__com.opengamma.analytics.math.function.RealPolynomialFunction1D_add<double>>
	CONSUME 
		com.opengamma.analytics.math.function.RealPolynomialFunction1D : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.RealPolynomialFunction1D : 1;
TRANSITION <com.opengamma.analytics.math.function.RealPolynomialFunction1D__com.opengamma.analytics.math.function.RealPolynomialFunction1D_derivative<>>
	CONSUME 
		com.opengamma.analytics.math.function.RealPolynomialFunction1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.RealPolynomialFunction1D : 1;
TRANSITION <com.opengamma.analytics.math.function.RealPolynomialFunction1D__com.opengamma.analytics.math.function.RealPolynomialFunction1D_divide<double>>
	CONSUME 
		com.opengamma.analytics.math.function.RealPolynomialFunction1D : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.RealPolynomialFunction1D : 1;
TRANSITION <com.opengamma.analytics.math.function.RealPolynomialFunction1D__com.opengamma.analytics.math.function.RealPolynomialFunction1D_multiply<double>>
	CONSUME 
		com.opengamma.analytics.math.function.RealPolynomialFunction1D : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.RealPolynomialFunction1D : 1;
TRANSITION <com.opengamma.analytics.math.function.RealPolynomialFunction1D__com.opengamma.analytics.math.function.RealPolynomialFunction1D_subtract<double>>
	CONSUME 
		com.opengamma.analytics.math.function.RealPolynomialFunction1D : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.RealPolynomialFunction1D : 1;
TRANSITION <com.opengamma.analytics.math.function.RealPolynomialFunction1D__com.opengamma.analytics.math.function.RealPolynomialFunction1D_toMonic<>>
	CONSUME 
		com.opengamma.analytics.math.function.RealPolynomialFunction1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.RealPolynomialFunction1D : 1;
TRANSITION <com.opengamma.analytics.math.function.RealPolynomialFunction1D__double[]_getCoefficients<>>
	CONSUME 
		com.opengamma.analytics.math.function.RealPolynomialFunction1D : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.function.RealPolynomialFunction1D__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.function.RealPolynomialFunction1D : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.function.RealPolynomialFunction1D__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.function.RealPolynomialFunction1D : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.function.RealPolynomialFunction1D__void_<init><double[]>>
	CONSUME 
		double[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.RealPolynomialFunction1D : 1;
TRANSITION <com.opengamma.analytics.math.function.VectorFunction__com.opengamma.analytics.math.matrix.DoubleMatrix2D_calculateJacobian<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.function.VectorFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.function.VectorFunction__int_getLengthOfDomain<>>
	CONSUME 
		com.opengamma.analytics.math.function.VectorFunction : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.function.VectorFunction__int_getLengthOfRange<>>
	CONSUME 
		com.opengamma.analytics.math.function.VectorFunction : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.function.VectorFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.VectorFunction : 1;
TRANSITION <com.opengamma.analytics.math.function.VectorFunctionProvider__com.opengamma.analytics.math.function.VectorFunction_'from'<java.lang.Object[]>>
	CONSUME 
		java.lang.Object[] : 1,

		com.opengamma.analytics.math.function.VectorFunctionProvider : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.VectorFunction : 1;
TRANSITION <com.opengamma.analytics.math.function.VectorFunctionProvider__com.opengamma.analytics.math.function.VectorFunction_'from'<java.util.List>>
	CONSUME 
		java.util.List : 1,

		com.opengamma.analytics.math.function.VectorFunctionProvider : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.VectorFunction : 1;
TRANSITION <com.opengamma.analytics.math.function.special.ChebyshevPolynomialOfFirstKindFunction__com.opengamma.analytics.math.function.DoubleFunction1D[]_getPolynomials<int>>
	CONSUME 
		com.opengamma.analytics.math.function.special.ChebyshevPolynomialOfFirstKindFunction : 1,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.DoubleFunction1D[] : 1;
TRANSITION <com.opengamma.analytics.math.function.special.ChebyshevPolynomialOfFirstKindFunction__com.opengamma.util.tuple.Pair[]_getPolynomialsAndFirstDerivative<int>>
	CONSUME 
		com.opengamma.analytics.math.function.special.ChebyshevPolynomialOfFirstKindFunction : 1,

		int : 1;
	PRODUCE 
		com.opengamma.util.tuple.Pair[] : 1;
TRANSITION <com.opengamma.analytics.math.function.special.ChebyshevPolynomialOfFirstKindFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.special.ChebyshevPolynomialOfFirstKindFunction : 1;
TRANSITION <com.opengamma.analytics.math.function.special.DiracDeltaFunction__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.function.special.DiracDeltaFunction : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.function.special.DiracDeltaFunction__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.function.special.DiracDeltaFunction : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.function.special.DiracDeltaFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.special.DiracDeltaFunction : 1;
TRANSITION <com.opengamma.analytics.math.function.special.DoubleRampFunction__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.function.special.DoubleRampFunction : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.function.special.DoubleRampFunction__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.function.special.DoubleRampFunction : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.function.special.DoubleRampFunction__void_<init><double.double.double.double>>
	CONSUME 
		double : 4;
	PRODUCE 
		com.opengamma.analytics.math.function.special.DoubleRampFunction : 1;
TRANSITION <com.opengamma.analytics.math.function.special.GammaFunction__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.function.special.GammaFunction : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.function.special.GammaFunction__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.function.special.GammaFunction : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.function.special.GammaFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.special.GammaFunction : 1;
TRANSITION <com.opengamma.analytics.math.function.special.HeavisideFunction__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.function.special.HeavisideFunction : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.function.special.HeavisideFunction__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.function.special.HeavisideFunction : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.function.special.HeavisideFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.special.HeavisideFunction : 1;
TRANSITION <com.opengamma.analytics.math.function.special.HermitePolynomialFunction$1__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.function.special.HermitePolynomialFunction$1 : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.function.special.HermitePolynomialFunction$1__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.function.special.HermitePolynomialFunction$1 : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.function.special.HermitePolynomialFunction__com.opengamma.analytics.math.function.DoubleFunction1D[]_getPolynomials<int>>
	CONSUME 
		com.opengamma.analytics.math.function.special.HermitePolynomialFunction : 1,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.DoubleFunction1D[] : 1;
TRANSITION <com.opengamma.analytics.math.function.special.HermitePolynomialFunction__com.opengamma.util.tuple.Pair[]_getPolynomialsAndFirstDerivative<int>>
	CONSUME 
		com.opengamma.analytics.math.function.special.HermitePolynomialFunction : 1,

		int : 1;
	PRODUCE 
		com.opengamma.util.tuple.Pair[] : 1;
TRANSITION <com.opengamma.analytics.math.function.special.HermitePolynomialFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.special.HermitePolynomialFunction : 1;
TRANSITION <com.opengamma.analytics.math.function.special.IncompleteBetaFunction__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.function.special.IncompleteBetaFunction : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.function.special.IncompleteBetaFunction__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.function.special.IncompleteBetaFunction : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.function.special.IncompleteBetaFunction__void_<init><double.double>>
	CONSUME 
		double : 2;
	PRODUCE 
		com.opengamma.analytics.math.function.special.IncompleteBetaFunction : 1;
TRANSITION <com.opengamma.analytics.math.function.special.IncompleteBetaFunction__void_<init><double.double.double.int>>
	CONSUME 
		double : 3,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.special.IncompleteBetaFunction : 1;
TRANSITION <com.opengamma.analytics.math.function.special.IncompleteGammaFunction__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.function.special.IncompleteGammaFunction : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.function.special.IncompleteGammaFunction__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.function.special.IncompleteGammaFunction : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.function.special.IncompleteGammaFunction__void_<init><double>>
	CONSUME 
		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.special.IncompleteGammaFunction : 1;
TRANSITION <com.opengamma.analytics.math.function.special.IncompleteGammaFunction__void_<init><double.int.double>>
	CONSUME 
		double : 2,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.special.IncompleteGammaFunction : 1;
TRANSITION <com.opengamma.analytics.math.function.special.InverseIncompleteBetaFunction__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.function.special.InverseIncompleteBetaFunction : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.function.special.InverseIncompleteBetaFunction__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.function.special.InverseIncompleteBetaFunction : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.function.special.InverseIncompleteBetaFunction__void_<init><double.double>>
	CONSUME 
		double : 2;
	PRODUCE 
		com.opengamma.analytics.math.function.special.InverseIncompleteBetaFunction : 1;
TRANSITION <com.opengamma.analytics.math.function.special.InverseIncompleteGammaFunction__java.lang.Double_evaluate<java.lang.Double.java.lang.Double>>
	CONSUME 
		java.lang.Double : 2,

		com.opengamma.analytics.math.function.special.InverseIncompleteGammaFunction : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.function.special.InverseIncompleteGammaFunction__java.lang.Object_evaluate<java.lang.Object.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.function.special.InverseIncompleteGammaFunction : 1,

		java.lang.Object : 2;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.function.special.InverseIncompleteGammaFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.special.InverseIncompleteGammaFunction : 1;
TRANSITION <com.opengamma.analytics.math.function.special.JacobiPolynomialFunction__com.opengamma.analytics.math.function.DoubleFunction1D[]_getPolynomials<int>>
	CONSUME 
		com.opengamma.analytics.math.function.special.JacobiPolynomialFunction : 1,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.DoubleFunction1D[] : 1;
TRANSITION <com.opengamma.analytics.math.function.special.JacobiPolynomialFunction__com.opengamma.analytics.math.function.DoubleFunction1D[]_getPolynomials<int.double.double>>
	CONSUME 
		com.opengamma.analytics.math.function.special.JacobiPolynomialFunction : 1,

		double : 2,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.DoubleFunction1D[] : 1;
TRANSITION <com.opengamma.analytics.math.function.special.JacobiPolynomialFunction__com.opengamma.util.tuple.Pair[]_getPolynomialsAndFirstDerivative<int>>
	CONSUME 
		com.opengamma.analytics.math.function.special.JacobiPolynomialFunction : 1,

		int : 1;
	PRODUCE 
		com.opengamma.util.tuple.Pair[] : 1;
TRANSITION <com.opengamma.analytics.math.function.special.JacobiPolynomialFunction__com.opengamma.util.tuple.Pair[]_getPolynomialsAndFirstDerivative<int.double.double>>
	CONSUME 
		com.opengamma.analytics.math.function.special.JacobiPolynomialFunction : 1,

		double : 2,

		int : 1;
	PRODUCE 
		com.opengamma.util.tuple.Pair[] : 1;
TRANSITION <com.opengamma.analytics.math.function.special.JacobiPolynomialFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.special.JacobiPolynomialFunction : 1;
TRANSITION <com.opengamma.analytics.math.function.special.KroneckerDeltaFunction__java.lang.Integer_evaluate<java.lang.Integer.java.lang.Integer>>
	CONSUME 
		java.lang.Integer : 2,

		com.opengamma.analytics.math.function.special.KroneckerDeltaFunction : 1;
	PRODUCE 
		java.lang.Integer : 1;
TRANSITION <com.opengamma.analytics.math.function.special.KroneckerDeltaFunction__java.lang.Object_evaluate<java.lang.Object.java.lang.Object>>
	CONSUME 
		java.lang.Object : 2,

		com.opengamma.analytics.math.function.special.KroneckerDeltaFunction : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.function.special.KroneckerDeltaFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.special.KroneckerDeltaFunction : 1;
TRANSITION <com.opengamma.analytics.math.function.special.LaguerrePolynomialFunction__com.opengamma.analytics.math.function.DoubleFunction1D[]_getPolynomials<int>>
	CONSUME 
		com.opengamma.analytics.math.function.special.LaguerrePolynomialFunction : 1,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.DoubleFunction1D[] : 1;
TRANSITION <com.opengamma.analytics.math.function.special.LaguerrePolynomialFunction__com.opengamma.analytics.math.function.DoubleFunction1D[]_getPolynomials<int.double>>
	CONSUME 
		com.opengamma.analytics.math.function.special.LaguerrePolynomialFunction : 1,

		double : 1,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.DoubleFunction1D[] : 1;
TRANSITION <com.opengamma.analytics.math.function.special.LaguerrePolynomialFunction__com.opengamma.util.tuple.Pair[]_getPolynomialsAndFirstDerivative<int>>
	CONSUME 
		com.opengamma.analytics.math.function.special.LaguerrePolynomialFunction : 1,

		int : 1;
	PRODUCE 
		com.opengamma.util.tuple.Pair[] : 1;
TRANSITION <com.opengamma.analytics.math.function.special.LaguerrePolynomialFunction__com.opengamma.util.tuple.Pair[]_getPolynomialsAndFirstDerivative<int.double>>
	CONSUME 
		com.opengamma.analytics.math.function.special.LaguerrePolynomialFunction : 1,

		double : 1,

		int : 1;
	PRODUCE 
		com.opengamma.util.tuple.Pair[] : 1;
TRANSITION <com.opengamma.analytics.math.function.special.LaguerrePolynomialFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.special.LaguerrePolynomialFunction : 1;
TRANSITION <com.opengamma.analytics.math.function.special.LegendrePolynomialFunction__com.opengamma.analytics.math.function.DoubleFunction1D[]_getPolynomials<int>>
	CONSUME 
		com.opengamma.analytics.math.function.special.LegendrePolynomialFunction : 1,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.DoubleFunction1D[] : 1;
TRANSITION <com.opengamma.analytics.math.function.special.LegendrePolynomialFunction__com.opengamma.util.tuple.Pair[]_getPolynomialsAndFirstDerivative<int>>
	CONSUME 
		com.opengamma.analytics.math.function.special.LegendrePolynomialFunction : 1,

		int : 1;
	PRODUCE 
		com.opengamma.util.tuple.Pair[] : 1;
TRANSITION <com.opengamma.analytics.math.function.special.LegendrePolynomialFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.special.LegendrePolynomialFunction : 1;
TRANSITION <com.opengamma.analytics.math.function.special.NaturalLogGammaFunction__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.function.special.NaturalLogGammaFunction : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.function.special.NaturalLogGammaFunction__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.function.special.NaturalLogGammaFunction : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.function.special.NaturalLogGammaFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.special.NaturalLogGammaFunction : 1;
TRANSITION <com.opengamma.analytics.math.function.special.OrthogonalPolynomialFunctionGenerator__com.opengamma.analytics.math.function.DoubleFunction1D[]_getPolynomials<int>>
	CONSUME 
		com.opengamma.analytics.math.function.special.OrthogonalPolynomialFunctionGenerator : 1,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.DoubleFunction1D[] : 1;
TRANSITION <com.opengamma.analytics.math.function.special.OrthogonalPolynomialFunctionGenerator__com.opengamma.util.tuple.Pair[]_getPolynomialsAndFirstDerivative<int>>
	CONSUME 
		com.opengamma.analytics.math.function.special.OrthogonalPolynomialFunctionGenerator : 1,

		int : 1;
	PRODUCE 
		com.opengamma.util.tuple.Pair[] : 1;
TRANSITION <com.opengamma.analytics.math.function.special.OrthogonalPolynomialFunctionGenerator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.special.OrthogonalPolynomialFunctionGenerator : 1;
TRANSITION <com.opengamma.analytics.math.function.special.OrthonormalHermitePolynomialFunction__com.opengamma.analytics.math.function.DoubleFunction1D[]_getPolynomials<int>>
	CONSUME 
		com.opengamma.analytics.math.function.special.OrthonormalHermitePolynomialFunction : 1,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.DoubleFunction1D[] : 1;
TRANSITION <com.opengamma.analytics.math.function.special.OrthonormalHermitePolynomialFunction__com.opengamma.util.tuple.Pair[]_getPolynomialsAndFirstDerivative<int>>
	CONSUME 
		com.opengamma.analytics.math.function.special.OrthonormalHermitePolynomialFunction : 1,

		int : 1;
	PRODUCE 
		com.opengamma.util.tuple.Pair[] : 1;
TRANSITION <com.opengamma.analytics.math.function.special.OrthonormalHermitePolynomialFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.special.OrthonormalHermitePolynomialFunction : 1;
TRANSITION <com.opengamma.analytics.math.function.special.TopHatFunction__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.function.special.TopHatFunction : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.function.special.TopHatFunction__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.function.special.TopHatFunction : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.function.special.TopHatFunction__void_<init><double.double.double>>
	CONSUME 
		double : 3;
	PRODUCE 
		com.opengamma.analytics.math.function.special.TopHatFunction : 1;
TRANSITION <com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D__java.lang.Double_integrate<com.opengamma.analytics.math.function.Function1D.java.lang.Double.java.lang.Double>>
	CONSUME 
		java.lang.Double : 2,

		com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D__java.lang.Object_integrate<com.opengamma.analytics.math.function.Function1D.java.lang.Object.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D : 1,

		java.lang.Object : 2,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D__void_<init><com.opengamma.analytics.math.integration.Integrator1D>>
	CONSUME 
		com.opengamma.analytics.math.integration.Integrator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D : 1;
TRANSITION <com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D__void_<init><com.opengamma.analytics.math.integration.Integrator1D.double.double>>
	CONSUME 
		double : 2,

		com.opengamma.analytics.math.integration.Integrator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D : 1;
TRANSITION <com.opengamma.analytics.math.integration.ExtendedTrapezoidIntegrator1D__java.lang.Double_integrate<com.opengamma.analytics.math.function.Function1D.java.lang.Double.java.lang.Double>>
	CONSUME 
		java.lang.Double : 2,

		com.opengamma.analytics.math.integration.ExtendedTrapezoidIntegrator1D : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.integration.ExtendedTrapezoidIntegrator1D__java.lang.Object_integrate<com.opengamma.analytics.math.function.Function1D.java.lang.Object.java.lang.Object>>
	CONSUME 
		java.lang.Object : 2,

		com.opengamma.analytics.math.integration.ExtendedTrapezoidIntegrator1D : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.integration.ExtendedTrapezoidIntegrator1D__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.ExtendedTrapezoidIntegrator1D : 1;
TRANSITION <com.opengamma.analytics.math.integration.GaussHermiteQuadratureIntegrator1D$1__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.integration.GaussHermiteQuadratureIntegrator1D$1 : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.integration.GaussHermiteQuadratureIntegrator1D$1__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.integration.GaussHermiteQuadratureIntegrator1D$1 : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.integration.GaussHermiteQuadratureIntegrator1D__com.opengamma.analytics.math.function.Function1D_getIntegralFunction<com.opengamma.analytics.math.function.Function1D.java.lang.Double.java.lang.Double>>
	CONSUME 
		java.lang.Double : 2,

		com.opengamma.analytics.math.integration.GaussHermiteQuadratureIntegrator1D : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.Function1D : 1;
TRANSITION <com.opengamma.analytics.math.integration.GaussHermiteQuadratureIntegrator1D__java.lang.Double[]_getLimits<>>
	CONSUME 
		com.opengamma.analytics.math.integration.GaussHermiteQuadratureIntegrator1D : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.integration.GaussHermiteQuadratureIntegrator1D__void_<init><int>>
	CONSUME 
		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.GaussHermiteQuadratureIntegrator1D : 1;
TRANSITION <com.opengamma.analytics.math.integration.GaussHermiteWeightAndAbscissaFunction__com.opengamma.analytics.math.integration.GaussianQuadratureData_generate<int>>
	CONSUME 
		com.opengamma.analytics.math.integration.GaussHermiteWeightAndAbscissaFunction : 1,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.GaussianQuadratureData : 1;
TRANSITION <com.opengamma.analytics.math.integration.GaussHermiteWeightAndAbscissaFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.GaussHermiteWeightAndAbscissaFunction : 1;
TRANSITION <com.opengamma.analytics.math.integration.GaussJacobiQuadratureIntegrator1D$1__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.integration.GaussJacobiQuadratureIntegrator1D$1 : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.integration.GaussJacobiQuadratureIntegrator1D$1__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.integration.GaussJacobiQuadratureIntegrator1D$1 : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.integration.GaussJacobiQuadratureIntegrator1D__com.opengamma.analytics.math.function.Function1D_getIntegralFunction<com.opengamma.analytics.math.function.Function1D.java.lang.Double.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.integration.GaussJacobiQuadratureIntegrator1D : 1,

		java.lang.Double : 2,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.Function1D : 1;
TRANSITION <com.opengamma.analytics.math.integration.GaussJacobiQuadratureIntegrator1D__java.lang.Double[]_getLimits<>>
	CONSUME 
		com.opengamma.analytics.math.integration.GaussJacobiQuadratureIntegrator1D : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.integration.GaussJacobiQuadratureIntegrator1D__void_<init><int>>
	CONSUME 
		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.GaussJacobiQuadratureIntegrator1D : 1;
TRANSITION <com.opengamma.analytics.math.integration.GaussJacobiWeightAndAbscissaFunction__com.opengamma.analytics.math.integration.GaussianQuadratureData_generate<int>>
	CONSUME 
		com.opengamma.analytics.math.integration.GaussJacobiWeightAndAbscissaFunction : 1,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.GaussianQuadratureData : 1;
TRANSITION <com.opengamma.analytics.math.integration.GaussJacobiWeightAndAbscissaFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.GaussJacobiWeightAndAbscissaFunction : 1;
TRANSITION <com.opengamma.analytics.math.integration.GaussJacobiWeightAndAbscissaFunction__void_<init><double.double>>
	CONSUME 
		double : 2;
	PRODUCE 
		com.opengamma.analytics.math.integration.GaussJacobiWeightAndAbscissaFunction : 1;
TRANSITION <com.opengamma.analytics.math.integration.GaussLaguerreQuadratureIntegrator1D$1__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.integration.GaussLaguerreQuadratureIntegrator1D$1 : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.integration.GaussLaguerreQuadratureIntegrator1D$1__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.integration.GaussLaguerreQuadratureIntegrator1D$1 : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.integration.GaussLaguerreQuadratureIntegrator1D__com.opengamma.analytics.math.function.Function1D_getIntegralFunction<com.opengamma.analytics.math.function.Function1D.java.lang.Double.java.lang.Double>>
	CONSUME 
		java.lang.Double : 2,

		com.opengamma.analytics.math.integration.GaussLaguerreQuadratureIntegrator1D : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.Function1D : 1;
TRANSITION <com.opengamma.analytics.math.integration.GaussLaguerreQuadratureIntegrator1D__java.lang.Double[]_getLimits<>>
	CONSUME 
		com.opengamma.analytics.math.integration.GaussLaguerreQuadratureIntegrator1D : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.integration.GaussLaguerreQuadratureIntegrator1D__void_<init><int>>
	CONSUME 
		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.GaussLaguerreQuadratureIntegrator1D : 1;
TRANSITION <com.opengamma.analytics.math.integration.GaussLaguerreQuadratureIntegrator1D__void_<init><int.double>>
	CONSUME 
		double : 1,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.GaussLaguerreQuadratureIntegrator1D : 1;
TRANSITION <com.opengamma.analytics.math.integration.GaussLaguerreWeightAndAbscissaFunction__com.opengamma.analytics.math.integration.GaussianQuadratureData_generate<int>>
	CONSUME 
		com.opengamma.analytics.math.integration.GaussLaguerreWeightAndAbscissaFunction : 1,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.GaussianQuadratureData : 1;
TRANSITION <com.opengamma.analytics.math.integration.GaussLaguerreWeightAndAbscissaFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.GaussLaguerreWeightAndAbscissaFunction : 1;
TRANSITION <com.opengamma.analytics.math.integration.GaussLaguerreWeightAndAbscissaFunction__void_<init><double>>
	CONSUME 
		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.GaussLaguerreWeightAndAbscissaFunction : 1;
TRANSITION <com.opengamma.analytics.math.integration.GaussLegendreQuadratureIntegrator1D$1__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.integration.GaussLegendreQuadratureIntegrator1D$1 : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.integration.GaussLegendreQuadratureIntegrator1D$1__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.integration.GaussLegendreQuadratureIntegrator1D$1 : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.integration.GaussLegendreQuadratureIntegrator1D__com.opengamma.analytics.math.function.Function1D_getIntegralFunction<com.opengamma.analytics.math.function.Function1D.java.lang.Double.java.lang.Double>>
	CONSUME 
		java.lang.Double : 2,

		com.opengamma.analytics.math.integration.GaussLegendreQuadratureIntegrator1D : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.Function1D : 1;
TRANSITION <com.opengamma.analytics.math.integration.GaussLegendreQuadratureIntegrator1D__java.lang.Double[]_getLimits<>>
	CONSUME 
		com.opengamma.analytics.math.integration.GaussLegendreQuadratureIntegrator1D : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.integration.GaussLegendreQuadratureIntegrator1D__void_<init><int>>
	CONSUME 
		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.GaussLegendreQuadratureIntegrator1D : 1;
TRANSITION <com.opengamma.analytics.math.integration.GaussLegendreWeightAndAbscissaFunction__com.opengamma.analytics.math.integration.GaussianQuadratureData_generate<int>>
	CONSUME 
		com.opengamma.analytics.math.integration.GaussLegendreWeightAndAbscissaFunction : 1,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.GaussianQuadratureData : 1;
TRANSITION <com.opengamma.analytics.math.integration.GaussLegendreWeightAndAbscissaFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.GaussLegendreWeightAndAbscissaFunction : 1;
TRANSITION <com.opengamma.analytics.math.integration.GaussianQuadratureData__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.integration.GaussianQuadratureData : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.integration.GaussianQuadratureData__double[]_getAbscissas<>>
	CONSUME 
		com.opengamma.analytics.math.integration.GaussianQuadratureData : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.integration.GaussianQuadratureData__double[]_getWeights<>>
	CONSUME 
		com.opengamma.analytics.math.integration.GaussianQuadratureData : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.integration.GaussianQuadratureData__void_<init><double[].double[]>>
	CONSUME 
		double[] : 2;
	PRODUCE 
		com.opengamma.analytics.math.integration.GaussianQuadratureData : 1;
TRANSITION <com.opengamma.analytics.math.integration.GaussianQuadratureIntegrator1D__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.integration.GaussianQuadratureIntegrator1D : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.integration.GaussianQuadratureIntegrator1D__com.opengamma.analytics.math.function.Function1D_getIntegralFunction<com.opengamma.analytics.math.function.Function1D.java.lang.Double.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.integration.GaussianQuadratureIntegrator1D : 1,

		java.lang.Double : 2,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.Function1D : 1;
TRANSITION <com.opengamma.analytics.math.integration.GaussianQuadratureIntegrator1D__double_integrateFromPolyFunc<com.opengamma.analytics.math.function.Function1D>>
	CONSUME 
		com.opengamma.analytics.math.integration.GaussianQuadratureIntegrator1D : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.integration.GaussianQuadratureIntegrator1D__java.lang.Double_integrate<com.opengamma.analytics.math.function.Function1D.java.lang.Double.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.integration.GaussianQuadratureIntegrator1D : 1,

		java.lang.Double : 2,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.integration.GaussianQuadratureIntegrator1D__java.lang.Double[]_getLimits<>>
	CONSUME 
		com.opengamma.analytics.math.integration.GaussianQuadratureIntegrator1D : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.integration.GaussianQuadratureIntegrator1D__java.lang.Object_integrate<com.opengamma.analytics.math.function.Function1D.java.lang.Object.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.integration.GaussianQuadratureIntegrator1D : 1,

		java.lang.Object : 2,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.integration.GaussianQuadratureIntegrator1D__void_<init><int.com.opengamma.analytics.math.integration.QuadratureWeightAndAbscissaFunction>>
	CONSUME 
		com.opengamma.analytics.math.integration.QuadratureWeightAndAbscissaFunction : 1,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.GaussianQuadratureIntegrator1D : 1;
TRANSITION <com.opengamma.analytics.math.integration.Integrator1D__java.lang.Object_integrate<com.opengamma.analytics.math.function.Function.java.lang.Object[].java.lang.Object[]>>
	CONSUME 
		com.opengamma.analytics.math.function.Function : 1,

		java.lang.Object[] : 2,

		com.opengamma.analytics.math.integration.Integrator1D : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.integration.Integrator1D__java.lang.Object_integrate<com.opengamma.analytics.math.function.Function1D.java.lang.Object.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.integration.Integrator1D : 1,

		java.lang.Object : 2,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.integration.Integrator1D__java.lang.Object_integrate<com.opengamma.analytics.math.function.Function1D.java.lang.Object[].java.lang.Object[]>>
	CONSUME 
		java.lang.Object[] : 2,

		com.opengamma.analytics.math.integration.Integrator1D : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.integration.Integrator1D__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.Integrator1D : 1;
TRANSITION <com.opengamma.analytics.math.integration.Integrator2D__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.Integrator2D : 1;
TRANSITION <com.opengamma.analytics.math.integration.Integrator__java.lang.Object_integrate<com.opengamma.analytics.math.function.Function.java.lang.Object[].java.lang.Object[]>>
	CONSUME 
		com.opengamma.analytics.math.function.Function : 1,

		java.lang.Object[] : 2,

		com.opengamma.analytics.math.integration.Integrator : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.integration.IntegratorRepeated2D$1$1__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.integration.IntegratorRepeated2D$1$1 : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.integration.IntegratorRepeated2D$1$1__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.integration.IntegratorRepeated2D$1$1 : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.integration.IntegratorRepeated2D$1__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.integration.IntegratorRepeated2D$1 : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.integration.IntegratorRepeated2D$1__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.integration.IntegratorRepeated2D$1 : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.integration.IntegratorRepeated2D__java.lang.Double_integrate<com.opengamma.analytics.math.function.Function2D.java.lang.Double[].java.lang.Double[]>>
	CONSUME 
		java.lang.Double[] : 2,

		com.opengamma.analytics.math.integration.IntegratorRepeated2D : 1,

		com.opengamma.analytics.math.function.Function2D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.integration.IntegratorRepeated2D__java.lang.Object_integrate<com.opengamma.analytics.math.function.Function.java.lang.Object[].java.lang.Object[]>>
	CONSUME 
		com.opengamma.analytics.math.function.Function : 1,

		java.lang.Object[] : 2,

		com.opengamma.analytics.math.integration.IntegratorRepeated2D : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.integration.IntegratorRepeated2D__void_<init><com.opengamma.analytics.math.integration.Integrator1D>>
	CONSUME 
		com.opengamma.analytics.math.integration.Integrator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.IntegratorRepeated2D : 1;
TRANSITION <com.opengamma.analytics.math.integration.QuadratureWeightAndAbscissaFunction__com.opengamma.analytics.math.integration.GaussianQuadratureData_generate<int>>
	CONSUME 
		com.opengamma.analytics.math.integration.QuadratureWeightAndAbscissaFunction : 1,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.GaussianQuadratureData : 1;
TRANSITION <com.opengamma.analytics.math.integration.RealFunctionIntegrator1DFactory__com.opengamma.analytics.math.integration.Integrator1D_getIntegrator<java.lang.String>>
	CONSUME 
		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.Integrator1D : 1;
TRANSITION <com.opengamma.analytics.math.integration.RealFunctionIntegrator1DFactory__java.lang.String_getIntegratorName<com.opengamma.analytics.math.integration.Integrator1D>>
	CONSUME 
		com.opengamma.analytics.math.integration.Integrator1D : 1;
	PRODUCE 
		java.lang.String : 1;
TRANSITION <com.opengamma.analytics.math.integration.RombergIntegrator1D__java.lang.Double_integrate<com.opengamma.analytics.math.function.Function1D.java.lang.Double.java.lang.Double>>
	CONSUME 
		java.lang.Double : 2,

		com.opengamma.analytics.math.integration.RombergIntegrator1D : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.integration.RombergIntegrator1D__java.lang.Object_integrate<com.opengamma.analytics.math.function.Function1D.java.lang.Object.java.lang.Object>>
	CONSUME 
		java.lang.Object : 2,

		com.opengamma.analytics.math.integration.RombergIntegrator1D : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.integration.RombergIntegrator1D__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.RombergIntegrator1D : 1;
TRANSITION <com.opengamma.analytics.math.integration.RungeKuttaIntegrator1D__java.lang.Double_integrate<com.opengamma.analytics.math.function.Function1D.java.lang.Double.java.lang.Double>>
	CONSUME 
		java.lang.Double : 2,

		com.opengamma.analytics.math.integration.RungeKuttaIntegrator1D : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.integration.RungeKuttaIntegrator1D__java.lang.Object_integrate<com.opengamma.analytics.math.function.Function1D.java.lang.Object.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.integration.RungeKuttaIntegrator1D : 1,

		java.lang.Object : 2,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.integration.RungeKuttaIntegrator1D__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.RungeKuttaIntegrator1D : 1;
TRANSITION <com.opengamma.analytics.math.integration.RungeKuttaIntegrator1D__void_<init><double>>
	CONSUME 
		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.RungeKuttaIntegrator1D : 1;
TRANSITION <com.opengamma.analytics.math.integration.RungeKuttaIntegrator1D__void_<init><double.double>>
	CONSUME 
		double : 2;
	PRODUCE 
		com.opengamma.analytics.math.integration.RungeKuttaIntegrator1D : 1;
TRANSITION <com.opengamma.analytics.math.integration.RungeKuttaIntegrator1D__void_<init><double.double.int>>
	CONSUME 
		double : 2,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.RungeKuttaIntegrator1D : 1;
TRANSITION <com.opengamma.analytics.math.integration.RungeKuttaIntegrator1D__void_<init><double.int>>
	CONSUME 
		double : 1,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.RungeKuttaIntegrator1D : 1;
TRANSITION <com.opengamma.analytics.math.integration.RungeKuttaIntegrator1D__void_<init><int>>
	CONSUME 
		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.RungeKuttaIntegrator1D : 1;
TRANSITION <com.opengamma.analytics.math.integration.SimpsonIntegrator1D__java.lang.Double_integrate<com.opengamma.analytics.math.function.Function1D.java.lang.Double.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.integration.SimpsonIntegrator1D : 1,

		java.lang.Double : 2,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.integration.SimpsonIntegrator1D__java.lang.Object_integrate<com.opengamma.analytics.math.function.Function1D.java.lang.Object.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.integration.SimpsonIntegrator1D : 1,

		java.lang.Object : 2,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.integration.SimpsonIntegrator1D__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.SimpsonIntegrator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundle<double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D : 1,

		double[] : 2;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundleFromSortedArrays<double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D : 1,

		double[] : 2;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D__double[]_getNodeSensitivitiesForValue<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D__java.lang.Double_interpolate<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D__java.lang.Double_interpolate<java.lang.Object.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D : 1,

		java.lang.Object : 2;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D__void_<init><int.double>>
	CONSUME 
		double : 1,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.BasisFunctionAggregation__com.opengamma.analytics.math.matrix.DoubleMatrix1D_weightSensitivity<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.BasisFunctionAggregation : 1,

		java.lang.Object : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.BasisFunctionAggregation__com.opengamma.util.tuple.Pair_valueAndWeightSensitivity<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.BasisFunctionAggregation : 1,

		java.lang.Object : 1;
	PRODUCE 
		com.opengamma.util.tuple.Pair : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.BasisFunctionAggregation__java.lang.Double_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.BasisFunctionAggregation : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.BasisFunctionAggregation__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.BasisFunctionAggregation : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.BasisFunctionAggregation__void_<init><java.util.List.double[]>>
	CONSUME 
		java.util.List : 1,

		double[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.BasisFunctionAggregation : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$1__java.lang.Double_evaluate<double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$1 : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$1__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$1 : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$2__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$2 : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$2__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$2 : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$3__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$3 : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$3__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$3 : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$4__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$4 : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$4__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$4 : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.BasisFunctionGenerator__java.util.List_generateSet<com.opengamma.analytics.math.interpolation.BasisFunctionKnots>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.BasisFunctionKnots : 1,

		com.opengamma.analytics.math.interpolation.BasisFunctionGenerator : 1;
	PRODUCE 
		java.util.List : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.BasisFunctionGenerator__java.util.List_generateSet<com.opengamma.analytics.math.interpolation.BasisFunctionKnots[]>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.BasisFunctionGenerator : 1,

		com.opengamma.analytics.math.interpolation.BasisFunctionKnots[] : 1;
	PRODUCE 
		java.util.List : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.BasisFunctionGenerator__java.util.List_generateSet<double.double.int.int>>
	CONSUME 
		double : 2,

		com.opengamma.analytics.math.interpolation.BasisFunctionGenerator : 1,

		int : 2;
	PRODUCE 
		java.util.List : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.BasisFunctionGenerator__java.util.List_generateSet<double[].double[].int[].int[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.BasisFunctionGenerator : 1,

		int[] : 2;
	PRODUCE 
		java.util.List : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.BasisFunctionGenerator__java.util.List_generateSet<double[].int>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.interpolation.BasisFunctionGenerator : 1,

		int : 1;
	PRODUCE 
		java.util.List : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.BasisFunctionGenerator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.BasisFunctionGenerator : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.BasisFunctionKnots__com.opengamma.analytics.math.interpolation.BasisFunctionKnots_fromInternalKnots<double[].int>>
	CONSUME 
		double[] : 1,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.BasisFunctionKnots : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.BasisFunctionKnots__com.opengamma.analytics.math.interpolation.BasisFunctionKnots_fromKnots<double[].int>>
	CONSUME 
		double[] : 1,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.BasisFunctionKnots : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.BasisFunctionKnots__com.opengamma.analytics.math.interpolation.BasisFunctionKnots_fromUniform<double.double.int.int>>
	CONSUME 
		double : 2,

		int : 2;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.BasisFunctionKnots : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.BasisFunctionKnots__double[]_getKnots<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.BasisFunctionKnots : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.BasisFunctionKnots__int_getDegree<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.BasisFunctionKnots : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.BasisFunctionKnots__int_getNumKnots<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.BasisFunctionKnots : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.BasisFunctionKnots__int_getNumSplines<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.BasisFunctionKnots : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.BicubicSplineInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D_interpolate<double[].double[].double[][]>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.BicubicSplineInterpolator : 1,

		double[] : 2,

		double[][] : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.BicubicSplineInterpolator__void_<init><com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.BicubicSplineInterpolator : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.BicubicSplineInterpolator__void_<init><com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator[]>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.BicubicSplineInterpolator : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.BilinearSplineInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D_interpolate<double[].double[].double[][]>>
	CONSUME 
		double[] : 2,

		double[][] : 1,

		com.opengamma.analytics.math.interpolation.BilinearSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.BilinearSplineInterpolator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.BilinearSplineInterpolator : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ClampedCubicSplineInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundle<double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.ClampedCubicSplineInterpolator1D : 1,

		double[] : 2;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ClampedCubicSplineInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundleFromSortedArrays<double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.ClampedCubicSplineInterpolator1D : 1,

		double[] : 2;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ClampedCubicSplineInterpolator1D__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.ClampedCubicSplineInterpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolator__com.opengamma.analytics.math.interpolation.Interpolator1D_getInterpolator<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolator__com.opengamma.analytics.math.interpolation.Interpolator1D_getLeftExtrapolator<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolator__com.opengamma.analytics.math.interpolation.Interpolator1D_getRightExtrapolator<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolator__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundle<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolator__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundleFromSortedArrays<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolator__double_firstDerivative<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolator : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolator__double[]_getNodeSensitivitiesForValue<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolator : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolator__java.lang.Double_interpolate<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolator : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolator__java.lang.Double_interpolate<java.lang.Object.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolator : 1,

		java.lang.Object : 2;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolator__void_<init><com.opengamma.analytics.math.interpolation.Interpolator1D>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolator : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolator__void_<init><com.opengamma.analytics.math.interpolation.Interpolator1D.com.opengamma.analytics.math.interpolation.Interpolator1D>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.Interpolator1D : 2;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolator : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolator__void_<init><com.opengamma.analytics.math.interpolation.Interpolator1D.com.opengamma.analytics.math.interpolation.Interpolator1D.com.opengamma.analytics.math.interpolation.Interpolator1D>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.Interpolator1D : 3;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolator : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolatorFactory__com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolator_getInterpolator<java.lang.String>>
	CONSUME 
		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolator : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolatorFactory__com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolator_getInterpolator<java.lang.String.java.lang.String>>
	CONSUME 
		java.lang.String : 2;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolator : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolatorFactory__com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolator_getInterpolator<java.lang.String.java.lang.String.java.lang.String>>
	CONSUME 
		java.lang.String : 3;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolator : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolatorFactory__com.opengamma.analytics.math.interpolation.Interpolator1D_getExtrapolator<java.lang.String.com.opengamma.analytics.math.interpolation.Interpolator1D>>
	CONSUME 
		java.lang.String : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ConstrainedCubicSplineInterpolator1D__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.ConstrainedCubicSplineInterpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ConstrainedCubicSplineInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult_interpolate<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.ConstrainedCubicSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ConstrainedCubicSplineInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult_interpolate<double[].double[][]>>
	CONSUME 
		double[] : 1,

		double[][] : 1,

		com.opengamma.analytics.math.interpolation.ConstrainedCubicSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ConstrainedCubicSplineInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity_interpolateWithSensitivity<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.ConstrainedCubicSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ConstrainedCubicSplineInterpolator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.ConstrainedCubicSplineInterpolator : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.CubicSplineClampedSolver__com.opengamma.analytics.math.matrix.DoubleMatrix1D_getKnotsMat1D<double[]>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.CubicSplineClampedSolver : 1,

		double[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.CubicSplineClampedSolver__com.opengamma.analytics.math.matrix.DoubleMatrix2D_solve<double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.CubicSplineClampedSolver : 1,

		double[] : 2;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.CubicSplineClampedSolver__com.opengamma.analytics.math.matrix.DoubleMatrix2D[]_solveMultiDim<double[].com.opengamma.analytics.math.matrix.DoubleMatrix2D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1,

		com.opengamma.analytics.math.interpolation.CubicSplineClampedSolver : 1,

		double[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.CubicSplineClampedSolver__com.opengamma.analytics.math.matrix.DoubleMatrix2D[]_solveWithSensitivity<double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.CubicSplineClampedSolver : 1,

		double[] : 2;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.CubicSplineClampedSolver__void_<init><double.double>>
	CONSUME 
		double : 2;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.CubicSplineClampedSolver : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.CubicSplineClampedSolver__void_<init><double[].double[]>>
	CONSUME 
		double[] : 2;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.CubicSplineClampedSolver : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.CubicSplineInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult_interpolate<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.CubicSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.CubicSplineInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult_interpolate<double[].double[][]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.interpolation.CubicSplineInterpolator : 1,

		double[][] : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.CubicSplineInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity_interpolateWithSensitivity<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.CubicSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.CubicSplineInterpolator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.CubicSplineInterpolator : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.CubicSplineNakSolver__com.opengamma.analytics.math.matrix.DoubleMatrix1D_getKnotsMat1D<double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.interpolation.CubicSplineNakSolver : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.CubicSplineNakSolver__com.opengamma.analytics.math.matrix.DoubleMatrix2D_solve<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.CubicSplineNakSolver : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.CubicSplineNakSolver__com.opengamma.analytics.math.matrix.DoubleMatrix2D[]_solveMultiDim<double[].com.opengamma.analytics.math.matrix.DoubleMatrix2D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1,

		double[] : 1,

		com.opengamma.analytics.math.interpolation.CubicSplineNakSolver : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.CubicSplineNakSolver__com.opengamma.analytics.math.matrix.DoubleMatrix2D[]_solveWithSensitivity<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.CubicSplineNakSolver : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.CubicSplineNakSolver__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.CubicSplineNakSolver : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.CubicSplineNaturalSolver__com.opengamma.analytics.math.matrix.DoubleMatrix1D_getKnotsMat1D<double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.interpolation.CubicSplineNaturalSolver : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.CubicSplineNaturalSolver__com.opengamma.analytics.math.matrix.DoubleMatrix2D_solve<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.CubicSplineNaturalSolver : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.CubicSplineNaturalSolver__com.opengamma.analytics.math.matrix.DoubleMatrix2D[]_solveMultiDim<double[].com.opengamma.analytics.math.matrix.DoubleMatrix2D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1,

		double[] : 1,

		com.opengamma.analytics.math.interpolation.CubicSplineNaturalSolver : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.CubicSplineNaturalSolver__com.opengamma.analytics.math.matrix.DoubleMatrix2D[]_solveWithSensitivity<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.CubicSplineNaturalSolver : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.CubicSplineNaturalSolver__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.CubicSplineNaturalSolver : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.CubicSplineSolver__com.opengamma.analytics.math.matrix.DoubleMatrix1D_getKnotsMat1D<double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.interpolation.CubicSplineSolver : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.CubicSplineSolver__com.opengamma.analytics.math.matrix.DoubleMatrix2D_solve<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.CubicSplineSolver : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.CubicSplineSolver__com.opengamma.analytics.math.matrix.DoubleMatrix2D[]_solveMultiDim<double[].com.opengamma.analytics.math.matrix.DoubleMatrix2D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1,

		double[] : 1,

		com.opengamma.analytics.math.interpolation.CubicSplineSolver : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.CubicSplineSolver__com.opengamma.analytics.math.matrix.DoubleMatrix2D[]_solveWithSensitivity<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.CubicSplineSolver : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.DistanceCalculator__double_getDistance<double[].double[]>>
	CONSUME 
		double[] : 2;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.DistanceCalculator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.DistanceCalculator : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.DoubleQuadraticInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundle<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.DoubleQuadraticInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.DoubleQuadraticInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundleFromSortedArrays<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.DoubleQuadraticInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.DoubleQuadraticInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle_getDataBundle<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.DoubleQuadraticInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.DoubleQuadraticInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle_getDataBundleFromSortedArrays<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.DoubleQuadraticInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.DoubleQuadraticInterpolator1D__double_firstDerivative<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.DoubleQuadraticInterpolator1D : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.DoubleQuadraticInterpolator1D__double[]_getNodeSensitivitiesForValue<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.DoubleQuadraticInterpolator1D : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.DoubleQuadraticInterpolator1D__java.lang.Double_interpolate<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.DoubleQuadraticInterpolator1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.DoubleQuadraticInterpolator1D__java.lang.Double_interpolate<java.lang.Object.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.DoubleQuadraticInterpolator1D : 1,

		java.lang.Object : 2;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.DoubleQuadraticInterpolator1D__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.DoubleQuadraticInterpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.DoubleQuadraticInterpolator1D__void_<init><com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction>>
	CONSUME 
		com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.DoubleQuadraticInterpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ExponentialExtrapolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundle<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.ExponentialExtrapolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ExponentialExtrapolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundleFromSortedArrays<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.ExponentialExtrapolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ExponentialExtrapolator1D__double_firstDerivative<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.ExponentialExtrapolator1D : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ExponentialExtrapolator1D__double[]_getNodeSensitivitiesForValue<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.ExponentialExtrapolator1D : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ExponentialExtrapolator1D__java.lang.Double_interpolate<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.ExponentialExtrapolator1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ExponentialExtrapolator1D__java.lang.Double_interpolate<java.lang.Object.java.lang.Object>>
	CONSUME 
		java.lang.Object : 2,

		com.opengamma.analytics.math.interpolation.ExponentialExtrapolator1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ExponentialExtrapolator1D__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.ExponentialExtrapolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ExponentialInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundle<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.ExponentialInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ExponentialInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundleFromSortedArrays<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.ExponentialInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ExponentialInterpolator1D__double_firstDerivative<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.ExponentialInterpolator1D : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ExponentialInterpolator1D__double[]_getNodeSensitivitiesForValue<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.ExponentialInterpolator1D : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ExponentialInterpolator1D__java.lang.Double_interpolate<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.ExponentialInterpolator1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ExponentialInterpolator1D__java.lang.Double_interpolate<java.lang.Object.java.lang.Object>>
	CONSUME 
		java.lang.Object : 2,

		com.opengamma.analytics.math.interpolation.ExponentialInterpolator1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ExponentialInterpolator1D__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.ExponentialInterpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.FlatExtrapolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundle<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.FlatExtrapolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.FlatExtrapolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundleFromSortedArrays<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.FlatExtrapolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.FlatExtrapolator1D__double_firstDerivative<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.FlatExtrapolator1D : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.FlatExtrapolator1D__double[]_getNodeSensitivitiesForValue<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.FlatExtrapolator1D : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.FlatExtrapolator1D__java.lang.Double_interpolate<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.FlatExtrapolator1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.FlatExtrapolator1D__java.lang.Double_interpolate<java.lang.Object.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.FlatExtrapolator1D : 1,

		java.lang.Object : 2;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.FlatExtrapolator1D__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.FlatExtrapolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.GaussianRadialBasisFunction__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.GaussianRadialBasisFunction : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.GaussianRadialBasisFunction__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.interpolation.GaussianRadialBasisFunction : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.GaussianRadialBasisFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.GaussianRadialBasisFunction : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.GaussianRadialBasisFunction__void_<init><double>>
	CONSUME 
		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.GaussianRadialBasisFunction : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.GridInterpolator2D__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.GridInterpolator2D : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.GridInterpolator2D__com.opengamma.analytics.math.interpolation.Interpolator1D_getXInterpolator<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.GridInterpolator2D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.GridInterpolator2D__com.opengamma.analytics.math.interpolation.Interpolator1D_getYInterpolator<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.GridInterpolator2D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.GridInterpolator2D__java.lang.Double_interpolate<java.lang.Object.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.GridInterpolator2D : 1,

		java.lang.Object : 2;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.GridInterpolator2D__java.lang.Double_interpolate<java.util.Map.com.opengamma.util.tuple.DoublesPair>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.GridInterpolator2D : 1,

		java.util.Map : 1,

		com.opengamma.util.tuple.DoublesPair : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.GridInterpolator2D__java.util.Map_getDataBundle<java.util.Map>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.GridInterpolator2D : 1,

		java.util.Map : 1;
	PRODUCE 
		java.util.Map : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.GridInterpolator2D__java.util.Map_getNodeSensitivitiesForValue<java.util.Map.com.opengamma.util.tuple.DoublesPair>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.GridInterpolator2D : 1,

		java.util.Map : 1,

		com.opengamma.util.tuple.DoublesPair : 1;
	PRODUCE 
		java.util.Map : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.GridInterpolator2D__void_<init><com.opengamma.analytics.math.interpolation.Interpolator1D.com.opengamma.analytics.math.interpolation.Interpolator1D>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.Interpolator1D : 2;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.GridInterpolator2D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.GridInterpolator2D__void_<init><com.opengamma.analytics.math.interpolation.Interpolator1D.com.opengamma.analytics.math.interpolation.Interpolator1D.com.opengamma.analytics.math.interpolation.Interpolator1D.com.opengamma.analytics.math.interpolation.Interpolator1D>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.Interpolator1D : 4;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.GridInterpolator2D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.HermiteCoefficientsProvider__double_endpointDerivatives<double.double.double.double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.HermiteCoefficientsProvider : 1,

		double : 4;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.HermiteCoefficientsProvider__double[]_intervalsCalculator<double[]>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.HermiteCoefficientsProvider : 1,

		double[] : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.HermiteCoefficientsProvider__double[]_slopesCalculator<double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.HermiteCoefficientsProvider : 1,

		double[] : 2;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.HermiteCoefficientsProvider__double[][]_slopeSensitivityCalculator<double[]>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.HermiteCoefficientsProvider : 1,

		double[] : 1;
	PRODUCE 
		double[][] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.HermiteCoefficientsProvider__double[][]_solve<double[].double[].double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.HermiteCoefficientsProvider : 1,

		double[] : 4;
	PRODUCE 
		double[][] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.HermiteCoefficientsProvider__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.HermiteCoefficientsProvider : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.IntegratedLinearInterpolator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.IntegratedLinearInterpolator : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.Interpolator1D$1__java.lang.Boolean_evaluate<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.Interpolator1D$1 : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Boolean : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.Interpolator1D$1__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.Interpolator1D$1 : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.Interpolator1D$2__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.Interpolator1D$2 : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.Interpolator1D$2__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.Interpolator1D$2 : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.Interpolator1D$3__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.Interpolator1D$3 : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.Interpolator1D$3__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.Interpolator1D$3 : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.Interpolator1D__boolean_equals<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.Interpolator1D__com.opengamma.analytics.math.function.Function1D_getFunction<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.Function1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.Interpolator1D__com.opengamma.analytics.math.function.Function1D_getGradientFunction<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.Function1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.Interpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundle<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.Interpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundle<java.util.Map>>
	CONSUME 
		java.util.Map : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.Interpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundleFromSortedArrays<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.Interpolator1D__double_firstDerivative<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.Interpolator1D__double[]_getNodeSensitivitiesForValue<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.Interpolator1D__double[]_getNodeSensitivitiesForValue<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double.boolean>>
	CONSUME 
		boolean : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.Interpolator1D__java.lang.Double_interpolate<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.Interpolator1D__java.lang.Double_interpolate<java.lang.Object.java.lang.Object>>
	CONSUME 
		java.lang.Object : 2,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.Interpolator1D__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.Interpolator1DFactory__com.opengamma.analytics.math.interpolation.Interpolator1D_getInterpolator<java.lang.String>>
	CONSUME 
		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.Interpolator1DFactory__java.lang.String_getInterpolatorName<com.opengamma.analytics.math.interpolation.Interpolator1D>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		java.lang.String : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.Interpolator2D__java.lang.Double_interpolate<java.lang.Object.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.Interpolator2D : 1,

		java.lang.Object : 2;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.Interpolator2D__java.lang.Double_interpolate<java.util.Map.com.opengamma.util.tuple.DoublesPair>>
	CONSUME 
		java.util.Map : 1,

		com.opengamma.analytics.math.interpolation.Interpolator2D : 1,

		com.opengamma.util.tuple.DoublesPair : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.Interpolator2D__java.util.Map_getNodeSensitivitiesForValue<java.util.Map.com.opengamma.util.tuple.DoublesPair>>
	CONSUME 
		java.util.Map : 1,

		com.opengamma.analytics.math.interpolation.Interpolator2D : 1,

		com.opengamma.util.tuple.DoublesPair : 1;
	PRODUCE 
		java.util.Map : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.Interpolator2D__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.Interpolator2D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.Interpolator__java.lang.Double_interpolate<java.lang.Object.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.Interpolator : 1,

		java.lang.Object : 2;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.InterpolatorND__com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle_getDataBundle<double[].double[].double[].double[]>>
	CONSUME 
		double[] : 4,

		com.opengamma.analytics.math.interpolation.InterpolatorND : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.InterpolatorND__com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle_getDataBundle<java.util.List>>
	CONSUME 
		java.util.List : 1,

		com.opengamma.analytics.math.interpolation.InterpolatorND : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.InterpolatorND__java.lang.Double_interpolate<com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle.double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle : 1,

		com.opengamma.analytics.math.interpolation.InterpolatorND : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.InterpolatorND__java.lang.Double_interpolate<java.lang.Object.java.lang.Object>>
	CONSUME 
		java.lang.Object : 2,

		com.opengamma.analytics.math.interpolation.InterpolatorND : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.InterpolatorND__java.util.Map_getNodeSensitivitiesForValue<com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle.double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle : 1,

		com.opengamma.analytics.math.interpolation.InterpolatorND : 1;
	PRODUCE 
		java.util.Map : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.InterpolatorND__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.InterpolatorND : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.InverseMultiquadraticRadialBasisFunction__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.InverseMultiquadraticRadialBasisFunction : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.InverseMultiquadraticRadialBasisFunction__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.InverseMultiquadraticRadialBasisFunction : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.InverseMultiquadraticRadialBasisFunction__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.InverseMultiquadraticRadialBasisFunction : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.InverseMultiquadraticRadialBasisFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.InverseMultiquadraticRadialBasisFunction : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.InverseMultiquadraticRadialBasisFunction__void_<init><double>>
	CONSUME 
		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.InverseMultiquadraticRadialBasisFunction : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.KrigingInterpolatorND__boolean_equals<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.interpolation.KrigingInterpolatorND : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.KrigingInterpolatorND__com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle_getDataBundle<double[].double[].double[].double[]>>
	CONSUME 
		double[] : 4,

		com.opengamma.analytics.math.interpolation.KrigingInterpolatorND : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.KrigingInterpolatorND__com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle_getDataBundle<java.util.List>>
	CONSUME 
		java.util.List : 1,

		com.opengamma.analytics.math.interpolation.KrigingInterpolatorND : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.KrigingInterpolatorND__com.opengamma.analytics.math.interpolation.data.KrigingInterpolatorDataBundle_getDataBundle<double[].double[].double[].double[]>>
	CONSUME 
		double[] : 4,

		com.opengamma.analytics.math.interpolation.KrigingInterpolatorND : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.KrigingInterpolatorDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.KrigingInterpolatorND__com.opengamma.analytics.math.interpolation.data.KrigingInterpolatorDataBundle_getDataBundle<java.util.List>>
	CONSUME 
		java.util.List : 1,

		com.opengamma.analytics.math.interpolation.KrigingInterpolatorND : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.KrigingInterpolatorDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.KrigingInterpolatorND__java.lang.Double_interpolate<com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle.double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle : 1,

		com.opengamma.analytics.math.interpolation.KrigingInterpolatorND : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.KrigingInterpolatorND__java.lang.Double_interpolate<java.lang.Object.java.lang.Object>>
	CONSUME 
		java.lang.Object : 2,

		com.opengamma.analytics.math.interpolation.KrigingInterpolatorND : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.KrigingInterpolatorND__void_<init><double>>
	CONSUME 
		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.KrigingInterpolatorND : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LinearExtrapolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundle<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.LinearExtrapolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LinearExtrapolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundleFromSortedArrays<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.LinearExtrapolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LinearExtrapolator1D__double_firstDerivative<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.LinearExtrapolator1D : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LinearExtrapolator1D__double[]_getNodeSensitivitiesForValue<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.LinearExtrapolator1D : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LinearExtrapolator1D__java.lang.Double_interpolate<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.LinearExtrapolator1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LinearExtrapolator1D__java.lang.Double_interpolate<java.lang.Object.java.lang.Object>>
	CONSUME 
		java.lang.Object : 2,

		com.opengamma.analytics.math.interpolation.LinearExtrapolator1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LinearExtrapolator1D__void_<init><com.opengamma.analytics.math.interpolation.Interpolator1D>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.LinearExtrapolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LinearExtrapolator1D__void_<init><com.opengamma.analytics.math.interpolation.Interpolator1D.double>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.LinearExtrapolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LinearInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundle<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.LinearInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LinearInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundleFromSortedArrays<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.LinearInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LinearInterpolator1D__double_firstDerivative<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.LinearInterpolator1D : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LinearInterpolator1D__double[]_getNodeSensitivitiesForValue<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.LinearInterpolator1D : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LinearInterpolator1D__java.lang.Double_interpolate<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.LinearInterpolator1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LinearInterpolator1D__java.lang.Double_interpolate<java.lang.Object.java.lang.Object>>
	CONSUME 
		java.lang.Object : 2,

		com.opengamma.analytics.math.interpolation.LinearInterpolator1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LinearInterpolator1D__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.LinearInterpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LinearInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult_interpolate<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.LinearInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LinearInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult_interpolate<double[].double[][]>>
	CONSUME 
		double[] : 1,

		double[][] : 1,

		com.opengamma.analytics.math.interpolation.LinearInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LinearInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity_interpolateWithSensitivity<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.LinearInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LinearInterpolator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.LinearInterpolator : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogClampedCubicSplineInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundle<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.LogClampedCubicSplineInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogClampedCubicSplineInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundle<double[].double[].double.double>>
	CONSUME 
		double[] : 2,

		double : 2,

		com.opengamma.analytics.math.interpolation.LogClampedCubicSplineInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogClampedCubicSplineInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundleFromSortedArrays<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.LogClampedCubicSplineInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogClampedCubicSplineInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundleFromSortedArrays<double[].double[].double.double>>
	CONSUME 
		double[] : 2,

		double : 2,

		com.opengamma.analytics.math.interpolation.LogClampedCubicSplineInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogClampedCubicSplineInterpolator1D__double_firstDerivative<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.LogClampedCubicSplineInterpolator1D : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogClampedCubicSplineInterpolator1D__double[]_getNodeSensitivitiesForValue<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.LogClampedCubicSplineInterpolator1D : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogClampedCubicSplineInterpolator1D__java.lang.Double_interpolate<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.LogClampedCubicSplineInterpolator1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogClampedCubicSplineInterpolator1D__java.lang.Double_interpolate<java.lang.Object.java.lang.Object>>
	CONSUME 
		java.lang.Object : 2,

		com.opengamma.analytics.math.interpolation.LogClampedCubicSplineInterpolator1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogClampedCubicSplineInterpolator1D__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.LogClampedCubicSplineInterpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogCubicSplineNaturalSolver__com.opengamma.analytics.math.matrix.DoubleMatrix1D_getKnotsMat1D<double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.interpolation.LogCubicSplineNaturalSolver : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogCubicSplineNaturalSolver__com.opengamma.analytics.math.matrix.DoubleMatrix2D_solve<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.LogCubicSplineNaturalSolver : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogCubicSplineNaturalSolver__com.opengamma.analytics.math.matrix.DoubleMatrix2D[]_solveMultiDim<double[].com.opengamma.analytics.math.matrix.DoubleMatrix2D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1,

		double[] : 1,

		com.opengamma.analytics.math.interpolation.LogCubicSplineNaturalSolver : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogCubicSplineNaturalSolver__com.opengamma.analytics.math.matrix.DoubleMatrix2D[]_solveWithSensitivity<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.LogCubicSplineNaturalSolver : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogCubicSplineNaturalSolver__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.LogCubicSplineNaturalSolver : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogLinearExtrapolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundle<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.LogLinearExtrapolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogLinearExtrapolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundleFromSortedArrays<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.LogLinearExtrapolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogLinearExtrapolator1D__double_firstDerivative<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.LogLinearExtrapolator1D : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogLinearExtrapolator1D__double[]_getNodeSensitivitiesForValue<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.LogLinearExtrapolator1D : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogLinearExtrapolator1D__java.lang.Double_interpolate<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.LogLinearExtrapolator1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogLinearExtrapolator1D__java.lang.Double_interpolate<java.lang.Object.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.LogLinearExtrapolator1D : 1,

		java.lang.Object : 2;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogLinearExtrapolator1D__void_<init><com.opengamma.analytics.math.interpolation.Interpolator1D>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.LogLinearExtrapolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogLinearExtrapolator1D__void_<init><com.opengamma.analytics.math.interpolation.Interpolator1D.double>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.LogLinearExtrapolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogLinearInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundle<double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.LogLinearInterpolator1D : 1,

		double[] : 2;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogLinearInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundleFromSortedArrays<double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.LogLinearInterpolator1D : 1,

		double[] : 2;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogLinearInterpolator1D__double_firstDerivative<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.LogLinearInterpolator1D : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogLinearInterpolator1D__double[]_getNodeSensitivitiesForValue<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.LogLinearInterpolator1D : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogLinearInterpolator1D__java.lang.Double_interpolate<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.LogLinearInterpolator1D : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogLinearInterpolator1D__java.lang.Double_interpolate<java.lang.Object.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.LogLinearInterpolator1D : 1,

		java.lang.Object : 2;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogLinearInterpolator1D__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.LogLinearInterpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D$1__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D$1 : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D$1__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D$1 : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundle<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundleFromSortedArrays<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D__double[]_getNodeSensitivitiesForValue<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D__java.lang.Double_interpolate<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D__java.lang.Double_interpolate<java.lang.Object.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D : 1,

		java.lang.Object : 2;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D__void_<init><double[]>>
	CONSUME 
		double[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogNaturalCubicInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundle<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.LogNaturalCubicInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogNaturalCubicInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundleFromSortedArrays<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.LogNaturalCubicInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogNaturalCubicInterpolator1D__double_firstDerivative<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.LogNaturalCubicInterpolator1D : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogNaturalCubicInterpolator1D__double[]_getNodeSensitivitiesForValue<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.LogNaturalCubicInterpolator1D : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogNaturalCubicInterpolator1D__java.lang.Double_interpolate<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.LogNaturalCubicInterpolator1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogNaturalCubicInterpolator1D__java.lang.Double_interpolate<java.lang.Object.java.lang.Object>>
	CONSUME 
		java.lang.Object : 2,

		com.opengamma.analytics.math.interpolation.LogNaturalCubicInterpolator1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogNaturalCubicInterpolator1D__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.LogNaturalCubicInterpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogNaturalCubicMonotonicityPreservingInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundle<double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.LogNaturalCubicMonotonicityPreservingInterpolator1D : 1,

		double[] : 2;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogNaturalCubicMonotonicityPreservingInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundleFromSortedArrays<double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.LogNaturalCubicMonotonicityPreservingInterpolator1D : 1,

		double[] : 2;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogNaturalCubicMonotonicityPreservingInterpolator1D__double_firstDerivative<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.LogNaturalCubicMonotonicityPreservingInterpolator1D : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogNaturalCubicMonotonicityPreservingInterpolator1D__double[]_getNodeSensitivitiesForValue<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.LogNaturalCubicMonotonicityPreservingInterpolator1D : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogNaturalCubicMonotonicityPreservingInterpolator1D__java.lang.Double_interpolate<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.LogNaturalCubicMonotonicityPreservingInterpolator1D : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogNaturalCubicMonotonicityPreservingInterpolator1D__java.lang.Double_interpolate<java.lang.Object.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.LogNaturalCubicMonotonicityPreservingInterpolator1D : 1,

		java.lang.Object : 2;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogNaturalCubicMonotonicityPreservingInterpolator1D__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.LogNaturalCubicMonotonicityPreservingInterpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogNaturalSplineHelper__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.LogNaturalSplineHelper : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogNotAKnotCubicSplineInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundle<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.LogNotAKnotCubicSplineInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogNotAKnotCubicSplineInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundle<double[].double[].double.double>>
	CONSUME 
		double[] : 2,

		double : 2,

		com.opengamma.analytics.math.interpolation.LogNotAKnotCubicSplineInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogNotAKnotCubicSplineInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundleFromSortedArrays<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.LogNotAKnotCubicSplineInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogNotAKnotCubicSplineInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundleFromSortedArrays<double[].double[].double.double>>
	CONSUME 
		double[] : 2,

		double : 2,

		com.opengamma.analytics.math.interpolation.LogNotAKnotCubicSplineInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogNotAKnotCubicSplineInterpolator1D__double_firstDerivative<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.LogNotAKnotCubicSplineInterpolator1D : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogNotAKnotCubicSplineInterpolator1D__double[]_getNodeSensitivitiesForValue<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.LogNotAKnotCubicSplineInterpolator1D : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogNotAKnotCubicSplineInterpolator1D__java.lang.Double_interpolate<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.LogNotAKnotCubicSplineInterpolator1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogNotAKnotCubicSplineInterpolator1D__java.lang.Double_interpolate<java.lang.Object.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.LogNotAKnotCubicSplineInterpolator1D : 1,

		java.lang.Object : 2;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.LogNotAKnotCubicSplineInterpolator1D__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.LogNotAKnotCubicSplineInterpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.MeshgridInterpolator2D__void_<init><com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.MeshgridInterpolator2D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.MeshgridInterpolator2D__void_<init><com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator[]>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.MeshgridInterpolator2D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundle<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundleFromSortedArrays<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D__double_firstDerivative<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D__double[]_getNodeSensitivitiesForValue<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D__java.lang.Double_interpolate<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D__java.lang.Double_interpolate<java.lang.Object.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D : 1,

		java.lang.Object : 2;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult_interpolate<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult_interpolate<double[].double[][]>>
	CONSUME 
		double[] : 1,

		double[][] : 1,

		com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult_interpolateFwds<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity_interpolateWithSensitivity<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator__com.opengamma.analytics.math.matrix.DoubleMatrix1D_interpolate<double[].double[].double[]>>
	CONSUME 
		double[] : 3,

		com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator__com.opengamma.analytics.math.matrix.DoubleMatrix1D_interpolateFwds<double[].double[].double[]>>
	CONSUME 
		double[] : 3,

		com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator__com.opengamma.analytics.math.matrix.DoubleMatrix2D_interpolate<double[].double[].double[][]>>
	CONSUME 
		double[] : 2,

		double[][] : 1,

		com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator__com.opengamma.analytics.math.matrix.DoubleMatrix2D_interpolateFwds<double[].double[].double[][]>>
	CONSUME 
		double[] : 2,

		double[][] : 1,

		com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator__double_interpolate<double[].double[].double>>
	CONSUME 
		double[] : 2,

		double : 1,

		com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator__double_interpolateFwds<double[].double[].double>>
	CONSUME 
		double[] : 2,

		double : 1,

		com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.MonotonicIncreasingInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundle<double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.MonotonicIncreasingInterpolator1D : 1,

		double[] : 2;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.MonotonicIncreasingInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundleFromSortedArrays<double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.MonotonicIncreasingInterpolator1D : 1,

		double[] : 2;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.MonotonicIncreasingInterpolator1D__double_firstDerivative<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.MonotonicIncreasingInterpolator1D : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.MonotonicIncreasingInterpolator1D__double[]_getNodeSensitivitiesForValue<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.MonotonicIncreasingInterpolator1D : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.MonotonicIncreasingInterpolator1D__java.lang.Double_interpolate<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.MonotonicIncreasingInterpolator1D : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.MonotonicIncreasingInterpolator1D__java.lang.Double_interpolate<java.lang.Object.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.MonotonicIncreasingInterpolator1D : 1,

		java.lang.Object : 2;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.MonotonicIncreasingInterpolator1D__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.MonotonicIncreasingInterpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator1D__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator1D__void_<init><com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator_getPrimaryMethod<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult_interpolate<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult_interpolate<double[].double[][]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator : 1,

		double[][] : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity_interpolateWithSensitivity<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator__void_<init><com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.MonotonicityPreservingQuinticSplineInterpolator1D__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.MonotonicityPreservingQuinticSplineInterpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.MonotonicityPreservingQuinticSplineInterpolator1D__void_<init><com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.MonotonicityPreservingQuinticSplineInterpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.MonotonicityPreservingQuinticSplineInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator_getPrimaryMethod<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.MonotonicityPreservingQuinticSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.MonotonicityPreservingQuinticSplineInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult_interpolate<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.MonotonicityPreservingQuinticSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.MonotonicityPreservingQuinticSplineInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult_interpolate<double[].double[][]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.interpolation.MonotonicityPreservingQuinticSplineInterpolator : 1,

		double[][] : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.MonotonicityPreservingQuinticSplineInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity_interpolateWithSensitivity<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.MonotonicityPreservingQuinticSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.MonotonicityPreservingQuinticSplineInterpolator__void_<init><com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.MonotonicityPreservingQuinticSplineInterpolator : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.MultiquadraticRadialBasisFunction__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.MultiquadraticRadialBasisFunction : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.MultiquadraticRadialBasisFunction__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.MultiquadraticRadialBasisFunction : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.MultiquadraticRadialBasisFunction__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.MultiquadraticRadialBasisFunction : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.MultiquadraticRadialBasisFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.MultiquadraticRadialBasisFunction : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.MultiquadraticRadialBasisFunction__void_<init><double>>
	CONSUME 
		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.MultiquadraticRadialBasisFunction : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.NaturalCubicSplineInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundle<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.NaturalCubicSplineInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.NaturalCubicSplineInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundleFromSortedArrays<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.NaturalCubicSplineInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.NaturalCubicSplineInterpolator1D__double_firstDerivative<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.NaturalCubicSplineInterpolator1D : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.NaturalCubicSplineInterpolator1D__double[]_getNodeSensitivitiesForValue<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.NaturalCubicSplineInterpolator1D : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.NaturalCubicSplineInterpolator1D__java.lang.Double_interpolate<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.NaturalCubicSplineInterpolator1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.NaturalCubicSplineInterpolator1D__java.lang.Double_interpolate<java.lang.Object.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.NaturalCubicSplineInterpolator1D : 1,

		java.lang.Object : 2;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.NaturalCubicSplineInterpolator1D__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.NaturalCubicSplineInterpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.NaturalCubicSplineInterpolator1D__void_<init><double>>
	CONSUME 
		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.NaturalCubicSplineInterpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.NaturalSplineInterpolator1D__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.NaturalSplineInterpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.NaturalSplineInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult_interpolate<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.NaturalSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.NaturalSplineInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult_interpolate<double[].double[][]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.interpolation.NaturalSplineInterpolator : 1,

		double[][] : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.NaturalSplineInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity_interpolateWithSensitivity<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.NaturalSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.NaturalSplineInterpolator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.NaturalSplineInterpolator : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.NaturalSplineInterpolator__void_<init><com.opengamma.analytics.math.interpolation.CubicSplineSolver>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.CubicSplineSolver : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.NaturalSplineInterpolator : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator1D__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator1D__void_<init><com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator_getPrimaryMethod<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult_interpolate<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult_interpolate<double[].double[][]>>
	CONSUME 
		double[] : 1,

		double[][] : 1,

		com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity_interpolateWithSensitivity<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator__void_<init><com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.NonnegativityPreservingQuinticSplineInterpolator1D__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.NonnegativityPreservingQuinticSplineInterpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.NonnegativityPreservingQuinticSplineInterpolator1D__void_<init><com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.NonnegativityPreservingQuinticSplineInterpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.NonnegativityPreservingQuinticSplineInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator_getPrimaryMethod<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.NonnegativityPreservingQuinticSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.NonnegativityPreservingQuinticSplineInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult_interpolate<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.NonnegativityPreservingQuinticSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.NonnegativityPreservingQuinticSplineInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult_interpolate<double[].double[][]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.interpolation.NonnegativityPreservingQuinticSplineInterpolator : 1,

		double[][] : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.NonnegativityPreservingQuinticSplineInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity_interpolateWithSensitivity<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.NonnegativityPreservingQuinticSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.NonnegativityPreservingQuinticSplineInterpolator__void_<init><com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.NonnegativityPreservingQuinticSplineInterpolator : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.NotAKnotCubicSplineInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundle<double[].double[].double.double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.NotAKnotCubicSplineInterpolator1D : 1,

		double[] : 2,

		double : 2;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.NotAKnotCubicSplineInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundleFromSortedArrays<double[].double[].double.double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.NotAKnotCubicSplineInterpolator1D : 1,

		double[] : 2,

		double : 2;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.NotAKnotCubicSplineInterpolator1D__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.NotAKnotCubicSplineInterpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundle<double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D : 1,

		double[] : 2;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundleFromSortedArrays<double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D : 1,

		double[] : 2;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D__double_firstDerivative<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D__double[]_getNodeSensitivitiesForValue<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D__java.lang.Double_interpolate<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D__java.lang.Double_interpolate<java.lang.Object.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D : 1,

		java.lang.Object : 2;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PCHIPYieldCurveInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundle<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.PCHIPYieldCurveInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PCHIPYieldCurveInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundleFromSortedArrays<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.PCHIPYieldCurveInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PCHIPYieldCurveInterpolator1D__double_firstDerivative<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.PCHIPYieldCurveInterpolator1D : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PCHIPYieldCurveInterpolator1D__double[]_getNodeSensitivitiesForValue<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.PCHIPYieldCurveInterpolator1D : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PCHIPYieldCurveInterpolator1D__java.lang.Double_interpolate<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.PCHIPYieldCurveInterpolator1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PCHIPYieldCurveInterpolator1D__java.lang.Double_interpolate<java.lang.Object.java.lang.Object>>
	CONSUME 
		java.lang.Object : 2,

		com.opengamma.analytics.math.interpolation.PCHIPYieldCurveInterpolator1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PCHIPYieldCurveInterpolator1D__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PCHIPYieldCurveInterpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PSplineFitter__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PSplineFitter : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PenaltyMatrixGenerator__com.opengamma.analytics.math.matrix.DoubleMatrix1D_flattenMatrix<com.opengamma.analytics.math.matrix.DoubleMatrix2D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PenaltyMatrixGenerator__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getDerivativeMatrix<double[].int.boolean>>
	CONSUME 
		boolean : 1,

		double[] : 1,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PenaltyMatrixGenerator__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getDifferenceMatrix<int.int>>
	CONSUME 
		int : 2;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PenaltyMatrixGenerator__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getMatrixForFlattened<int[].com.opengamma.analytics.math.matrix.DoubleMatrix2D.int>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1,

		int[] : 1,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PenaltyMatrixGenerator__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getPenaltyMatrix<double[].int>>
	CONSUME 
		double[] : 1,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PenaltyMatrixGenerator__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getPenaltyMatrix<double[][].int.int>>
	CONSUME 
		double[][] : 1,

		int : 2;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PenaltyMatrixGenerator__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getPenaltyMatrix<double[][].int[].double[]>>
	CONSUME 
		double[] : 1,

		double[][] : 1,

		int[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PenaltyMatrixGenerator__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getPenaltyMatrix<int.int>>
	CONSUME 
		int : 2;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PenaltyMatrixGenerator__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getPenaltyMatrix<int[].int.int>>
	CONSUME 
		int[] : 1,

		int : 2;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PenaltyMatrixGenerator__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getPenaltyMatrix<int[].int[].double[]>>
	CONSUME 
		double[] : 1,

		int[] : 2;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PenaltyMatrixGenerator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PenaltyMatrixGenerator : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewiseCubicHermiteSplineInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult_interpolate<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.PiecewiseCubicHermiteSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewiseCubicHermiteSplineInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult_interpolate<double[].double[][]>>
	CONSUME 
		double[] : 1,

		double[][] : 1,

		com.opengamma.analytics.math.interpolation.PiecewiseCubicHermiteSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewiseCubicHermiteSplineInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity_interpolateWithSensitivity<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.PiecewiseCubicHermiteSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewiseCubicHermiteSplineInterpolator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewiseCubicHermiteSplineInterpolator : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewiseCubicHermiteSplineInterpolatorWithSensitivity$SlopeFinderResults__com.opengamma.analytics.math.matrix.DoubleMatrix1D_getSlopes<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewiseCubicHermiteSplineInterpolatorWithSensitivity$SlopeFinderResults : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewiseCubicHermiteSplineInterpolatorWithSensitivity$SlopeFinderResults__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getSlopeJacobian<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewiseCubicHermiteSplineInterpolatorWithSensitivity$SlopeFinderResults : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewiseCubicHermiteSplineInterpolatorWithSensitivity$SlopeFinderResults__void_<init><com.opengamma.analytics.math.interpolation.PiecewiseCubicHermiteSplineInterpolatorWithSensitivity.com.opengamma.analytics.math.matrix.DoubleMatrix1D.com.opengamma.analytics.math.matrix.DoubleMatrix2D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1,

		com.opengamma.analytics.math.interpolation.PiecewiseCubicHermiteSplineInterpolatorWithSensitivity : 1,

		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewiseCubicHermiteSplineInterpolatorWithSensitivity$SlopeFinderResults : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewiseCubicHermiteSplineInterpolatorWithSensitivity__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult_interpolate<double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewiseCubicHermiteSplineInterpolatorWithSensitivity : 1,

		double[] : 2;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewiseCubicHermiteSplineInterpolatorWithSensitivity__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult_interpolate<double[].double[][]>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewiseCubicHermiteSplineInterpolatorWithSensitivity : 1,

		double[] : 1,

		double[][] : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewiseCubicHermiteSplineInterpolatorWithSensitivity__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity_interpolateWithSensitivity<double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewiseCubicHermiteSplineInterpolatorWithSensitivity : 1,

		double[] : 2;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewiseCubicHermiteSplineInterpolatorWithSensitivity__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewiseCubicHermiteSplineInterpolatorWithSensitivity : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D__com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator_getInterpolator<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundle<double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D : 1,

		double[] : 2;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundle<double[].double[].double.double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D : 1,

		double[] : 2,

		double : 2;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundleFromSortedArrays<double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D : 1,

		double[] : 2;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundleFromSortedArrays<double[].double[].double.double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D : 1,

		double[] : 2,

		double : 2;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D__double_firstDerivative<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D__double[]_getNodeSensitivitiesForValue<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D__java.lang.Double_interpolate<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D__java.lang.Double_interpolate<java.lang.Object.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D : 1,

		java.lang.Object : 2;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D__void_<init><com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator2D__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D_interpolate<double[].double[].double[][]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator2D : 1,

		double[][] : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator2D__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator2D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator_getPrimaryMethod<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult_interpolate<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult_interpolate<double[].double[][]>>
	CONSUME 
		double[] : 1,

		double[][] : 1,

		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity_interpolateWithSensitivity<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator__com.opengamma.analytics.math.matrix.DoubleMatrix1D_interpolate<double[].double[].double[]>>
	CONSUME 
		double[] : 3,

		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator__com.opengamma.analytics.math.matrix.DoubleMatrix1D_interpolate<double[].double[][].double>>
	CONSUME 
		double[] : 1,

		double : 1,

		double[][] : 1,

		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator__com.opengamma.analytics.math.matrix.DoubleMatrix2D_interpolate<double[].double[].double[][]>>
	CONSUME 
		double[] : 2,

		double[][] : 1,

		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator__com.opengamma.analytics.math.matrix.DoubleMatrix2D_interpolate<double[].double[][].double[]>>
	CONSUME 
		double[] : 2,

		double[][] : 1,

		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator__com.opengamma.analytics.math.matrix.DoubleMatrix2D[]_interpolate<double[].double[][].double[][]>>
	CONSUME 
		double[] : 1,

		double[][] : 2,

		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator__double_interpolate<double[].double[].double>>
	CONSUME 
		double[] : 2,

		double : 1,

		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D__com.opengamma.analytics.math.matrix.DoubleMatrix1D_getKnots0<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D__com.opengamma.analytics.math.matrix.DoubleMatrix1D_getKnots1<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D__com.opengamma.analytics.math.matrix.DoubleMatrix2D[][]_getCoefs<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D[][] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D__int[]_getNumberOfIntervals<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D : 1;
	PRODUCE 
		int[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D__int[]_getOrder<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D : 1;
	PRODUCE 
		int[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D__java.util.ArrayList_getKnots2D<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D : 1;
	PRODUCE 
		java.util.ArrayList : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D__void_<init><com.opengamma.analytics.math.matrix.DoubleMatrix1D.com.opengamma.analytics.math.matrix.DoubleMatrix1D.com.opengamma.analytics.math.matrix.DoubleMatrix2D[][].int[]>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 2,

		com.opengamma.analytics.math.matrix.DoubleMatrix2D[][] : 1,

		int[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult__com.opengamma.analytics.math.matrix.DoubleMatrix1D_getKnots<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getCoefMatrix<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult__int_getDimensions<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult__int_getNumberOfIntervals<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult__int_getOrder<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult__void_<init><com.opengamma.analytics.math.matrix.DoubleMatrix1D.com.opengamma.analytics.math.matrix.DoubleMatrix2D.int.int>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1,

		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		int : 2;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getCoefficientSensitivity<int>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity : 1,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity__com.opengamma.analytics.math.matrix.DoubleMatrix2D[]_getCoefficientSensitivityAll<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PolynomialInterpolator1D__boolean_equals<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.interpolation.PolynomialInterpolator1D : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PolynomialInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundle<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.PolynomialInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PolynomialInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundleFromSortedArrays<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.PolynomialInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PolynomialInterpolator1D__double[]_getNodeSensitivitiesForValue<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.PolynomialInterpolator1D : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PolynomialInterpolator1D__java.lang.Double_interpolate<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.PolynomialInterpolator1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PolynomialInterpolator1D__java.lang.Double_interpolate<java.lang.Object.java.lang.Object>>
	CONSUME 
		java.lang.Object : 2,

		com.opengamma.analytics.math.interpolation.PolynomialInterpolator1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PolynomialInterpolator1D__void_<init><int>>
	CONSUME 
		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PolynomialInterpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PolynomialInterpolator1D__void_<init><int.int>>
	CONSUME 
		int : 2;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PolynomialInterpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitter__com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult_regressVerbose<double[].double[].int.boolean>>
	CONSUME 
		boolean : 1,

		double[] : 2,

		com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitter : 1,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitter__com.opengamma.analytics.math.regression.LeastSquaresRegressionResult_regress<double[].double[].int>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitter : 1,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.regression.LeastSquaresRegressionResult : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitter__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitter : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getRMat<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult__double_getDiffNorm<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult__double[]_getCoeff<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult__double[]_getMeanAndStd<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult__int_getDof<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult__void_<init><double[].com.opengamma.analytics.math.matrix.DoubleMatrix2D.int.double>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1,

		double[] : 1,

		double : 1,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundle<double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator1D : 1,

		double[] : 2;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundleFromSortedArrays<double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator1D : 1,

		double[] : 2;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator1D__double_firstDerivative<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator1D : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator1D__double[]_getNodeSensitivitiesForValue<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator1D : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator1D__java.lang.Double_interpolate<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator1D : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator1D__java.lang.Double_interpolate<java.lang.Object.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator1D : 1,

		java.lang.Object : 2;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator1D__void_<init><com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator1D__void_<init><com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator.double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator_getPrimaryMethod<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult_interpolate<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult_interpolate<double[].double[][]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator : 1,

		double[][] : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity_interpolateWithSensitivity<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator__void_<init><com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator__void_<init><com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator.double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundle<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundleFromSortedArrays<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D__double_firstDerivative<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D__double[]_getNodeSensitivitiesForValue<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D__java.lang.Double_interpolate<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D__java.lang.Double_interpolate<java.lang.Object.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D : 1,

		java.lang.Object : 2;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D__void_<init><com.opengamma.analytics.math.interpolation.Interpolator1D>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D__void_<init><com.opengamma.analytics.math.interpolation.Interpolator1D.com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D>>
	CONSUME 
		com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.QuadraticPolynomialLeftExtrapolator__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundle<double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.QuadraticPolynomialLeftExtrapolator : 1,

		double[] : 2;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.QuadraticPolynomialLeftExtrapolator__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundleFromSortedArrays<double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.QuadraticPolynomialLeftExtrapolator : 1,

		double[] : 2;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.QuadraticPolynomialLeftExtrapolator__double_firstDerivative<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.QuadraticPolynomialLeftExtrapolator : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.QuadraticPolynomialLeftExtrapolator__double[]_getNodeSensitivitiesForValue<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.QuadraticPolynomialLeftExtrapolator : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.QuadraticPolynomialLeftExtrapolator__java.lang.Double_interpolate<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.QuadraticPolynomialLeftExtrapolator : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.QuadraticPolynomialLeftExtrapolator__java.lang.Double_interpolate<java.lang.Object.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.QuadraticPolynomialLeftExtrapolator : 1,

		java.lang.Object : 2;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.QuadraticPolynomialLeftExtrapolator__void_<init><com.opengamma.analytics.math.interpolation.Interpolator1D>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.QuadraticPolynomialLeftExtrapolator : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.QuadraticPolynomialLeftExtrapolator__void_<init><com.opengamma.analytics.math.interpolation.Interpolator1D.double>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.QuadraticPolynomialLeftExtrapolator : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.QuadraticSplineInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundle<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.QuadraticSplineInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.QuadraticSplineInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundleFromSortedArrays<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.QuadraticSplineInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.QuadraticSplineInterpolator1D__double_firstDerivative<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.QuadraticSplineInterpolator1D : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.QuadraticSplineInterpolator1D__double[]_getNodeSensitivitiesForValue<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.QuadraticSplineInterpolator1D : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.QuadraticSplineInterpolator1D__java.lang.Double_interpolate<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.QuadraticSplineInterpolator1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.QuadraticSplineInterpolator1D__java.lang.Double_interpolate<java.lang.Object.java.lang.Object>>
	CONSUME 
		java.lang.Object : 2,

		com.opengamma.analytics.math.interpolation.QuadraticSplineInterpolator1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.QuadraticSplineInterpolator1D__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.QuadraticSplineInterpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.RadialBasisFunction__double_evaluate<com.opengamma.analytics.math.function.Function1D.java.util.List.double[].boolean>>
	CONSUME 
		java.util.List : 1,

		com.opengamma.analytics.math.interpolation.RadialBasisFunction : 1,

		boolean : 1,

		double[] : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.RadialBasisFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.RadialBasisFunction : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.RadialBasisFunctionInterpolatorND__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.RadialBasisFunctionInterpolatorND : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.RadialBasisFunctionInterpolatorND__com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle_getDataBundle<double[].double[].double[].double[]>>
	CONSUME 
		double[] : 4,

		com.opengamma.analytics.math.interpolation.RadialBasisFunctionInterpolatorND : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.RadialBasisFunctionInterpolatorND__com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle_getDataBundle<java.util.List>>
	CONSUME 
		java.util.List : 1,

		com.opengamma.analytics.math.interpolation.RadialBasisFunctionInterpolatorND : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.RadialBasisFunctionInterpolatorND__com.opengamma.analytics.math.interpolation.data.RadialBasisFunctionInterpolatorDataBundle_getDataBundle<double[].double[].double[].double[]>>
	CONSUME 
		double[] : 4,

		com.opengamma.analytics.math.interpolation.RadialBasisFunctionInterpolatorND : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.RadialBasisFunctionInterpolatorDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.RadialBasisFunctionInterpolatorND__com.opengamma.analytics.math.interpolation.data.RadialBasisFunctionInterpolatorDataBundle_getDataBundle<java.util.List>>
	CONSUME 
		java.util.List : 1,

		com.opengamma.analytics.math.interpolation.RadialBasisFunctionInterpolatorND : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.RadialBasisFunctionInterpolatorDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.RadialBasisFunctionInterpolatorND__java.lang.Double_interpolate<com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle.double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.interpolation.RadialBasisFunctionInterpolatorND : 1,

		com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.RadialBasisFunctionInterpolatorND__java.lang.Double_interpolate<java.lang.Object.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.RadialBasisFunctionInterpolatorND : 1,

		java.lang.Object : 2;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.RadialBasisFunctionInterpolatorND__java.util.Map_getNodeSensitivitiesForValue<com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle.double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.interpolation.RadialBasisFunctionInterpolatorND : 1,

		com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle : 1;
	PRODUCE 
		java.util.Map : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.RadialBasisFunctionInterpolatorND__void_<init><com.opengamma.analytics.math.function.Function1D.boolean>>
	CONSUME 
		boolean : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.RadialBasisFunctionInterpolatorND : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.RationalFunctionInterpolator1D__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.RationalFunctionInterpolator1D : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.RationalFunctionInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundle<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.RationalFunctionInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.RationalFunctionInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundleFromSortedArrays<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.RationalFunctionInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.RationalFunctionInterpolator1D__double[]_getNodeSensitivitiesForValue<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.RationalFunctionInterpolator1D : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.RationalFunctionInterpolator1D__java.lang.Double_interpolate<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.RationalFunctionInterpolator1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.RationalFunctionInterpolator1D__java.lang.Double_interpolate<java.lang.Object.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.RationalFunctionInterpolator1D : 1,

		java.lang.Object : 2;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.RationalFunctionInterpolator1D__void_<init><int.double>>
	CONSUME 
		double : 1,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.RationalFunctionInterpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ReciprocalExtrapolator1D$LinearlFunction1D__com.opengamma.analytics.math.matrix.DoubleMatrix1D_differentiate<com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult.double>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.interpolation.ReciprocalExtrapolator1D$LinearlFunction1D : 1,

		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ReciprocalExtrapolator1D$LinearlFunction1D__com.opengamma.analytics.math.matrix.DoubleMatrix1D_differentiateTwice<com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult.double>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.interpolation.ReciprocalExtrapolator1D$LinearlFunction1D : 1,

		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ReciprocalExtrapolator1D$LinearlFunction1D__com.opengamma.analytics.math.matrix.DoubleMatrix1D_evaluate<com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult.double>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.interpolation.ReciprocalExtrapolator1D$LinearlFunction1D : 1,

		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ReciprocalExtrapolator1D__double_firstDerivative<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.ReciprocalExtrapolator1D : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ReciprocalExtrapolator1D__double[]_getNodeSensitivitiesForValue<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.ReciprocalExtrapolator1D : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ReciprocalExtrapolator1D__java.lang.Double_interpolate<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.ReciprocalExtrapolator1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ReciprocalExtrapolator1D__java.lang.Double_interpolate<java.lang.Object.java.lang.Object>>
	CONSUME 
		java.lang.Object : 2,

		com.opengamma.analytics.math.interpolation.ReciprocalExtrapolator1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ReciprocalExtrapolator1D__void_<init><com.opengamma.analytics.math.interpolation.Interpolator1D>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.ReciprocalExtrapolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.SemiLocalCubicSplineInterpolator1D__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.SemiLocalCubicSplineInterpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.SemiLocalCubicSplineInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult_interpolate<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.SemiLocalCubicSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.SemiLocalCubicSplineInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult_interpolate<double[].double[][]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.interpolation.SemiLocalCubicSplineInterpolator : 1,

		double[][] : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.SemiLocalCubicSplineInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity_interpolateWithSensitivity<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.SemiLocalCubicSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.SemiLocalCubicSplineInterpolator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.SemiLocalCubicSplineInterpolator : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ShapePreservingCubicSplineInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundle<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.ShapePreservingCubicSplineInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ShapePreservingCubicSplineInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundleFromSortedArrays<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.ShapePreservingCubicSplineInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ShapePreservingCubicSplineInterpolator1D__double_firstDerivative<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.ShapePreservingCubicSplineInterpolator1D : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ShapePreservingCubicSplineInterpolator1D__double[]_getNodeSensitivitiesForValue<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.ShapePreservingCubicSplineInterpolator1D : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ShapePreservingCubicSplineInterpolator1D__java.lang.Double_interpolate<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.ShapePreservingCubicSplineInterpolator1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ShapePreservingCubicSplineInterpolator1D__java.lang.Double_interpolate<java.lang.Object.java.lang.Object>>
	CONSUME 
		java.lang.Object : 2,

		com.opengamma.analytics.math.interpolation.ShapePreservingCubicSplineInterpolator1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ShapePreservingCubicSplineInterpolator1D__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.ShapePreservingCubicSplineInterpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ShapePreservingCubicSplineInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult_interpolate<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.ShapePreservingCubicSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ShapePreservingCubicSplineInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult_interpolate<double[].double[][]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.interpolation.ShapePreservingCubicSplineInterpolator : 1,

		double[][] : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ShapePreservingCubicSplineInterpolator__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity_interpolateWithSensitivity<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.ShapePreservingCubicSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ShapePreservingCubicSplineInterpolator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.ShapePreservingCubicSplineInterpolator : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ShepardInterpolatorND__com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle_getDataBundle<double[].double[].double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.ShepardInterpolatorND : 1,

		double[] : 4;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ShepardInterpolatorND__com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle_getDataBundle<java.util.List>>
	CONSUME 
		java.util.List : 1,

		com.opengamma.analytics.math.interpolation.ShepardInterpolatorND : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ShepardInterpolatorND__java.lang.Double_interpolate<com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle.double[]>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.ShepardInterpolatorND : 1,

		double[] : 1,

		com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ShepardInterpolatorND__java.lang.Double_interpolate<java.lang.Object.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.ShepardInterpolatorND : 1,

		java.lang.Object : 2;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ShepardInterpolatorND__void_<init><double>>
	CONSUME 
		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.ShepardInterpolatorND : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ShepardNormalizedRadialBasisFunction__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.ShepardNormalizedRadialBasisFunction : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ShepardNormalizedRadialBasisFunction__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.ShepardNormalizedRadialBasisFunction : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ShepardNormalizedRadialBasisFunction__void_<init><double>>
	CONSUME 
		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.ShepardNormalizedRadialBasisFunction : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.SquareLinearInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundle<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.SquareLinearInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.SquareLinearInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundleFromSortedArrays<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.SquareLinearInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.SquareLinearInterpolator1D__double_firstDerivative<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.SquareLinearInterpolator1D : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.SquareLinearInterpolator1D__double[]_getNodeSensitivitiesForValue<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.SquareLinearInterpolator1D : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.SquareLinearInterpolator1D__java.lang.Double_interpolate<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.SquareLinearInterpolator1D : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.SquareLinearInterpolator1D__java.lang.Double_interpolate<java.lang.Object.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.SquareLinearInterpolator1D : 1,

		java.lang.Object : 2;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.SquareLinearInterpolator1D__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.SquareLinearInterpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.StepInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundle<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.StepInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.StepInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundleFromSortedArrays<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.StepInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.StepInterpolator1D__double_firstDerivative<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.StepInterpolator1D : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.StepInterpolator1D__double[]_getNodeSensitivitiesForValue<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.StepInterpolator1D : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.StepInterpolator1D__java.lang.Double_interpolate<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.StepInterpolator1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.StepInterpolator1D__java.lang.Double_interpolate<java.lang.Object.java.lang.Object>>
	CONSUME 
		java.lang.Object : 2,

		com.opengamma.analytics.math.interpolation.StepInterpolator1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.StepInterpolator1D__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.StepInterpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.StepUpperInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundle<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.StepUpperInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.StepUpperInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundleFromSortedArrays<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.StepUpperInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.StepUpperInterpolator1D__double_firstDerivative<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.StepUpperInterpolator1D : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.StepUpperInterpolator1D__double[]_getNodeSensitivitiesForValue<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.StepUpperInterpolator1D : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.StepUpperInterpolator1D__java.lang.Double_interpolate<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.StepUpperInterpolator1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.StepUpperInterpolator1D__java.lang.Double_interpolate<java.lang.Object.java.lang.Object>>
	CONSUME 
		java.lang.Object : 2,

		com.opengamma.analytics.math.interpolation.StepUpperInterpolator1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.StepUpperInterpolator1D__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.StepUpperInterpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ThinPlateSplineRadialBasisFunction__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.ThinPlateSplineRadialBasisFunction : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ThinPlateSplineRadialBasisFunction__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.ThinPlateSplineRadialBasisFunction : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ThinPlateSplineRadialBasisFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.ThinPlateSplineRadialBasisFunction : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.ThinPlateSplineRadialBasisFunction__void_<init><double>>
	CONSUME 
		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.ThinPlateSplineRadialBasisFunction : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.TimeSquareInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundle<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.TimeSquareInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.TimeSquareInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundleFromSortedArrays<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.TimeSquareInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.TimeSquareInterpolator1D__double_firstDerivative<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.TimeSquareInterpolator1D : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.TimeSquareInterpolator1D__double[]_getNodeSensitivitiesForValue<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.TimeSquareInterpolator1D : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.TimeSquareInterpolator1D__java.lang.Double_interpolate<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.TimeSquareInterpolator1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.TimeSquareInterpolator1D__java.lang.Double_interpolate<java.lang.Object.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.TimeSquareInterpolator1D : 1,

		java.lang.Object : 2;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.TimeSquareInterpolator1D__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.TimeSquareInterpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.TransformedInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundle<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.TransformedInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.TransformedInterpolator1D__com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle_getDataBundleFromSortedArrays<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.interpolation.TransformedInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.TransformedInterpolator1D__double_firstDerivative<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.TransformedInterpolator1D : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.TransformedInterpolator1D__double[]_getNodeSensitivitiesForValue<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.TransformedInterpolator1D : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.TransformedInterpolator1D__java.lang.Double_interpolate<com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.TransformedInterpolator1D : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.TransformedInterpolator1D__java.lang.Double_interpolate<java.lang.Object.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.TransformedInterpolator1D : 1,

		java.lang.Object : 2;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.TransformedInterpolator1D__void_<init><com.opengamma.analytics.math.interpolation.Interpolator1D.com.opengamma.analytics.math.minimization.ParameterLimitsTransform>>
	CONSUME 
		com.opengamma.analytics.math.minimization.ParameterLimitsTransform : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.TransformedInterpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle__com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues_getBoundedValues<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle__double[]_getKeys<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle__double[]_getValues<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle__int_getLowerBoundIndex<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle__int_size<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle__java.lang.Double_firstKey<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle__java.lang.Double_firstValue<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle__java.lang.Double_get<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle__java.lang.Double_getLowerBoundKey<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle__java.lang.Double_higherKey<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle__java.lang.Double_higherValue<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle__java.lang.Double_lastKey<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle__java.lang.Double_lastValue<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle__void_<init><double[].double[]>>
	CONSUME 
		double[] : 2;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle__void_<init><double[].double[].boolean>>
	CONSUME 
		boolean : 1,

		double[] : 2;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle__void_setYValueAtIndex<int.double>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues__int_getLowerBoundIndex<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues__java.lang.Double_getHigherBoundKey<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues__java.lang.Double_getHigherBoundValue<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues__java.lang.Double_getLowerBoundKey<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues__java.lang.Double_getLowerBoundValue<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DCubicSplineDataBundle__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DCubicSplineDataBundle : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DCubicSplineDataBundle__com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues_getBoundedValues<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DCubicSplineDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DCubicSplineDataBundle__double[]_getKeys<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DCubicSplineDataBundle : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DCubicSplineDataBundle__double[]_getSecondDerivatives<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DCubicSplineDataBundle : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DCubicSplineDataBundle__double[]_getValues<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DCubicSplineDataBundle : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DCubicSplineDataBundle__double[][]_getSecondDerivativesSensitivities<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DCubicSplineDataBundle : 1;
	PRODUCE 
		double[][] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DCubicSplineDataBundle__int_getLowerBoundIndex<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DCubicSplineDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DCubicSplineDataBundle__int_size<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DCubicSplineDataBundle : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DCubicSplineDataBundle__java.lang.Double_firstKey<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DCubicSplineDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DCubicSplineDataBundle__java.lang.Double_firstValue<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DCubicSplineDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DCubicSplineDataBundle__java.lang.Double_get<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DCubicSplineDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DCubicSplineDataBundle__java.lang.Double_getLowerBoundKey<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DCubicSplineDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DCubicSplineDataBundle__java.lang.Double_higherKey<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DCubicSplineDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DCubicSplineDataBundle__java.lang.Double_higherValue<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DCubicSplineDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DCubicSplineDataBundle__java.lang.Double_lastKey<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DCubicSplineDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DCubicSplineDataBundle__java.lang.Double_lastValue<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DCubicSplineDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DCubicSplineDataBundle__void_<init><com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DCubicSplineDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DCubicSplineDataBundle__void_<init><com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.double.double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		double : 2;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DCubicSplineDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DCubicSplineDataBundle__void_setYValueAtIndex<int.double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DCubicSplineDataBundle : 1,

		double : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle__com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues_getBoundedValues<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle__double[]_getKeys<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle__double[]_getValues<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle__int_getLowerBoundIndex<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle__int_size<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle__java.lang.Double_firstKey<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle__java.lang.Double_firstValue<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle__java.lang.Double_get<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle__java.lang.Double_getLowerBoundKey<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle__java.lang.Double_higherKey<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle__java.lang.Double_higherValue<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle__java.lang.Double_lastKey<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle__java.lang.Double_lastValue<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle__void_setYValueAtIndex<int.double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		double : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundleBuilderFunction__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundleBuilderFunction : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundleBuilderFunction__java.util.LinkedHashMap_evaluate<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundleBuilderFunction : 1;
	PRODUCE 
		java.util.LinkedHashMap : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundleBuilderFunction__void_<init><java.util.LinkedHashMap.java.util.LinkedHashMap>>
	CONSUME 
		java.util.LinkedHashMap : 2;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundleBuilderFunction : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle__com.opengamma.analytics.math.function.RealPolynomialFunction1D_getQuadratic<int>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle : 1,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.RealPolynomialFunction1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle__com.opengamma.analytics.math.function.RealPolynomialFunction1D_getQuadraticFirstDerivative<int>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle : 1,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.RealPolynomialFunction1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle__com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues_getBoundedValues<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle__double[]_getKeys<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle__double[]_getValues<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle__int_getLowerBoundIndex<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle__int_size<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle__java.lang.Double_firstKey<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle__java.lang.Double_firstValue<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle__java.lang.Double_get<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle__java.lang.Double_getLowerBoundKey<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle__java.lang.Double_higherKey<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle__java.lang.Double_higherValue<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle__java.lang.Double_lastKey<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle__java.lang.Double_lastValue<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle__void_<init><com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle__void_setYValueAtIndex<int.double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle : 1,

		double : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DLogPiecewisePoynomialDataBundle__com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues_getBoundedValues<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DLogPiecewisePoynomialDataBundle : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DLogPiecewisePoynomialDataBundle__double[]_getBreakPointsY<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DLogPiecewisePoynomialDataBundle : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DLogPiecewisePoynomialDataBundle__double[]_getValues<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DLogPiecewisePoynomialDataBundle : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DLogPiecewisePoynomialDataBundle__java.lang.Double_firstValue<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DLogPiecewisePoynomialDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DLogPiecewisePoynomialDataBundle__java.lang.Double_get<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DLogPiecewisePoynomialDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DLogPiecewisePoynomialDataBundle__java.lang.Double_lastValue<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DLogPiecewisePoynomialDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DLogPiecewisePoynomialDataBundle__void_<init><com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DLogPiecewisePoynomialDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DLogPiecewisePoynomialDataBundle__void_<init><com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator.double.double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		double : 2,

		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DLogPiecewisePoynomialDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DMonotonicIncreasingDataBundle__com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues_getBoundedValues<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DMonotonicIncreasingDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DMonotonicIncreasingDataBundle__double_getA<int>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DMonotonicIncreasingDataBundle : 1,

		int : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DMonotonicIncreasingDataBundle__double_getB<int>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DMonotonicIncreasingDataBundle : 1,

		int : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DMonotonicIncreasingDataBundle__double[]_getKeys<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DMonotonicIncreasingDataBundle : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DMonotonicIncreasingDataBundle__double[]_getValues<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DMonotonicIncreasingDataBundle : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DMonotonicIncreasingDataBundle__int_getLowerBoundIndex<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DMonotonicIncreasingDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DMonotonicIncreasingDataBundle__int_size<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DMonotonicIncreasingDataBundle : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DMonotonicIncreasingDataBundle__java.lang.Double_firstKey<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DMonotonicIncreasingDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DMonotonicIncreasingDataBundle__java.lang.Double_firstValue<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DMonotonicIncreasingDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DMonotonicIncreasingDataBundle__java.lang.Double_get<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DMonotonicIncreasingDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DMonotonicIncreasingDataBundle__java.lang.Double_getLowerBoundKey<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DMonotonicIncreasingDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DMonotonicIncreasingDataBundle__java.lang.Double_higherKey<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DMonotonicIncreasingDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DMonotonicIncreasingDataBundle__java.lang.Double_higherValue<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DMonotonicIncreasingDataBundle : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DMonotonicIncreasingDataBundle__java.lang.Double_lastKey<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DMonotonicIncreasingDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DMonotonicIncreasingDataBundle__java.lang.Double_lastValue<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DMonotonicIncreasingDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DMonotonicIncreasingDataBundle__void_<init><com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DMonotonicIncreasingDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DMonotonicIncreasingDataBundle__void_setYValueAtIndex<int.double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DMonotonicIncreasingDataBundle : 1,

		double : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle__boolean_equals<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity_getPiecewisePolynomialResultsWithSensitivity<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle__com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues_getBoundedValues<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle__double[]_getBreakPointsY<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle__double[]_getBreakpointsX<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle__double[]_getKeys<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle__double[]_getValues<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle__int_getLowerBoundIndex<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle__int_size<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle__java.lang.Double_firstKey<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle__java.lang.Double_firstValue<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle__java.lang.Double_get<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle__java.lang.Double_getLowerBoundKey<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle__java.lang.Double_higherKey<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle__java.lang.Double_higherValue<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle__java.lang.Double_lastKey<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle__java.lang.Double_lastValue<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle__void_<init><com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle__void_<init><com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator.double.double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		double : 2,

		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle__void_setYValueAtIndex<int.double>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult_getPiecewisePolynomialResult<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult[]_getPiecewisePolynomialResultDw<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle__com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult[]_getPiecewisePolynomialResultUp<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle__com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues_getBoundedValues<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle__double_getEps<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle__double_getSmall<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle__double[]_getBreakPointsY<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle__double[]_getBreakpointsX<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle__double[]_getKeys<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle__double[]_getValues<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle__int_getLowerBoundIndex<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle__int_size<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle__java.lang.Double_firstKey<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle__java.lang.Double_firstValue<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle__java.lang.Double_get<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle__java.lang.Double_getLowerBoundKey<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle__java.lang.Double_higherKey<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle__java.lang.Double_higherValue<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle__java.lang.Double_lastKey<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle__java.lang.Double_lastValue<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle__void_<init><com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle.com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1,

		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle__void_setYValueAtIndex<int.double>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle__com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues_getBoundedValues<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle__double_getA<int>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle : 1,

		int : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle__double_getB<int>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle : 1,

		int : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle__double[]_getKeys<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle__double[]_getValues<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle__int_getLowerBoundIndex<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle__int_size<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle__java.lang.Double_firstKey<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle__java.lang.Double_firstValue<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle__java.lang.Double_get<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle__java.lang.Double_getLowerBoundKey<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle__java.lang.Double_higherKey<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle__java.lang.Double_higherValue<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle__java.lang.Double_lastKey<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle__java.lang.Double_lastValue<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle__void_<init><com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle__void_setYValueAtIndex<int.double>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator2DDataBundle__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator2DDataBundle : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator2DDataBundle__double[]_getXData<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator2DDataBundle : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator2DDataBundle__double[]_getYData<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator2DDataBundle : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator2DDataBundle__double[]_getZData<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator2DDataBundle : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.Interpolator2DDataBundle__void_<init><double[].double[].double[]>>
	CONSUME 
		double[] : 3;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator2DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle__java.util.List_getData<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle : 1;
	PRODUCE 
		java.util.List : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle__void_<init><java.util.List>>
	CONSUME 
		java.util.List : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.KrigingInterpolatorDataBundle$1__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.data.KrigingInterpolatorDataBundle$1 : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.KrigingInterpolatorDataBundle$1__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.KrigingInterpolatorDataBundle$1 : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.KrigingInterpolatorDataBundle__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.KrigingInterpolatorDataBundle : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.KrigingInterpolatorDataBundle__com.opengamma.analytics.math.function.Function1D_getVariogram<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.KrigingInterpolatorDataBundle : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.Function1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.KrigingInterpolatorDataBundle__double[]_getWeights<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.KrigingInterpolatorDataBundle : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.KrigingInterpolatorDataBundle__void_<init><java.util.List.double>>
	CONSUME 
		java.util.List : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.KrigingInterpolatorDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle__com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues_getBoundedValues<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle__double[]_getKeys<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle__double[]_getValues<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle__int_getLowerBoundIndex<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle__int_size<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle__java.lang.Double_firstKey<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle__java.lang.Double_firstValue<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle__java.lang.Double_get<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle__java.lang.Double_getLowerBoundKey<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle__java.lang.Double_higherKey<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle__java.lang.Double_higherValue<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle__java.lang.Double_lastKey<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle__java.lang.Double_lastValue<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle__void_<init><java.util.NavigableMap>>
	CONSUME 
		java.util.NavigableMap : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle__void_setYValueAtIndex<int.double>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle : 1,

		double : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.RadialBasisFunctionInterpolatorDataBundle__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.RadialBasisFunctionInterpolatorDataBundle : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.RadialBasisFunctionInterpolatorDataBundle__boolean_isNormalized<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.RadialBasisFunctionInterpolatorDataBundle : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.RadialBasisFunctionInterpolatorDataBundle__com.opengamma.analytics.math.function.Function1D_getBasisFunction<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.RadialBasisFunctionInterpolatorDataBundle : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.Function1D : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.RadialBasisFunctionInterpolatorDataBundle__com.opengamma.analytics.math.linearalgebra.DecompositionResult_getDecompositionResult<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.RadialBasisFunctionInterpolatorDataBundle : 1;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.DecompositionResult : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.RadialBasisFunctionInterpolatorDataBundle__double[]_getWeights<>>
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.RadialBasisFunctionInterpolatorDataBundle : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.interpolation.data.RadialBasisFunctionInterpolatorDataBundle__void_<init><java.util.List.com.opengamma.analytics.math.function.Function1D.boolean>>
	CONSUME 
		java.util.List : 1,

		boolean : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.RadialBasisFunctionInterpolatorDataBundle : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionCommons__com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionResult_evaluate<com.opengamma.analytics.math.matrix.DoubleMatrix2D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1,

		com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionCommons : 1;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionResult : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionCommons__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionCommons : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionCommons__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionCommons : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionCommonsResult__com.opengamma.analytics.math.matrix.DoubleMatrix1D_solve<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionCommonsResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionCommonsResult__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getL<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionCommonsResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionCommonsResult__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getLT<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionCommonsResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionCommonsResult__com.opengamma.analytics.math.matrix.DoubleMatrix2D_solve<com.opengamma.analytics.math.matrix.DoubleMatrix2D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1,

		com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionCommonsResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionCommonsResult__double_getDeterminant<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionCommonsResult : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionCommonsResult__double[]_solve<double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionCommonsResult : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionCommonsResult__void_<init><org.apache.commons.math.linear.CholeskyDecomposition>>
	CONSUME 
		org.apache.commons.math.linear.CholeskyDecomposition : 1;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionCommonsResult : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionOpenGamma__com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionResult_evaluate<com.opengamma.analytics.math.matrix.DoubleMatrix2D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1,

		com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionOpenGamma : 1;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionResult : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionOpenGamma__com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionResult_evaluate<com.opengamma.analytics.math.matrix.DoubleMatrix2D.double.double>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1,

		double : 2,

		com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionOpenGamma : 1;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionResult : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionOpenGamma__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionOpenGamma : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionOpenGamma__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionOpenGamma : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionOpenGammaResult__com.opengamma.analytics.math.matrix.DoubleMatrix1D_solve<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionOpenGammaResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionOpenGammaResult__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getL<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionOpenGammaResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionOpenGammaResult__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getLT<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionOpenGammaResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionOpenGammaResult__com.opengamma.analytics.math.matrix.DoubleMatrix2D_solve<com.opengamma.analytics.math.matrix.DoubleMatrix2D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1,

		com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionOpenGammaResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionOpenGammaResult__double_getDeterminant<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionOpenGammaResult : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionOpenGammaResult__double[]_solve<double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionOpenGammaResult : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionOpenGammaResult__void_<init><double[][]>>
	CONSUME 
		double[][] : 1;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionOpenGammaResult : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionResult__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getL<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionResult__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getLT<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionResult__double_getDeterminant<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionResult : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.Decomposition__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.Decomposition : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.DecompositionFactory__com.opengamma.analytics.math.linearalgebra.Decomposition_getDecomposition<java.lang.String>>
	CONSUME 
		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.Decomposition : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.DecompositionFactory__java.lang.String_getDecompositionName<com.opengamma.analytics.math.linearalgebra.Decomposition>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.Decomposition : 1;
	PRODUCE 
		java.lang.String : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.DecompositionResult__com.opengamma.analytics.math.matrix.DoubleMatrix1D_solve<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.linearalgebra.DecompositionResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.DecompositionResult__com.opengamma.analytics.math.matrix.DoubleMatrix2D_solve<com.opengamma.analytics.math.matrix.DoubleMatrix2D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1,

		com.opengamma.analytics.math.linearalgebra.DecompositionResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.DecompositionResult__double[]_solve<double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.linearalgebra.DecompositionResult : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.InverseTridiagonalMatrixCalculator__com.opengamma.analytics.math.matrix.DoubleMatrix2D_evaluate<com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix : 1,

		com.opengamma.analytics.math.linearalgebra.InverseTridiagonalMatrixCalculator : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.InverseTridiagonalMatrixCalculator__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.InverseTridiagonalMatrixCalculator : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.InverseTridiagonalMatrixCalculator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.InverseTridiagonalMatrixCalculator : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.LUDecompositionCommons__com.opengamma.analytics.math.linearalgebra.LUDecompositionResult_evaluate<com.opengamma.analytics.math.matrix.DoubleMatrix2D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1,

		com.opengamma.analytics.math.linearalgebra.LUDecompositionCommons : 1;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.LUDecompositionResult : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.LUDecompositionCommons__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.LUDecompositionCommons : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.LUDecompositionCommons__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.LUDecompositionCommons : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.LUDecompositionCommonsResult__com.opengamma.analytics.math.matrix.DoubleMatrix1D_solve<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.linearalgebra.LUDecompositionCommonsResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.LUDecompositionCommonsResult__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getL<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.LUDecompositionCommonsResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.LUDecompositionCommonsResult__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getP<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.LUDecompositionCommonsResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.LUDecompositionCommonsResult__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getU<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.LUDecompositionCommonsResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.LUDecompositionCommonsResult__com.opengamma.analytics.math.matrix.DoubleMatrix2D_solve<com.opengamma.analytics.math.matrix.DoubleMatrix2D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1,

		com.opengamma.analytics.math.linearalgebra.LUDecompositionCommonsResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.LUDecompositionCommonsResult__double_getDeterminant<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.LUDecompositionCommonsResult : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.LUDecompositionCommonsResult__double[]_solve<double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.linearalgebra.LUDecompositionCommonsResult : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.LUDecompositionCommonsResult__int[]_getPivot<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.LUDecompositionCommonsResult : 1;
	PRODUCE 
		int[] : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.LUDecompositionCommonsResult__void_<init><org.apache.commons.math.linear.LUDecomposition>>
	CONSUME 
		org.apache.commons.math.linear.LUDecomposition : 1;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.LUDecompositionCommonsResult : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.LUDecompositionResult__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getL<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.LUDecompositionResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.LUDecompositionResult__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getP<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.LUDecompositionResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.LUDecompositionResult__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getU<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.LUDecompositionResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.LUDecompositionResult__double_getDeterminant<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.LUDecompositionResult : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.LUDecompositionResult__int[]_getPivot<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.LUDecompositionResult : 1;
	PRODUCE 
		int[] : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.MatrixValidate__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.MatrixValidate : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.MatrixValidate__void_notNaNOrInfinite<com.opengamma.analytics.math.matrix.DoubleMatrix2D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
	PRODUCE 
		void : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.QRDecompositionCommons__com.opengamma.analytics.math.linearalgebra.QRDecompositionResult_evaluate<com.opengamma.analytics.math.matrix.DoubleMatrix2D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1,

		com.opengamma.analytics.math.linearalgebra.QRDecompositionCommons : 1;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.QRDecompositionResult : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.QRDecompositionCommons__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.linearalgebra.QRDecompositionCommons : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.QRDecompositionCommons__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.QRDecompositionCommons : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.QRDecompositionCommonsResult__com.opengamma.analytics.math.matrix.DoubleMatrix1D_solve<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.linearalgebra.QRDecompositionCommonsResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.QRDecompositionCommonsResult__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getH<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.QRDecompositionCommonsResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.QRDecompositionCommonsResult__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getQ<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.QRDecompositionCommonsResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.QRDecompositionCommonsResult__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getQT<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.QRDecompositionCommonsResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.QRDecompositionCommonsResult__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getR<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.QRDecompositionCommonsResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.QRDecompositionCommonsResult__com.opengamma.analytics.math.matrix.DoubleMatrix2D_solve<com.opengamma.analytics.math.matrix.DoubleMatrix2D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1,

		com.opengamma.analytics.math.linearalgebra.QRDecompositionCommonsResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.QRDecompositionCommonsResult__double[]_solve<double[]>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.QRDecompositionCommonsResult : 1,

		double[] : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.QRDecompositionCommonsResult__void_<init><org.apache.commons.math.linear.QRDecomposition>>
	CONSUME 
		org.apache.commons.math.linear.QRDecomposition : 1;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.QRDecompositionCommonsResult : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.QRDecompositionResult__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getH<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.QRDecompositionResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.QRDecompositionResult__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getQ<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.QRDecompositionResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.QRDecompositionResult__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getQT<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.QRDecompositionResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.QRDecompositionResult__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getR<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.QRDecompositionResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.SVDecompositionColt__com.opengamma.analytics.math.linearalgebra.SVDecompositionResult_evaluate<com.opengamma.analytics.math.matrix.DoubleMatrix2D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1,

		com.opengamma.analytics.math.linearalgebra.SVDecompositionColt : 1;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.SVDecompositionResult : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.SVDecompositionColt__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.linearalgebra.SVDecompositionColt : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.SVDecompositionColt__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.SVDecompositionColt : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult__com.opengamma.analytics.math.matrix.DoubleMatrix1D_solve<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getS<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getU<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getUT<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getV<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getVT<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult__com.opengamma.analytics.math.matrix.DoubleMatrix2D_solve<com.opengamma.analytics.math.matrix.DoubleMatrix2D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1,

		com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult__double_getConditionNumber<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult__double_getNorm<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult__double[]_getSingularValues<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult__double[]_solve<double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult__int_getRank<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult__void_<init><cern.colt.matrix.linalg.SingularValueDecomposition>>
	CONSUME 
		cern.colt.matrix.linalg.SingularValueDecomposition : 1;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.SVDecompositionCommons__com.opengamma.analytics.math.linearalgebra.SVDecompositionResult_evaluate<com.opengamma.analytics.math.matrix.DoubleMatrix2D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1,

		com.opengamma.analytics.math.linearalgebra.SVDecompositionCommons : 1;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.SVDecompositionResult : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.SVDecompositionCommons__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.linearalgebra.SVDecompositionCommons : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.SVDecompositionCommons__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.SVDecompositionCommons : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.SVDecompositionCommonsResult__com.opengamma.analytics.math.matrix.DoubleMatrix1D_solve<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.linearalgebra.SVDecompositionCommonsResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.SVDecompositionCommonsResult__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getS<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.SVDecompositionCommonsResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.SVDecompositionCommonsResult__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getU<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.SVDecompositionCommonsResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.SVDecompositionCommonsResult__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getUT<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.SVDecompositionCommonsResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.SVDecompositionCommonsResult__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getV<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.SVDecompositionCommonsResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.SVDecompositionCommonsResult__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getVT<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.SVDecompositionCommonsResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.SVDecompositionCommonsResult__com.opengamma.analytics.math.matrix.DoubleMatrix2D_solve<com.opengamma.analytics.math.matrix.DoubleMatrix2D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1,

		com.opengamma.analytics.math.linearalgebra.SVDecompositionCommonsResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.SVDecompositionCommonsResult__double_getConditionNumber<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.SVDecompositionCommonsResult : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.SVDecompositionCommonsResult__double_getNorm<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.SVDecompositionCommonsResult : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.SVDecompositionCommonsResult__double[]_getSingularValues<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.SVDecompositionCommonsResult : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.SVDecompositionCommonsResult__double[]_solve<double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.linearalgebra.SVDecompositionCommonsResult : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.SVDecompositionCommonsResult__int_getRank<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.SVDecompositionCommonsResult : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.SVDecompositionCommonsResult__void_<init><org.apache.commons.math.linear.SingularValueDecomposition>>
	CONSUME 
		org.apache.commons.math.linear.SingularValueDecomposition : 1;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.SVDecompositionCommonsResult : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.SVDecompositionResult__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getS<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.SVDecompositionResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.SVDecompositionResult__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getU<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.SVDecompositionResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.SVDecompositionResult__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getUT<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.SVDecompositionResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.SVDecompositionResult__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getV<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.SVDecompositionResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.SVDecompositionResult__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getVT<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.SVDecompositionResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.SVDecompositionResult__double_getConditionNumber<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.SVDecompositionResult : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.SVDecompositionResult__double_getNorm<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.SVDecompositionResult : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.SVDecompositionResult__double[]_getSingularValues<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.SVDecompositionResult : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.SVDecompositionResult__int_getRank<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.SVDecompositionResult : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix__com.opengamma.analytics.math.matrix.DoubleMatrix2D_toDoubleMatrix2D<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix__double[]_getDiagonal<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix__double[]_getDiagonalData<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix__double[]_getLowerSubDiagonal<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix__double[]_getLowerSubDiagonalData<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix__double[]_getUpperSubDiagonal<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix__double[]_getUpperSubDiagonalData<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix__int_getNumberOfElements<>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix__java.lang.Double_getEntry<int[]>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix : 1,

		int[] : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix__java.lang.Object_getEntry<int[]>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix : 1,

		int[] : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix__void_<init><double[].double[].double[]>>
	CONSUME 
		double[] : 3;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.TridiagonalSolver__com.opengamma.analytics.math.matrix.DoubleMatrix1D_solvTriDag<com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix.com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix : 1,

		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.TridiagonalSolver__double[]_solvTriDag<com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix.double[]>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix : 1,

		double[] : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.linearalgebra.TridiagonalSolver__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.TridiagonalSolver : 1;
TRANSITION <com.opengamma.analytics.math.matrix.ColtMatrixAlgebra__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getInverse<com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.Matrix : 1,

		com.opengamma.analytics.math.matrix.ColtMatrixAlgebra : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.matrix.ColtMatrixAlgebra__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getOuterProduct<com.opengamma.analytics.math.matrix.Matrix.com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.Matrix : 2,

		com.opengamma.analytics.math.matrix.ColtMatrixAlgebra : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.matrix.ColtMatrixAlgebra__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getPower<com.opengamma.analytics.math.matrix.Matrix.double>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.matrix.Matrix : 1,

		com.opengamma.analytics.math.matrix.ColtMatrixAlgebra : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.matrix.ColtMatrixAlgebra__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getPower<com.opengamma.analytics.math.matrix.Matrix.int>>
	CONSUME 
		com.opengamma.analytics.math.matrix.Matrix : 1,

		int : 1,

		com.opengamma.analytics.math.matrix.ColtMatrixAlgebra : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.matrix.ColtMatrixAlgebra__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getTranspose<com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.Matrix : 1,

		com.opengamma.analytics.math.matrix.ColtMatrixAlgebra : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.matrix.ColtMatrixAlgebra__com.opengamma.analytics.math.matrix.Matrix_multiply<com.opengamma.analytics.math.matrix.Matrix.com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.Matrix : 2,

		com.opengamma.analytics.math.matrix.ColtMatrixAlgebra : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.Matrix : 1;
TRANSITION <com.opengamma.analytics.math.matrix.ColtMatrixAlgebra__double_getCondition<com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.Matrix : 1,

		com.opengamma.analytics.math.matrix.ColtMatrixAlgebra : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.matrix.ColtMatrixAlgebra__double_getDeterminant<com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.Matrix : 1,

		com.opengamma.analytics.math.matrix.ColtMatrixAlgebra : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.matrix.ColtMatrixAlgebra__double_getInnerProduct<com.opengamma.analytics.math.matrix.Matrix.com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.Matrix : 2,

		com.opengamma.analytics.math.matrix.ColtMatrixAlgebra : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.matrix.ColtMatrixAlgebra__double_getNorm1<com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.Matrix : 1,

		com.opengamma.analytics.math.matrix.ColtMatrixAlgebra : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.matrix.ColtMatrixAlgebra__double_getNorm2<com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.Matrix : 1,

		com.opengamma.analytics.math.matrix.ColtMatrixAlgebra : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.matrix.ColtMatrixAlgebra__double_getNormInfinity<com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.Matrix : 1,

		com.opengamma.analytics.math.matrix.ColtMatrixAlgebra : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.matrix.ColtMatrixAlgebra__double_getTrace<com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.Matrix : 1,

		com.opengamma.analytics.math.matrix.ColtMatrixAlgebra : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.matrix.ColtMatrixAlgebra__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.ColtMatrixAlgebra : 1;
TRANSITION <com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getInverse<com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra : 1,

		com.opengamma.analytics.math.matrix.Matrix : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getOuterProduct<com.opengamma.analytics.math.matrix.Matrix.com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra : 1,

		com.opengamma.analytics.math.matrix.Matrix : 2;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getPower<com.opengamma.analytics.math.matrix.Matrix.double>>
	CONSUME 
		com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra : 1,

		double : 1,

		com.opengamma.analytics.math.matrix.Matrix : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getPower<com.opengamma.analytics.math.matrix.Matrix.int>>
	CONSUME 
		com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra : 1,

		com.opengamma.analytics.math.matrix.Matrix : 1,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getTranspose<com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra : 1,

		com.opengamma.analytics.math.matrix.Matrix : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra__com.opengamma.analytics.math.matrix.Matrix_multiply<com.opengamma.analytics.math.matrix.Matrix.com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra : 1,

		com.opengamma.analytics.math.matrix.Matrix : 2;
	PRODUCE 
		com.opengamma.analytics.math.matrix.Matrix : 1;
TRANSITION <com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra__double_getCondition<com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra : 1,

		com.opengamma.analytics.math.matrix.Matrix : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra__double_getDeterminant<com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra : 1,

		com.opengamma.analytics.math.matrix.Matrix : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra__double_getInnerProduct<com.opengamma.analytics.math.matrix.Matrix.com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra : 1,

		com.opengamma.analytics.math.matrix.Matrix : 2;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra__double_getNorm1<com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra : 1,

		com.opengamma.analytics.math.matrix.Matrix : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra__double_getNorm2<com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra : 1,

		com.opengamma.analytics.math.matrix.Matrix : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra__double_getNormInfinity<com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra : 1,

		com.opengamma.analytics.math.matrix.Matrix : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra__double_getTrace<com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra : 1,

		com.opengamma.analytics.math.matrix.Matrix : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra : 1;
TRANSITION <com.opengamma.analytics.math.matrix.DoubleMatrix1D__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.matrix.DoubleMatrix1D__double[]_getData<>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.matrix.DoubleMatrix1D__double[]_toArray<>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.matrix.DoubleMatrix1D__int_getNumberOfElements<>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.matrix.DoubleMatrix1D__java.lang.Double_getEntry<int[]>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		int[] : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.matrix.DoubleMatrix1D__java.lang.Object_getEntry<int[]>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		int[] : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.matrix.DoubleMatrix1D__void_<init><double[]>>
	CONSUME 
		double[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.matrix.DoubleMatrix1D__void_<init><int>>
	CONSUME 
		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.matrix.DoubleMatrix1D__void_<init><int.double>>
	CONSUME 
		double : 1,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.matrix.DoubleMatrix1D__void_<init><java.lang.Double[]>>
	CONSUME 
		java.lang.Double[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.matrix.DoubleMatrix2D__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.matrix.DoubleMatrix2D__com.opengamma.analytics.math.matrix.DoubleMatrix1D_getColumnVector<int>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.matrix.DoubleMatrix2D__com.opengamma.analytics.math.matrix.DoubleMatrix1D_getRowVector<int>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.matrix.DoubleMatrix2D__com.opengamma.analytics.math.matrix.DoubleMatrix2D_noCopy<double[][]>>
	CONSUME 
		double[][] : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.matrix.DoubleMatrix2D__double[][]_getData<>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
	PRODUCE 
		double[][] : 1;
TRANSITION <com.opengamma.analytics.math.matrix.DoubleMatrix2D__double[][]_toArray<>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
	PRODUCE 
		double[][] : 1;
TRANSITION <com.opengamma.analytics.math.matrix.DoubleMatrix2D__int_getNumberOfColumns<>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.matrix.DoubleMatrix2D__int_getNumberOfElements<>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.matrix.DoubleMatrix2D__int_getNumberOfRows<>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.matrix.DoubleMatrix2D__java.lang.Double_getEntry<int[]>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1,

		int[] : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.matrix.DoubleMatrix2D__java.lang.Object_getEntry<int[]>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1,

		int[] : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.matrix.DoubleMatrix2D__void_<init><double[][]>>
	CONSUME 
		double[][] : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.matrix.DoubleMatrix2D__void_<init><int.int>>
	CONSUME 
		int : 2;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.matrix.DoubleMatrix2D__void_<init><java.lang.Double[][]>>
	CONSUME 
		java.lang.Double[][] : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.matrix.DoubleMatrixUtils__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getIdentityMatrix2D<int>>
	CONSUME 
		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.matrix.DoubleMatrixUtils__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getTranspose<com.opengamma.analytics.math.matrix.DoubleMatrix2D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.matrix.DoubleMatrixUtils__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getTwoDimensionalDiagonalMatrix<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.matrix.DoubleMatrixUtils__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getTwoDimensionalDiagonalMatrix<double[]>>
	CONSUME 
		double[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.matrix.IdentityMatrix__int_getNumberOfElements<>>
	CONSUME 
		com.opengamma.analytics.math.matrix.IdentityMatrix : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.matrix.IdentityMatrix__int_getSize<>>
	CONSUME 
		com.opengamma.analytics.math.matrix.IdentityMatrix : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.matrix.IdentityMatrix__java.lang.Double_getEntry<int[]>>
	CONSUME 
		com.opengamma.analytics.math.matrix.IdentityMatrix : 1,

		int[] : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.matrix.IdentityMatrix__java.lang.Object_getEntry<int[]>>
	CONSUME 
		com.opengamma.analytics.math.matrix.IdentityMatrix : 1,

		int[] : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.matrix.IdentityMatrix__void_<init><int>>
	CONSUME 
		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.IdentityMatrix : 1;
TRANSITION <com.opengamma.analytics.math.matrix.Matrix__int_getNumberOfElements<>>
	CONSUME 
		com.opengamma.analytics.math.matrix.Matrix : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.matrix.Matrix__java.lang.Object_getEntry<int[]>>
	CONSUME 
		int[] : 1,

		com.opengamma.analytics.math.matrix.Matrix : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.matrix.MatrixAlgebra__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getInverse<com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.MatrixAlgebra : 1,

		com.opengamma.analytics.math.matrix.Matrix : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.matrix.MatrixAlgebra__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getOuterProduct<com.opengamma.analytics.math.matrix.Matrix.com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.MatrixAlgebra : 1,

		com.opengamma.analytics.math.matrix.Matrix : 2;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.matrix.MatrixAlgebra__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getPower<com.opengamma.analytics.math.matrix.Matrix.double>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.matrix.MatrixAlgebra : 1,

		com.opengamma.analytics.math.matrix.Matrix : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.matrix.MatrixAlgebra__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getPower<com.opengamma.analytics.math.matrix.Matrix.int>>
	CONSUME 
		com.opengamma.analytics.math.matrix.MatrixAlgebra : 1,

		com.opengamma.analytics.math.matrix.Matrix : 1,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.matrix.MatrixAlgebra__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getTranspose<com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.MatrixAlgebra : 1,

		com.opengamma.analytics.math.matrix.Matrix : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.matrix.MatrixAlgebra__com.opengamma.analytics.math.matrix.DoubleMatrix2D_matrixTransposeMultiplyMatrix<com.opengamma.analytics.math.matrix.DoubleMatrix2D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1,

		com.opengamma.analytics.math.matrix.MatrixAlgebra : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.matrix.MatrixAlgebra__com.opengamma.analytics.math.matrix.Matrix_add<com.opengamma.analytics.math.matrix.Matrix.com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.MatrixAlgebra : 1,

		com.opengamma.analytics.math.matrix.Matrix : 2;
	PRODUCE 
		com.opengamma.analytics.math.matrix.Matrix : 1;
TRANSITION <com.opengamma.analytics.math.matrix.MatrixAlgebra__com.opengamma.analytics.math.matrix.Matrix_divide<com.opengamma.analytics.math.matrix.Matrix.com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.MatrixAlgebra : 1,

		com.opengamma.analytics.math.matrix.Matrix : 2;
	PRODUCE 
		com.opengamma.analytics.math.matrix.Matrix : 1;
TRANSITION <com.opengamma.analytics.math.matrix.MatrixAlgebra__com.opengamma.analytics.math.matrix.Matrix_kroneckerProduct<com.opengamma.analytics.math.matrix.Matrix.com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.MatrixAlgebra : 1,

		com.opengamma.analytics.math.matrix.Matrix : 2;
	PRODUCE 
		com.opengamma.analytics.math.matrix.Matrix : 1;
TRANSITION <com.opengamma.analytics.math.matrix.MatrixAlgebra__com.opengamma.analytics.math.matrix.Matrix_multiply<com.opengamma.analytics.math.matrix.Matrix.com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.MatrixAlgebra : 1,

		com.opengamma.analytics.math.matrix.Matrix : 2;
	PRODUCE 
		com.opengamma.analytics.math.matrix.Matrix : 1;
TRANSITION <com.opengamma.analytics.math.matrix.MatrixAlgebra__com.opengamma.analytics.math.matrix.Matrix_scale<com.opengamma.analytics.math.matrix.Matrix.double>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.matrix.MatrixAlgebra : 1,

		com.opengamma.analytics.math.matrix.Matrix : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.Matrix : 1;
TRANSITION <com.opengamma.analytics.math.matrix.MatrixAlgebra__com.opengamma.analytics.math.matrix.Matrix_subtract<com.opengamma.analytics.math.matrix.Matrix.com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.MatrixAlgebra : 1,

		com.opengamma.analytics.math.matrix.Matrix : 2;
	PRODUCE 
		com.opengamma.analytics.math.matrix.Matrix : 1;
TRANSITION <com.opengamma.analytics.math.matrix.MatrixAlgebra__double_getCondition<com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.MatrixAlgebra : 1,

		com.opengamma.analytics.math.matrix.Matrix : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.matrix.MatrixAlgebra__double_getDeterminant<com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.MatrixAlgebra : 1,

		com.opengamma.analytics.math.matrix.Matrix : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.matrix.MatrixAlgebra__double_getInnerProduct<com.opengamma.analytics.math.matrix.Matrix.com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.MatrixAlgebra : 1,

		com.opengamma.analytics.math.matrix.Matrix : 2;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.matrix.MatrixAlgebra__double_getNorm1<com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.MatrixAlgebra : 1,

		com.opengamma.analytics.math.matrix.Matrix : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.matrix.MatrixAlgebra__double_getNorm2<com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.MatrixAlgebra : 1,

		com.opengamma.analytics.math.matrix.Matrix : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.matrix.MatrixAlgebra__double_getNormInfinity<com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.MatrixAlgebra : 1,

		com.opengamma.analytics.math.matrix.Matrix : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.matrix.MatrixAlgebra__double_getTrace<com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.MatrixAlgebra : 1,

		com.opengamma.analytics.math.matrix.Matrix : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.matrix.MatrixAlgebra__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.MatrixAlgebra : 1;
TRANSITION <com.opengamma.analytics.math.matrix.MatrixAlgebraFactory__com.opengamma.analytics.math.matrix.MatrixAlgebra_getMatrixAlgebra<java.lang.String>>
	CONSUME 
		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.MatrixAlgebra : 1;
TRANSITION <com.opengamma.analytics.math.matrix.MatrixAlgebraFactory__java.lang.String_getMatrixAlgebraName<com.opengamma.analytics.math.matrix.MatrixAlgebra>>
	CONSUME 
		com.opengamma.analytics.math.matrix.MatrixAlgebra : 1;
	PRODUCE 
		java.lang.String : 1;
TRANSITION <com.opengamma.analytics.math.matrix.OGMatrixAlgebra__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getInverse<com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.OGMatrixAlgebra : 1,

		com.opengamma.analytics.math.matrix.Matrix : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.matrix.OGMatrixAlgebra__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getOuterProduct<com.opengamma.analytics.math.matrix.Matrix.com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.OGMatrixAlgebra : 1,

		com.opengamma.analytics.math.matrix.Matrix : 2;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.matrix.OGMatrixAlgebra__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getPower<com.opengamma.analytics.math.matrix.Matrix.double>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.matrix.OGMatrixAlgebra : 1,

		com.opengamma.analytics.math.matrix.Matrix : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.matrix.OGMatrixAlgebra__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getPower<com.opengamma.analytics.math.matrix.Matrix.int>>
	CONSUME 
		com.opengamma.analytics.math.matrix.OGMatrixAlgebra : 1,

		com.opengamma.analytics.math.matrix.Matrix : 1,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.matrix.OGMatrixAlgebra__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getTranspose<com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.OGMatrixAlgebra : 1,

		com.opengamma.analytics.math.matrix.Matrix : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.matrix.OGMatrixAlgebra__com.opengamma.analytics.math.matrix.Matrix_multiply<com.opengamma.analytics.math.matrix.Matrix.com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.OGMatrixAlgebra : 1,

		com.opengamma.analytics.math.matrix.Matrix : 2;
	PRODUCE 
		com.opengamma.analytics.math.matrix.Matrix : 1;
TRANSITION <com.opengamma.analytics.math.matrix.OGMatrixAlgebra__double_getCondition<com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.OGMatrixAlgebra : 1,

		com.opengamma.analytics.math.matrix.Matrix : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.matrix.OGMatrixAlgebra__double_getDeterminant<com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.OGMatrixAlgebra : 1,

		com.opengamma.analytics.math.matrix.Matrix : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.matrix.OGMatrixAlgebra__double_getInnerProduct<com.opengamma.analytics.math.matrix.Matrix.com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.OGMatrixAlgebra : 1,

		com.opengamma.analytics.math.matrix.Matrix : 2;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.matrix.OGMatrixAlgebra__double_getNorm1<com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.OGMatrixAlgebra : 1,

		com.opengamma.analytics.math.matrix.Matrix : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.matrix.OGMatrixAlgebra__double_getNorm2<com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.OGMatrixAlgebra : 1,

		com.opengamma.analytics.math.matrix.Matrix : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.matrix.OGMatrixAlgebra__double_getNormInfinity<com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.OGMatrixAlgebra : 1,

		com.opengamma.analytics.math.matrix.Matrix : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.matrix.OGMatrixAlgebra__double_getTrace<com.opengamma.analytics.math.matrix.Matrix>>
	CONSUME 
		com.opengamma.analytics.math.matrix.OGMatrixAlgebra : 1,

		com.opengamma.analytics.math.matrix.Matrix : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.matrix.OGMatrixAlgebra__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.OGMatrixAlgebra : 1;
TRANSITION <com.opengamma.analytics.math.minimization.BrentMinimizer1D__double_minimize<com.opengamma.analytics.math.function.Function1D.double.double.double>>
	CONSUME 
		double : 3,

		com.opengamma.analytics.math.minimization.BrentMinimizer1D : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.minimization.BrentMinimizer1D__java.lang.Double_minimize<com.opengamma.analytics.math.function.Function1D.java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.minimization.BrentMinimizer1D : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.minimization.BrentMinimizer1D__java.lang.Object_minimize<com.opengamma.analytics.math.function.Function1D.java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.minimization.BrentMinimizer1D : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.minimization.BrentMinimizer1D__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.BrentMinimizer1D : 1;
TRANSITION <com.opengamma.analytics.math.minimization.BroydenFletcherGoldfarbShannoInverseHessianUpdate__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.BroydenFletcherGoldfarbShannoInverseHessianUpdate : 1;
TRANSITION <com.opengamma.analytics.math.minimization.BroydenFletcherGoldfarbShannoInverseHessianUpdate__void_update<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle>>
	CONSUME 
		com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle : 1,

		com.opengamma.analytics.math.minimization.BroydenFletcherGoldfarbShannoInverseHessianUpdate : 1;
	PRODUCE 
		void : 1;
TRANSITION <com.opengamma.analytics.math.minimization.ConjugateDirectionVectorMinimizer__com.opengamma.analytics.math.matrix.DoubleMatrix1D_minimize<com.opengamma.analytics.math.function.Function1D.com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.minimization.ConjugateDirectionVectorMinimizer : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.minimization.ConjugateDirectionVectorMinimizer__java.lang.Object_minimize<com.opengamma.analytics.math.function.Function1D.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.minimization.ConjugateDirectionVectorMinimizer : 1,

		java.lang.Object : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.minimization.ConjugateDirectionVectorMinimizer__void_<init><com.opengamma.analytics.math.minimization.ScalarMinimizer>>
	CONSUME 
		com.opengamma.analytics.math.minimization.ScalarMinimizer : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.ConjugateDirectionVectorMinimizer : 1;
TRANSITION <com.opengamma.analytics.math.minimization.ConjugateDirectionVectorMinimizer__void_<init><com.opengamma.analytics.math.minimization.ScalarMinimizer.double.int>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.minimization.ScalarMinimizer : 1,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.ConjugateDirectionVectorMinimizer : 1;
TRANSITION <com.opengamma.analytics.math.minimization.ConjugateGradientVectorMinimizer__com.opengamma.analytics.math.matrix.DoubleMatrix1D_minimize<com.opengamma.analytics.math.function.Function1D.com.opengamma.analytics.math.function.Function1D.com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.minimization.ConjugateGradientVectorMinimizer : 1,

		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.function.Function1D : 2;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.minimization.ConjugateGradientVectorMinimizer__com.opengamma.analytics.math.matrix.DoubleMatrix1D_minimize<com.opengamma.analytics.math.function.Function1D.com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.minimization.ConjugateGradientVectorMinimizer : 1,

		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.minimization.ConjugateGradientVectorMinimizer__java.lang.Object_minimize<com.opengamma.analytics.math.function.Function1D.com.opengamma.analytics.math.function.Function1D.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.minimization.ConjugateGradientVectorMinimizer : 1,

		java.lang.Object : 1,

		com.opengamma.analytics.math.function.Function1D : 2;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.minimization.ConjugateGradientVectorMinimizer__java.lang.Object_minimize<com.opengamma.analytics.math.function.Function1D.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.minimization.ConjugateGradientVectorMinimizer : 1,

		java.lang.Object : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.minimization.ConjugateGradientVectorMinimizer__void_<init><com.opengamma.analytics.math.minimization.ScalarMinimizer>>
	CONSUME 
		com.opengamma.analytics.math.minimization.ScalarMinimizer : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.ConjugateGradientVectorMinimizer : 1;
TRANSITION <com.opengamma.analytics.math.minimization.ConjugateGradientVectorMinimizer__void_<init><com.opengamma.analytics.math.minimization.ScalarMinimizer.double.double.int>>
	CONSUME 
		double : 2,

		com.opengamma.analytics.math.minimization.ScalarMinimizer : 1,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.ConjugateGradientVectorMinimizer : 1;
TRANSITION <com.opengamma.analytics.math.minimization.ConjugateGradientVectorMinimizer__void_<init><com.opengamma.analytics.math.minimization.ScalarMinimizer.double.int>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.minimization.ScalarMinimizer : 1,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.ConjugateGradientVectorMinimizer : 1;
TRANSITION <com.opengamma.analytics.math.minimization.DavidonFletcherPowellInverseHessianUpdate__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.DavidonFletcherPowellInverseHessianUpdate : 1;
TRANSITION <com.opengamma.analytics.math.minimization.DavidonFletcherPowellInverseHessianUpdate__void_update<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle>>
	CONSUME 
		com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle : 1,

		com.opengamma.analytics.math.minimization.DavidonFletcherPowellInverseHessianUpdate : 1;
	PRODUCE 
		void : 1;
TRANSITION <com.opengamma.analytics.math.minimization.DoubleRangeLimitTransform__boolean_equals<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.minimization.DoubleRangeLimitTransform : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.minimization.DoubleRangeLimitTransform__double_inverseTransform<double>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.minimization.DoubleRangeLimitTransform : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.minimization.DoubleRangeLimitTransform__double_inverseTransformGradient<double>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.minimization.DoubleRangeLimitTransform : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.minimization.DoubleRangeLimitTransform__double_transform<double>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.minimization.DoubleRangeLimitTransform : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.minimization.DoubleRangeLimitTransform__double_transformGradient<double>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.minimization.DoubleRangeLimitTransform : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.minimization.DoubleRangeLimitTransform__void_<init><double.double>>
	CONSUME 
		double : 2;
	PRODUCE 
		com.opengamma.analytics.math.minimization.DoubleRangeLimitTransform : 1;
TRANSITION <com.opengamma.analytics.math.minimization.GoldenSectionMinimizer1D__double_minimize<com.opengamma.analytics.math.function.Function1D.double.double>>
	CONSUME 
		double : 2,

		com.opengamma.analytics.math.minimization.GoldenSectionMinimizer1D : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.minimization.GoldenSectionMinimizer1D__double_minimize<com.opengamma.analytics.math.function.Function1D.double.double.double>>
	CONSUME 
		double : 3,

		com.opengamma.analytics.math.minimization.GoldenSectionMinimizer1D : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.minimization.GoldenSectionMinimizer1D__java.lang.Double_minimize<com.opengamma.analytics.math.function.Function1D.java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.minimization.GoldenSectionMinimizer1D : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.minimization.GoldenSectionMinimizer1D__java.lang.Object_minimize<com.opengamma.analytics.math.function.Function1D.java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.minimization.GoldenSectionMinimizer1D : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.minimization.GoldenSectionMinimizer1D__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.GoldenSectionMinimizer1D : 1;
TRANSITION <com.opengamma.analytics.math.minimization.LineSearch$LineSearchFunction__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.minimization.LineSearch$LineSearchFunction : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.minimization.LineSearch$LineSearchFunction__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.minimization.LineSearch$LineSearchFunction : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.minimization.LineSearch$LineSearchFunction__void_<init><com.opengamma.analytics.math.function.Function1D.com.opengamma.analytics.math.matrix.DoubleMatrix1D.com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 2,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.LineSearch$LineSearchFunction : 1;
TRANSITION <com.opengamma.analytics.math.minimization.LineSearch__double_minimise<com.opengamma.analytics.math.function.Function1D.com.opengamma.analytics.math.matrix.DoubleMatrix1D.com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 2,

		com.opengamma.analytics.math.minimization.LineSearch : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.minimization.LineSearch__void_<init><com.opengamma.analytics.math.minimization.ScalarMinimizer>>
	CONSUME 
		com.opengamma.analytics.math.minimization.ScalarMinimizer : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.LineSearch : 1;
TRANSITION <com.opengamma.analytics.math.minimization.Minimizer__java.lang.Object_minimize<com.opengamma.analytics.math.function.Function1D.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.minimization.Minimizer : 1,

		java.lang.Object : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.minimization.MinimizerWithGradient__java.lang.Object_minimize<com.opengamma.analytics.math.function.Function1D.com.opengamma.analytics.math.function.Function1D.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.minimization.MinimizerWithGradient : 1,

		java.lang.Object : 1,

		com.opengamma.analytics.math.function.Function1D : 2;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.minimization.MinimumBracketer__double[]_getBracketedPoints<com.opengamma.analytics.math.function.Function1D.double.double>>
	CONSUME 
		double : 2,

		com.opengamma.analytics.math.minimization.MinimumBracketer : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.minimization.MinimumBracketer__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.MinimumBracketer : 1;
TRANSITION <com.opengamma.analytics.math.minimization.MultiDirectionalSimplexMinimizer__com.opengamma.analytics.math.matrix.DoubleMatrix1D_minimize<com.opengamma.analytics.math.function.Function1D.com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.minimization.MultiDirectionalSimplexMinimizer : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.minimization.MultiDirectionalSimplexMinimizer__java.lang.Object_minimize<com.opengamma.analytics.math.function.Function1D.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.minimization.MultiDirectionalSimplexMinimizer : 1,

		java.lang.Object : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.minimization.MultiDirectionalSimplexMinimizer__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.MultiDirectionalSimplexMinimizer : 1;
TRANSITION <com.opengamma.analytics.math.minimization.NelderMeadDownhillSimplexMinimizer__com.opengamma.analytics.math.matrix.DoubleMatrix1D_minimize<com.opengamma.analytics.math.function.Function1D.com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.minimization.NelderMeadDownhillSimplexMinimizer : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.minimization.NelderMeadDownhillSimplexMinimizer__java.lang.Object_minimize<com.opengamma.analytics.math.function.Function1D.java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.minimization.NelderMeadDownhillSimplexMinimizer : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.minimization.NelderMeadDownhillSimplexMinimizer__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.NelderMeadDownhillSimplexMinimizer : 1;
TRANSITION <com.opengamma.analytics.math.minimization.NonLinearParameterTransforms__com.opengamma.analytics.math.matrix.DoubleMatrix1D_inverseTransform<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.minimization.NonLinearParameterTransforms : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.minimization.NonLinearParameterTransforms__com.opengamma.analytics.math.matrix.DoubleMatrix1D_transform<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.minimization.NonLinearParameterTransforms : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.minimization.NonLinearParameterTransforms__com.opengamma.analytics.math.matrix.DoubleMatrix2D_inverseJacobian<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.minimization.NonLinearParameterTransforms : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.minimization.NonLinearParameterTransforms__com.opengamma.analytics.math.matrix.DoubleMatrix2D_jacobian<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.minimization.NonLinearParameterTransforms : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.minimization.NonLinearParameterTransforms__int_getNumberOfFittingParameters<>>
	CONSUME 
		com.opengamma.analytics.math.minimization.NonLinearParameterTransforms : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.minimization.NonLinearParameterTransforms__int_getNumberOfModelParameters<>>
	CONSUME 
		com.opengamma.analytics.math.minimization.NonLinearParameterTransforms : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.minimization.NonLinearTransformFunction$1__com.opengamma.analytics.math.matrix.DoubleMatrix1D_evaluate<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.minimization.NonLinearTransformFunction$1 : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.minimization.NonLinearTransformFunction$1__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.minimization.NonLinearTransformFunction$1 : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.minimization.NonLinearTransformFunction$2__com.opengamma.analytics.math.matrix.DoubleMatrix2D_evaluate<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.minimization.NonLinearTransformFunction$2 : 1,

		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.minimization.NonLinearTransformFunction$2__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.minimization.NonLinearTransformFunction$2 : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.minimization.NonLinearTransformFunction__com.opengamma.analytics.math.function.Function1D_getFittingFunction<>>
	CONSUME 
		com.opengamma.analytics.math.minimization.NonLinearTransformFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.Function1D : 1;
TRANSITION <com.opengamma.analytics.math.minimization.NonLinearTransformFunction__com.opengamma.analytics.math.function.Function1D_getFittingJacobian<>>
	CONSUME 
		com.opengamma.analytics.math.minimization.NonLinearTransformFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.Function1D : 1;
TRANSITION <com.opengamma.analytics.math.minimization.NonLinearTransformFunction__void_<init><com.opengamma.analytics.math.function.Function1D.com.opengamma.analytics.math.function.Function1D.com.opengamma.analytics.math.minimization.NonLinearParameterTransforms>>
	CONSUME 
		com.opengamma.analytics.math.minimization.NonLinearParameterTransforms : 1,

		com.opengamma.analytics.math.function.Function1D : 2;
	PRODUCE 
		com.opengamma.analytics.math.minimization.NonLinearTransformFunction : 1;
TRANSITION <com.opengamma.analytics.math.minimization.NullTransform__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.minimization.NullTransform : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.minimization.NullTransform__double_inverseTransform<double>>
	CONSUME 
		com.opengamma.analytics.math.minimization.NullTransform : 1,

		double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.minimization.NullTransform__double_inverseTransformGradient<double>>
	CONSUME 
		com.opengamma.analytics.math.minimization.NullTransform : 1,

		double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.minimization.NullTransform__double_transform<double>>
	CONSUME 
		com.opengamma.analytics.math.minimization.NullTransform : 1,

		double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.minimization.NullTransform__double_transformGradient<double>>
	CONSUME 
		com.opengamma.analytics.math.minimization.NullTransform : 1,

		double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.minimization.NullTransform__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.NullTransform : 1;
TRANSITION <com.opengamma.analytics.math.minimization.ParabolicMinimumBracketer__double[]_getBracketedPoints<com.opengamma.analytics.math.function.Function1D.double.double>>
	CONSUME 
		double : 2,

		com.opengamma.analytics.math.minimization.ParabolicMinimumBracketer : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.minimization.ParabolicMinimumBracketer__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.ParabolicMinimumBracketer : 1;
TRANSITION <com.opengamma.analytics.math.minimization.ParameterLimitsTransform$LimitType__com.opengamma.analytics.math.minimization.ParameterLimitsTransform$LimitType_valueOf<java.lang.String>>
	CONSUME 
		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.ParameterLimitsTransform$LimitType : 1;
TRANSITION <com.opengamma.analytics.math.minimization.ParameterLimitsTransform$LimitType__com.opengamma.analytics.math.minimization.ParameterLimitsTransform$LimitType[]_values<>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.ParameterLimitsTransform$LimitType[] : 1;
TRANSITION <com.opengamma.analytics.math.minimization.ParameterLimitsTransform__double_inverseTransform<double>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.minimization.ParameterLimitsTransform : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.minimization.ParameterLimitsTransform__double_inverseTransformGradient<double>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.minimization.ParameterLimitsTransform : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.minimization.ParameterLimitsTransform__double_transform<double>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.minimization.ParameterLimitsTransform : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.minimization.ParameterLimitsTransform__double_transformGradient<double>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.minimization.ParameterLimitsTransform : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.minimization.PositiveOrZero__java.lang.Boolean_evaluate<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.minimization.PositiveOrZero : 1;
	PRODUCE 
		java.lang.Boolean : 1;
TRANSITION <com.opengamma.analytics.math.minimization.PositiveOrZero__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.minimization.PositiveOrZero : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.minimization.PositiveOrZero__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.PositiveOrZero : 1;
TRANSITION <com.opengamma.analytics.math.minimization.QuasiNewtonInverseHessianUpdate__void_update<com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle>>
	CONSUME 
		com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle : 1,

		com.opengamma.analytics.math.minimization.QuasiNewtonInverseHessianUpdate : 1;
	PRODUCE 
		void : 1;
TRANSITION <com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle__com.opengamma.analytics.math.matrix.DoubleMatrix1D_getDeltaGrad<>>
	CONSUME 
		com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle__com.opengamma.analytics.math.matrix.DoubleMatrix1D_getDeltaX<>>
	CONSUME 
		com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle__com.opengamma.analytics.math.matrix.DoubleMatrix1D_getGrad<>>
	CONSUME 
		com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle__com.opengamma.analytics.math.matrix.DoubleMatrix1D_getX<>>
	CONSUME 
		com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getInverseHessianEsimate<>>
	CONSUME 
		com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle__double_getG0<>>
	CONSUME 
		com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle__double_getG1<>>
	CONSUME 
		com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle__double_getG2<>>
	CONSUME 
		com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle__double_getLambda0<>>
	CONSUME 
		com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle__double_getLambda1<>>
	CONSUME 
		com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle : 1;
TRANSITION <com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle__void_setDeltaGrad<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle : 1,

		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
	PRODUCE 
		void : 1;
TRANSITION <com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle__void_setDeltaX<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle : 1,

		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
	PRODUCE 
		void : 1;
TRANSITION <com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle__void_setG0<double>>
	CONSUME 
		com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle : 1,

		double : 1;
	PRODUCE 
		void : 1;
TRANSITION <com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle__void_setG1<double>>
	CONSUME 
		com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle : 1,

		double : 1;
	PRODUCE 
		void : 1;
TRANSITION <com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle__void_setG2<double>>
	CONSUME 
		com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle : 1,

		double : 1;
	PRODUCE 
		void : 1;
TRANSITION <com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle__void_setGrad<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle : 1,

		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
	PRODUCE 
		void : 1;
TRANSITION <com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle__void_setInverseHessianEsimate<com.opengamma.analytics.math.matrix.DoubleMatrix2D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1,

		com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle : 1;
	PRODUCE 
		void : 1;
TRANSITION <com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle__void_setLambda0<double>>
	CONSUME 
		com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle : 1,

		double : 1;
	PRODUCE 
		void : 1;
TRANSITION <com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle__void_setX<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle : 1,

		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
	PRODUCE 
		void : 1;
TRANSITION <com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle__void_swapLambdaAndReplace<double>>
	CONSUME 
		com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle : 1,

		double : 1;
	PRODUCE 
		void : 1;
TRANSITION <com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer__com.opengamma.analytics.math.matrix.DoubleMatrix1D_minimize<com.opengamma.analytics.math.function.Function1D.com.opengamma.analytics.math.function.Function1D.com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer : 1,

		com.opengamma.analytics.math.function.Function1D : 2;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer__com.opengamma.analytics.math.matrix.DoubleMatrix1D_minimize<com.opengamma.analytics.math.function.Function1D.com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer__java.lang.Object_minimize<com.opengamma.analytics.math.function.Function1D.com.opengamma.analytics.math.function.Function1D.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer : 1,

		java.lang.Object : 1,

		com.opengamma.analytics.math.function.Function1D : 2;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer__java.lang.Object_minimize<com.opengamma.analytics.math.function.Function1D.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer : 1,

		java.lang.Object : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer : 1;
TRANSITION <com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer__void_<init><double.double.int>>
	CONSUME 
		double : 2,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer : 1;
TRANSITION <com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer__void_<init><double.double.int.com.opengamma.analytics.math.minimization.QuasiNewtonInverseHessianUpdate>>
	CONSUME 
		double : 2,

		com.opengamma.analytics.math.minimization.QuasiNewtonInverseHessianUpdate : 1,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer : 1;
TRANSITION <com.opengamma.analytics.math.minimization.ScalarMinimizer__double_minimize<com.opengamma.analytics.math.function.Function1D.double.double.double>>
	CONSUME 
		double : 3,

		com.opengamma.analytics.math.minimization.ScalarMinimizer : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.minimization.SingleRangeLimitTransform__boolean_equals<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.minimization.SingleRangeLimitTransform : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.minimization.SingleRangeLimitTransform__double_inverseTransform<double>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.minimization.SingleRangeLimitTransform : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.minimization.SingleRangeLimitTransform__double_inverseTransformGradient<double>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.minimization.SingleRangeLimitTransform : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.minimization.SingleRangeLimitTransform__double_transform<double>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.minimization.SingleRangeLimitTransform : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.minimization.SingleRangeLimitTransform__double_transformGradient<double>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.minimization.SingleRangeLimitTransform : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.minimization.SingleRangeLimitTransform__void_<init><double.com.opengamma.analytics.math.minimization.ParameterLimitsTransform$LimitType>>
	CONSUME 
		com.opengamma.analytics.math.minimization.ParameterLimitsTransform$LimitType : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.SingleRangeLimitTransform : 1;
TRANSITION <com.opengamma.analytics.math.minimization.SumToOne__com.opengamma.analytics.math.matrix.DoubleMatrix1D_inverseTransform<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.minimization.SumToOne : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.minimization.SumToOne__com.opengamma.analytics.math.matrix.DoubleMatrix1D_transform<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.minimization.SumToOne : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.minimization.SumToOne__com.opengamma.analytics.math.matrix.DoubleMatrix2D_jacobian<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.minimization.SumToOne : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.minimization.SumToOne__double[]_inverseTransform<double[]>>
	CONSUME 
		com.opengamma.analytics.math.minimization.SumToOne : 1,

		double[] : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.minimization.SumToOne__double[]_transform<double[]>>
	CONSUME 
		com.opengamma.analytics.math.minimization.SumToOne : 1,

		double[] : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.minimization.SumToOne__double[][]_jacobian<double[]>>
	CONSUME 
		com.opengamma.analytics.math.minimization.SumToOne : 1,

		double[] : 1;
	PRODUCE 
		double[][] : 1;
TRANSITION <com.opengamma.analytics.math.minimization.SumToOne__void_<init><int>>
	CONSUME 
		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.SumToOne : 1;
TRANSITION <com.opengamma.analytics.math.minimization.UncoupledParameterTransforms__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.minimization.UncoupledParameterTransforms : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.minimization.UncoupledParameterTransforms__com.opengamma.analytics.math.matrix.DoubleMatrix1D_inverseTransform<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.minimization.UncoupledParameterTransforms : 1,

		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.minimization.UncoupledParameterTransforms__com.opengamma.analytics.math.matrix.DoubleMatrix1D_transform<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.minimization.UncoupledParameterTransforms : 1,

		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.minimization.UncoupledParameterTransforms__com.opengamma.analytics.math.matrix.DoubleMatrix2D_inverseJacobian<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.minimization.UncoupledParameterTransforms : 1,

		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.minimization.UncoupledParameterTransforms__com.opengamma.analytics.math.matrix.DoubleMatrix2D_jacobian<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.minimization.UncoupledParameterTransforms : 1,

		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.minimization.UncoupledParameterTransforms__int_getNumberOfFittingParameters<>>
	CONSUME 
		com.opengamma.analytics.math.minimization.UncoupledParameterTransforms : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.minimization.UncoupledParameterTransforms__int_getNumberOfModelParameters<>>
	CONSUME 
		com.opengamma.analytics.math.minimization.UncoupledParameterTransforms : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.minimization.UncoupledParameterTransforms__void_<init><com.opengamma.analytics.math.matrix.DoubleMatrix1D.com.opengamma.analytics.math.minimization.ParameterLimitsTransform[].java.util.BitSet>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.minimization.ParameterLimitsTransform[] : 1,

		java.util.BitSet : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.UncoupledParameterTransforms : 1;
TRANSITION <com.opengamma.analytics.math.number.ComplexNumber__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.number.ComplexNumber__double_doubleValue<>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.number.ComplexNumber__double_getImaginary<>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.number.ComplexNumber__double_getReal<>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.number.ComplexNumber__float_floatValue<>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
	PRODUCE 
		float : 1;
TRANSITION <com.opengamma.analytics.math.number.ComplexNumber__int_intValue<>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.number.ComplexNumber__long_longValue<>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
	PRODUCE 
		long : 1;
TRANSITION <com.opengamma.analytics.math.number.ComplexNumber__void_<init><double>>
	CONSUME 
		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
TRANSITION <com.opengamma.analytics.math.number.ComplexNumber__void_<init><double.double>>
	CONSUME 
		double : 2;
	PRODUCE 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
TRANSITION <com.opengamma.analytics.math.performance.SimpleTimer__long_elapsedTime<>>
	CONSUME 
		com.opengamma.analytics.math.performance.SimpleTimer : 1;
	PRODUCE 
		long : 1;
TRANSITION <com.opengamma.analytics.math.performance.SimpleTimer__long_totalTime<>>
	CONSUME 
		com.opengamma.analytics.math.performance.SimpleTimer : 1;
	PRODUCE 
		long : 1;
TRANSITION <com.opengamma.analytics.math.performance.SimpleTimer__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.performance.SimpleTimer : 1;
TRANSITION <com.opengamma.analytics.math.performance.SimpleTimer__void_startTimer<>>
	CONSUME 
		com.opengamma.analytics.math.performance.SimpleTimer : 1;
	PRODUCE 
		void : 1;
TRANSITION <com.opengamma.analytics.math.performance.SimpleTimer__void_stopTimer<>>
	CONSUME 
		com.opengamma.analytics.math.performance.SimpleTimer : 1;
	PRODUCE 
		void : 1;
TRANSITION <com.opengamma.analytics.math.random.NormalRandomNumberGenerator__double[]_getVector<int>>
	CONSUME 
		com.opengamma.analytics.math.random.NormalRandomNumberGenerator : 1,

		int : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.random.NormalRandomNumberGenerator__java.util.List_getVectors<int.int>>
	CONSUME 
		com.opengamma.analytics.math.random.NormalRandomNumberGenerator : 1,

		int : 2;
	PRODUCE 
		java.util.List : 1;
TRANSITION <com.opengamma.analytics.math.random.NormalRandomNumberGenerator__void_<init><double.double>>
	CONSUME 
		double : 2;
	PRODUCE 
		com.opengamma.analytics.math.random.NormalRandomNumberGenerator : 1;
TRANSITION <com.opengamma.analytics.math.random.NormalRandomNumberGenerator__void_<init><double.double.cern.jet.random.engine.RandomEngine>>
	CONSUME 
		cern.jet.random.engine.RandomEngine : 1,

		double : 2;
	PRODUCE 
		com.opengamma.analytics.math.random.NormalRandomNumberGenerator : 1;
TRANSITION <com.opengamma.analytics.math.random.RandomNumberGenerator__double[]_getVector<int>>
	CONSUME 
		int : 1,

		com.opengamma.analytics.math.random.RandomNumberGenerator : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.random.RandomNumberGenerator__java.util.List_getVectors<int.int>>
	CONSUME 
		int : 2,

		com.opengamma.analytics.math.random.RandomNumberGenerator : 1;
	PRODUCE 
		java.util.List : 1;
TRANSITION <com.opengamma.analytics.math.regression.GeneralizedLeastSquaresRegression__com.opengamma.analytics.math.regression.LeastSquaresRegressionResult_regress<double[][].double[][].double[].boolean>>
	CONSUME 
		boolean : 1,

		double[] : 1,

		com.opengamma.analytics.math.regression.GeneralizedLeastSquaresRegression : 1,

		double[][] : 2;
	PRODUCE 
		com.opengamma.analytics.math.regression.LeastSquaresRegressionResult : 1;
TRANSITION <com.opengamma.analytics.math.regression.GeneralizedLeastSquaresRegression__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.regression.GeneralizedLeastSquaresRegression : 1;
TRANSITION <com.opengamma.analytics.math.regression.LeastSquaresRegression__com.opengamma.analytics.math.regression.LeastSquaresRegressionResult_regress<double[][].double[][].double[].boolean>>
	CONSUME 
		com.opengamma.analytics.math.regression.LeastSquaresRegression : 1,

		boolean : 1,

		double[] : 1,

		double[][] : 2;
	PRODUCE 
		com.opengamma.analytics.math.regression.LeastSquaresRegressionResult : 1;
TRANSITION <com.opengamma.analytics.math.regression.LeastSquaresRegression__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.regression.LeastSquaresRegression : 1;
TRANSITION <com.opengamma.analytics.math.regression.LeastSquaresRegressionResult__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.regression.LeastSquaresRegressionResult : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.regression.LeastSquaresRegressionResult__boolean_hasIntercept<>>
	CONSUME 
		com.opengamma.analytics.math.regression.LeastSquaresRegressionResult : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.regression.LeastSquaresRegressionResult__double_getAdjustedRSquared<>>
	CONSUME 
		com.opengamma.analytics.math.regression.LeastSquaresRegressionResult : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.regression.LeastSquaresRegressionResult__double_getMeanSquareError<>>
	CONSUME 
		com.opengamma.analytics.math.regression.LeastSquaresRegressionResult : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.regression.LeastSquaresRegressionResult__double_getPredictedValue<double[]>>
	CONSUME 
		com.opengamma.analytics.math.regression.LeastSquaresRegressionResult : 1,

		double[] : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.regression.LeastSquaresRegressionResult__double_getRSquared<>>
	CONSUME 
		com.opengamma.analytics.math.regression.LeastSquaresRegressionResult : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.regression.LeastSquaresRegressionResult__double[]_getBetas<>>
	CONSUME 
		com.opengamma.analytics.math.regression.LeastSquaresRegressionResult : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.regression.LeastSquaresRegressionResult__double[]_getPValues<>>
	CONSUME 
		com.opengamma.analytics.math.regression.LeastSquaresRegressionResult : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.regression.LeastSquaresRegressionResult__double[]_getResiduals<>>
	CONSUME 
		com.opengamma.analytics.math.regression.LeastSquaresRegressionResult : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.regression.LeastSquaresRegressionResult__double[]_getStandardErrorOfBetas<>>
	CONSUME 
		com.opengamma.analytics.math.regression.LeastSquaresRegressionResult : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.regression.LeastSquaresRegressionResult__double[]_getTStatistics<>>
	CONSUME 
		com.opengamma.analytics.math.regression.LeastSquaresRegressionResult : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.regression.LeastSquaresRegressionResult__void_<init><com.opengamma.analytics.math.regression.LeastSquaresRegressionResult>>
	CONSUME 
		com.opengamma.analytics.math.regression.LeastSquaresRegressionResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.regression.LeastSquaresRegressionResult : 1;
TRANSITION <com.opengamma.analytics.math.regression.NamedVariableLeastSquaresRegressionResult__boolean_equals<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.regression.NamedVariableLeastSquaresRegressionResult : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.regression.NamedVariableLeastSquaresRegressionResult__com.opengamma.analytics.math.regression.LeastSquaresRegressionResult_getResult<>>
	CONSUME 
		com.opengamma.analytics.math.regression.NamedVariableLeastSquaresRegressionResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.regression.LeastSquaresRegressionResult : 1;
TRANSITION <com.opengamma.analytics.math.regression.NamedVariableLeastSquaresRegressionResult__java.lang.Double_getPredictedValue<java.util.Map>>
	CONSUME 
		java.util.Map : 1,

		com.opengamma.analytics.math.regression.NamedVariableLeastSquaresRegressionResult : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.regression.NamedVariableLeastSquaresRegressionResult__java.util.List_getIndependentVariableNames<>>
	CONSUME 
		com.opengamma.analytics.math.regression.NamedVariableLeastSquaresRegressionResult : 1;
	PRODUCE 
		java.util.List : 1;
TRANSITION <com.opengamma.analytics.math.regression.NamedVariableLeastSquaresRegressionResult__void_<init><java.util.List.com.opengamma.analytics.math.regression.LeastSquaresRegressionResult>>
	CONSUME 
		com.opengamma.analytics.math.regression.LeastSquaresRegressionResult : 1,

		java.util.List : 1;
	PRODUCE 
		com.opengamma.analytics.math.regression.NamedVariableLeastSquaresRegressionResult : 1;
TRANSITION <com.opengamma.analytics.math.regression.OrdinaryLeastSquaresRegression__com.opengamma.analytics.math.regression.LeastSquaresRegressionResult_regress<double[][].double[].boolean>>
	CONSUME 
		boolean : 1,

		double[] : 1,

		com.opengamma.analytics.math.regression.OrdinaryLeastSquaresRegression : 1,

		double[][] : 1;
	PRODUCE 
		com.opengamma.analytics.math.regression.LeastSquaresRegressionResult : 1;
TRANSITION <com.opengamma.analytics.math.regression.OrdinaryLeastSquaresRegression__com.opengamma.analytics.math.regression.LeastSquaresRegressionResult_regress<double[][].double[][].double[].boolean>>
	CONSUME 
		boolean : 1,

		double[] : 1,

		com.opengamma.analytics.math.regression.OrdinaryLeastSquaresRegression : 1,

		double[][] : 2;
	PRODUCE 
		com.opengamma.analytics.math.regression.LeastSquaresRegressionResult : 1;
TRANSITION <com.opengamma.analytics.math.regression.OrdinaryLeastSquaresRegression__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.regression.OrdinaryLeastSquaresRegression : 1;
TRANSITION <com.opengamma.analytics.math.regression.WeightedLeastSquaresRegression__com.opengamma.analytics.math.regression.LeastSquaresRegressionResult_regress<double[][].double[].double[].boolean>>
	CONSUME 
		boolean : 1,

		double[] : 2,

		com.opengamma.analytics.math.regression.WeightedLeastSquaresRegression : 1,

		double[][] : 1;
	PRODUCE 
		com.opengamma.analytics.math.regression.LeastSquaresRegressionResult : 1;
TRANSITION <com.opengamma.analytics.math.regression.WeightedLeastSquaresRegression__com.opengamma.analytics.math.regression.LeastSquaresRegressionResult_regress<double[][].double[][].double[].boolean>>
	CONSUME 
		boolean : 1,

		double[] : 1,

		com.opengamma.analytics.math.regression.WeightedLeastSquaresRegression : 1,

		double[][] : 2;
	PRODUCE 
		com.opengamma.analytics.math.regression.LeastSquaresRegressionResult : 1;
TRANSITION <com.opengamma.analytics.math.regression.WeightedLeastSquaresRegression__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.regression.WeightedLeastSquaresRegression : 1;
TRANSITION <com.opengamma.analytics.math.regression.WeightedLeastSquaresRegressionResult__double_getWeightedPredictedValue<double[].double[]>>
	CONSUME 
		double[] : 2,

		com.opengamma.analytics.math.regression.WeightedLeastSquaresRegressionResult : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.regression.WeightedLeastSquaresRegressionResult__void_<init><com.opengamma.analytics.math.regression.LeastSquaresRegressionResult>>
	CONSUME 
		com.opengamma.analytics.math.regression.LeastSquaresRegressionResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.regression.WeightedLeastSquaresRegressionResult : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.BisectionSingleRootFinder__java.lang.Double_getRoot<com.opengamma.analytics.math.function.Function1D.java.lang.Double.java.lang.Double>>
	CONSUME 
		java.lang.Double : 2,

		com.opengamma.analytics.math.rootfinding.BisectionSingleRootFinder : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.BisectionSingleRootFinder__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.BisectionSingleRootFinder : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.BisectionSingleRootFinder__void_<init><double>>
	CONSUME 
		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.BisectionSingleRootFinder : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.BracketRoot__double[]_getBracketedPoints<com.opengamma.analytics.math.function.Function1D.double.double>>
	CONSUME 
		double : 2,

		com.opengamma.analytics.math.rootfinding.BracketRoot : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.BracketRoot__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.BracketRoot : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.BrentSingleRootFinder__java.lang.Double_getRoot<com.opengamma.analytics.math.function.Function1D.java.lang.Double.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.rootfinding.BrentSingleRootFinder : 1,

		java.lang.Double : 2,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.BrentSingleRootFinder__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.BrentSingleRootFinder : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.BrentSingleRootFinder__void_<init><double>>
	CONSUME 
		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.BrentSingleRootFinder : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.CubicRealRootFinder__java.lang.Double[]_getRoots<com.opengamma.analytics.math.function.RealPolynomialFunction1D>>
	CONSUME 
		com.opengamma.analytics.math.function.RealPolynomialFunction1D : 1,

		com.opengamma.analytics.math.rootfinding.CubicRealRootFinder : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.CubicRealRootFinder__java.lang.Object[]_getRoots<com.opengamma.analytics.math.function.RealPolynomialFunction1D>>
	CONSUME 
		com.opengamma.analytics.math.function.RealPolynomialFunction1D : 1,

		com.opengamma.analytics.math.rootfinding.CubicRealRootFinder : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.CubicRealRootFinder__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.CubicRealRootFinder : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.CubicRootFinder__com.opengamma.analytics.math.number.ComplexNumber[]_getRoots<com.opengamma.analytics.math.function.RealPolynomialFunction1D>>
	CONSUME 
		com.opengamma.analytics.math.function.RealPolynomialFunction1D : 1,

		com.opengamma.analytics.math.rootfinding.CubicRootFinder : 1;
	PRODUCE 
		com.opengamma.analytics.math.number.ComplexNumber[] : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.CubicRootFinder__java.lang.Object[]_getRoots<com.opengamma.analytics.math.function.RealPolynomialFunction1D>>
	CONSUME 
		com.opengamma.analytics.math.function.RealPolynomialFunction1D : 1,

		com.opengamma.analytics.math.rootfinding.CubicRootFinder : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.CubicRootFinder__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.CubicRootFinder : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.EigenvaluePolynomialRootFinder__java.lang.Double[]_getRoots<com.opengamma.analytics.math.function.RealPolynomialFunction1D>>
	CONSUME 
		com.opengamma.analytics.math.function.RealPolynomialFunction1D : 1,

		com.opengamma.analytics.math.rootfinding.EigenvaluePolynomialRootFinder : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.EigenvaluePolynomialRootFinder__java.lang.Object[]_getRoots<com.opengamma.analytics.math.function.RealPolynomialFunction1D>>
	CONSUME 
		com.opengamma.analytics.math.function.RealPolynomialFunction1D : 1,

		com.opengamma.analytics.math.rootfinding.EigenvaluePolynomialRootFinder : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.EigenvaluePolynomialRootFinder__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.EigenvaluePolynomialRootFinder : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.LaguerrePolynomialRealRootFinder__java.lang.Double[]_getRoots<com.opengamma.analytics.math.function.RealPolynomialFunction1D>>
	CONSUME 
		com.opengamma.analytics.math.function.RealPolynomialFunction1D : 1,

		com.opengamma.analytics.math.rootfinding.LaguerrePolynomialRealRootFinder : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.LaguerrePolynomialRealRootFinder__java.lang.Object[]_getRoots<com.opengamma.analytics.math.function.RealPolynomialFunction1D>>
	CONSUME 
		com.opengamma.analytics.math.function.RealPolynomialFunction1D : 1,

		com.opengamma.analytics.math.rootfinding.LaguerrePolynomialRealRootFinder : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.LaguerrePolynomialRealRootFinder__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.LaguerrePolynomialRealRootFinder : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder__java.lang.Double_getRoot<com.opengamma.analytics.math.function.DoubleFunction1D.com.opengamma.analytics.math.function.DoubleFunction1D.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.function.DoubleFunction1D : 2;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder__java.lang.Double_getRoot<com.opengamma.analytics.math.function.DoubleFunction1D.com.opengamma.analytics.math.function.DoubleFunction1D.java.lang.Double.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder : 1,

		java.lang.Double : 2,

		com.opengamma.analytics.math.function.DoubleFunction1D : 2;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder__java.lang.Double_getRoot<com.opengamma.analytics.math.function.DoubleFunction1D.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.function.DoubleFunction1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder__java.lang.Double_getRoot<com.opengamma.analytics.math.function.DoubleFunction1D.java.lang.Double.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder : 1,

		java.lang.Double : 2,

		com.opengamma.analytics.math.function.DoubleFunction1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder__java.lang.Double_getRoot<com.opengamma.analytics.math.function.Function1D.com.opengamma.analytics.math.function.Function1D.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.function.Function1D : 2;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder__java.lang.Double_getRoot<com.opengamma.analytics.math.function.Function1D.com.opengamma.analytics.math.function.Function1D.java.lang.Double.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder : 1,

		java.lang.Double : 2,

		com.opengamma.analytics.math.function.Function1D : 2;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder__java.lang.Double_getRoot<com.opengamma.analytics.math.function.Function1D.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder__java.lang.Double_getRoot<com.opengamma.analytics.math.function.Function1D.java.lang.Double.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder : 1,

		java.lang.Double : 2,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder__void_<init><double>>
	CONSUME 
		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.Polynomial1DRootFinder__java.lang.Object[]_getRoots<com.opengamma.analytics.math.function.RealPolynomialFunction1D>>
	CONSUME 
		com.opengamma.analytics.math.rootfinding.Polynomial1DRootFinder : 1,

		com.opengamma.analytics.math.function.RealPolynomialFunction1D : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.QuadraticRealRootFinder__java.lang.Double[]_getRoots<com.opengamma.analytics.math.function.RealPolynomialFunction1D>>
	CONSUME 
		com.opengamma.analytics.math.function.RealPolynomialFunction1D : 1,

		com.opengamma.analytics.math.rootfinding.QuadraticRealRootFinder : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.QuadraticRealRootFinder__java.lang.Object[]_getRoots<com.opengamma.analytics.math.function.RealPolynomialFunction1D>>
	CONSUME 
		com.opengamma.analytics.math.function.RealPolynomialFunction1D : 1,

		com.opengamma.analytics.math.rootfinding.QuadraticRealRootFinder : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.QuadraticRealRootFinder__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.QuadraticRealRootFinder : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.RealSingleRootFinder__java.lang.Double_getRoot<com.opengamma.analytics.math.function.Function1D.java.lang.Double.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.rootfinding.RealSingleRootFinder : 1,

		java.lang.Double : 2,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.RealSingleRootFinder__java.lang.Double_getRoot<com.opengamma.analytics.math.function.Function1D.java.lang.Double[]>>
	CONSUME 
		com.opengamma.analytics.math.rootfinding.RealSingleRootFinder : 1,

		java.lang.Double[] : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.RealSingleRootFinder__java.lang.Object_getRoot<com.opengamma.analytics.math.function.Function1D.java.lang.Object[]>>
	CONSUME 
		com.opengamma.analytics.math.rootfinding.RealSingleRootFinder : 1,

		java.lang.Object[] : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.RealSingleRootFinder__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.RealSingleRootFinder : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder__java.lang.Double_getRoot<com.opengamma.analytics.math.function.Function1D.java.lang.Double.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder : 1,

		java.lang.Double : 2,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder__void_<init><double>>
	CONSUME 
		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder__void_<init><double.double>>
	CONSUME 
		double : 2;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.SingleRootFinder__java.lang.Object_getRoot<com.opengamma.analytics.math.function.Function1D.java.lang.Object[]>>
	CONSUME 
		com.opengamma.analytics.math.rootfinding.SingleRootFinder : 1,

		java.lang.Object[] : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.VectorRootFinder__com.opengamma.analytics.math.matrix.DoubleMatrix1D_getRoot<com.opengamma.analytics.math.function.Function1D.com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.rootfinding.VectorRootFinder : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.VectorRootFinder__com.opengamma.analytics.math.matrix.DoubleMatrix1D_getRoot<com.opengamma.analytics.math.function.Function1D.com.opengamma.analytics.math.matrix.DoubleMatrix1D[]>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D[] : 1,

		com.opengamma.analytics.math.rootfinding.VectorRootFinder : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.VectorRootFinder__java.lang.Object_getRoot<com.opengamma.analytics.math.function.Function1D.java.lang.Object[]>>
	CONSUME 
		java.lang.Object[] : 1,

		com.opengamma.analytics.math.rootfinding.VectorRootFinder : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.VectorRootFinder__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.VectorRootFinder : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.newton.BroydenMatrixUpdateFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.newton.BroydenMatrixUpdateFunction : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.newton.BroydenVectorRootFinder__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.newton.BroydenVectorRootFinder : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.newton.BroydenVectorRootFinder__void_<init><double.double.int>>
	CONSUME 
		double : 2,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.newton.BroydenVectorRootFinder : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.newton.BroydenVectorRootFinder__void_<init><double.double.int.com.opengamma.analytics.math.linearalgebra.Decomposition>>
	CONSUME 
		double : 2,

		com.opengamma.analytics.math.linearalgebra.Decomposition : 1,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.newton.BroydenVectorRootFinder : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.newton.InverseJacobianDirectionFunction__com.opengamma.analytics.math.matrix.DoubleMatrix1D_getDirection<com.opengamma.analytics.math.matrix.DoubleMatrix2D.com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1,

		com.opengamma.analytics.math.rootfinding.newton.InverseJacobianDirectionFunction : 1,

		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.newton.InverseJacobianDirectionFunction__void_<init><com.opengamma.analytics.math.matrix.MatrixAlgebra>>
	CONSUME 
		com.opengamma.analytics.math.matrix.MatrixAlgebra : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.newton.InverseJacobianDirectionFunction : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.newton.InverseJacobianEstimateInitializationFunction__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getInitializedMatrix<com.opengamma.analytics.math.function.Function1D.com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.rootfinding.newton.InverseJacobianEstimateInitializationFunction : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.newton.InverseJacobianEstimateInitializationFunction__void_<init><com.opengamma.analytics.math.linearalgebra.Decomposition>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.Decomposition : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.newton.InverseJacobianEstimateInitializationFunction : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.newton.JacobianDirectionFunction__com.opengamma.analytics.math.matrix.DoubleMatrix1D_getDirection<com.opengamma.analytics.math.matrix.DoubleMatrix2D.com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1,

		com.opengamma.analytics.math.rootfinding.newton.JacobianDirectionFunction : 1,

		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.newton.JacobianDirectionFunction__void_<init><com.opengamma.analytics.math.linearalgebra.Decomposition>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.Decomposition : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.newton.JacobianDirectionFunction : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.newton.JacobianEstimateInitializationFunction__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getInitializedMatrix<com.opengamma.analytics.math.function.Function1D.com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.rootfinding.newton.JacobianEstimateInitializationFunction : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.newton.JacobianEstimateInitializationFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.newton.JacobianEstimateInitializationFunction : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.newton.NewtonDefaultUpdateFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.newton.NewtonDefaultUpdateFunction : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.newton.NewtonDefaultVectorRootFinder__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.newton.NewtonDefaultVectorRootFinder : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.newton.NewtonDefaultVectorRootFinder__void_<init><double.double.int>>
	CONSUME 
		double : 2,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.newton.NewtonDefaultVectorRootFinder : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.newton.NewtonDefaultVectorRootFinder__void_<init><double.double.int.com.opengamma.analytics.math.linearalgebra.Decomposition>>
	CONSUME 
		double : 2,

		com.opengamma.analytics.math.linearalgebra.Decomposition : 1,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.newton.NewtonDefaultVectorRootFinder : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.newton.NewtonRootFinderDirectionFunction__com.opengamma.analytics.math.matrix.DoubleMatrix1D_getDirection<com.opengamma.analytics.math.matrix.DoubleMatrix2D.com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1,

		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.rootfinding.newton.NewtonRootFinderDirectionFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.newton.NewtonRootFinderMatrixInitializationFunction__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getInitializedMatrix<com.opengamma.analytics.math.function.Function1D.com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.rootfinding.newton.NewtonRootFinderMatrixInitializationFunction : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder$DataBundle__com.opengamma.analytics.math.matrix.DoubleMatrix1D_getDeltaX<>>
	CONSUME 
		com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder$DataBundle : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder$DataBundle__com.opengamma.analytics.math.matrix.DoubleMatrix1D_getDeltaY<>>
	CONSUME 
		com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder$DataBundle : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder$DataBundle__com.opengamma.analytics.math.matrix.DoubleMatrix1D_getX<>>
	CONSUME 
		com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder$DataBundle : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder$DataBundle__com.opengamma.analytics.math.matrix.DoubleMatrix1D_getY<>>
	CONSUME 
		com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder$DataBundle : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder$DataBundle__double_getG0<>>
	CONSUME 
		com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder$DataBundle : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder$DataBundle__double_getG1<>>
	CONSUME 
		com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder$DataBundle : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder$DataBundle__double_getG2<>>
	CONSUME 
		com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder$DataBundle : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder$DataBundle__double_getLambda0<>>
	CONSUME 
		com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder$DataBundle : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder$DataBundle__double_getLambda1<>>
	CONSUME 
		com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder$DataBundle : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder$DataBundle__void_setDeltaX<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder$DataBundle : 1;
	PRODUCE 
		void : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder$DataBundle__void_setDeltaY<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder$DataBundle : 1;
	PRODUCE 
		void : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder$DataBundle__void_setG0<double>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder$DataBundle : 1;
	PRODUCE 
		void : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder$DataBundle__void_setG1<double>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder$DataBundle : 1;
	PRODUCE 
		void : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder$DataBundle__void_setG2<double>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder$DataBundle : 1;
	PRODUCE 
		void : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder$DataBundle__void_setLambda0<double>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder$DataBundle : 1;
	PRODUCE 
		void : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder$DataBundle__void_setX<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder$DataBundle : 1;
	PRODUCE 
		void : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder$DataBundle__void_setY<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder$DataBundle : 1;
	PRODUCE 
		void : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder$DataBundle__void_swapLambdaAndReplace<double>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder$DataBundle : 1;
	PRODUCE 
		void : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder__com.opengamma.analytics.math.matrix.DoubleMatrix1D_getRoot<com.opengamma.analytics.math.function.Function1D.com.opengamma.analytics.math.function.Function1D.com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder : 1,

		com.opengamma.analytics.math.function.Function1D : 2;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder__com.opengamma.analytics.math.matrix.DoubleMatrix1D_getRoot<com.opengamma.analytics.math.function.Function1D.com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.newton.ShermanMorrisonMatrixUpdateFunction__void_<init><com.opengamma.analytics.math.matrix.MatrixAlgebra>>
	CONSUME 
		com.opengamma.analytics.math.matrix.MatrixAlgebra : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.newton.ShermanMorrisonMatrixUpdateFunction : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.newton.ShermanMorrisonVectorRootFinder__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.newton.ShermanMorrisonVectorRootFinder : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.newton.ShermanMorrisonVectorRootFinder__void_<init><double.double.int>>
	CONSUME 
		double : 2,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.newton.ShermanMorrisonVectorRootFinder : 1;
TRANSITION <com.opengamma.analytics.math.rootfinding.newton.ShermanMorrisonVectorRootFinder__void_<init><double.double.int.com.opengamma.analytics.math.linearalgebra.Decomposition>>
	CONSUME 
		double : 2,

		com.opengamma.analytics.math.linearalgebra.Decomposition : 1,

		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.newton.ShermanMorrisonVectorRootFinder : 1;
TRANSITION <com.opengamma.analytics.math.statistics.ConfidenceInterval__boolean_equals<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.statistics.ConfidenceInterval : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.statistics.ConfidenceInterval__boolean_isWithinInterval<double>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.statistics.ConfidenceInterval : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.statistics.ConfidenceInterval__double_getConfidenceLevel<>>
	CONSUME 
		com.opengamma.analytics.math.statistics.ConfidenceInterval : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.ConfidenceInterval__double_getLowerInterval<>>
	CONSUME 
		com.opengamma.analytics.math.statistics.ConfidenceInterval : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.ConfidenceInterval__double_getUpperInterval<>>
	CONSUME 
		com.opengamma.analytics.math.statistics.ConfidenceInterval : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.ConfidenceInterval__double_getValue<>>
	CONSUME 
		com.opengamma.analytics.math.statistics.ConfidenceInterval : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.ConfidenceInterval__void_<init><double.double.double.double>>
	CONSUME 
		double : 4;
	PRODUCE 
		com.opengamma.analytics.math.statistics.ConfidenceInterval : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.DiscreteQuantileMethod__double_quantileFromSorted<double.double[]>>
	CONSUME 
		double[] : 1,

		double : 1,

		com.opengamma.analytics.math.statistics.descriptive.DiscreteQuantileMethod : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.DiscreteQuantileMethod__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.DiscreteQuantileMethod : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.ExcelInterpolationQuantileMethod__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.ExcelInterpolationQuantileMethod : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.GeometricMeanCalculator__java.lang.Double_evaluate<double[]>>
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.GeometricMeanCalculator : 1,

		double[] : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.GeometricMeanCalculator__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.GeometricMeanCalculator : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.GeometricMeanCalculator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.GeometricMeanCalculator : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.IndexAboveQuantileMethod__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.IndexAboveQuantileMethod : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.InterpolationQuantileMethod__double_quantileFromSorted<double.double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.statistics.descriptive.InterpolationQuantileMethod : 1,

		double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.InterpolationQuantileMethod__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.InterpolationQuantileMethod : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.LognormalFisherKurtosisFromVolatilityCalculator__java.lang.Double_evaluate<java.lang.Double.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.LognormalFisherKurtosisFromVolatilityCalculator : 1,

		java.lang.Double : 2;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.LognormalFisherKurtosisFromVolatilityCalculator__java.lang.Object_evaluate<java.lang.Object.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.LognormalFisherKurtosisFromVolatilityCalculator : 1,

		java.lang.Object : 2;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.LognormalFisherKurtosisFromVolatilityCalculator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.LognormalFisherKurtosisFromVolatilityCalculator : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.LognormalPearsonKurtosisFromVolatilityCalculator__java.lang.Double_evaluate<java.lang.Double.java.lang.Double>>
	CONSUME 
		java.lang.Double : 2,

		com.opengamma.analytics.math.statistics.descriptive.LognormalPearsonKurtosisFromVolatilityCalculator : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.LognormalPearsonKurtosisFromVolatilityCalculator__java.lang.Object_evaluate<java.lang.Object.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.LognormalPearsonKurtosisFromVolatilityCalculator : 1,

		java.lang.Object : 2;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.LognormalPearsonKurtosisFromVolatilityCalculator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.LognormalPearsonKurtosisFromVolatilityCalculator : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.LognormalSkewnessFromVolatilityCalculator__java.lang.Double_evaluate<java.lang.Double.java.lang.Double>>
	CONSUME 
		java.lang.Double : 2,

		com.opengamma.analytics.math.statistics.descriptive.LognormalSkewnessFromVolatilityCalculator : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.LognormalSkewnessFromVolatilityCalculator__java.lang.Object_evaluate<java.lang.Object.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.LognormalSkewnessFromVolatilityCalculator : 1,

		java.lang.Object : 2;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.LognormalSkewnessFromVolatilityCalculator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.LognormalSkewnessFromVolatilityCalculator : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.MeanCalculator__java.lang.Double_evaluate<double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.statistics.descriptive.MeanCalculator : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.MeanCalculator__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.MeanCalculator : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.MeanCalculator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.MeanCalculator : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.MedianCalculator__java.lang.Double_evaluate<double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.statistics.descriptive.MedianCalculator : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.MedianCalculator__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.statistics.descriptive.MedianCalculator : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.MedianCalculator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.MedianCalculator : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.MidwayInterpolationQuantileMethod__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.MidwayInterpolationQuantileMethod : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.ModeCalculator__java.lang.Double_evaluate<double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.statistics.descriptive.ModeCalculator : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.ModeCalculator__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.ModeCalculator : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.ModeCalculator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.ModeCalculator : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.NearestIndexQuantileMethod__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.NearestIndexQuantileMethod : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.PartialMomentCalculator__java.lang.Double_evaluate<double[]>>
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.PartialMomentCalculator : 1,

		double[] : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.PartialMomentCalculator__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.PartialMomentCalculator : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.PartialMomentCalculator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.PartialMomentCalculator : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.PartialMomentCalculator__void_<init><double.boolean>>
	CONSUME 
		boolean : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.PartialMomentCalculator : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.PearsonFirstSkewnessCoefficientCalculator__java.lang.Double_evaluate<double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.statistics.descriptive.PearsonFirstSkewnessCoefficientCalculator : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.PearsonFirstSkewnessCoefficientCalculator__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.statistics.descriptive.PearsonFirstSkewnessCoefficientCalculator : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.PearsonFirstSkewnessCoefficientCalculator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.PearsonFirstSkewnessCoefficientCalculator : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.PearsonSecondSkewnessCoefficientCalculator__java.lang.Double_evaluate<double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.statistics.descriptive.PearsonSecondSkewnessCoefficientCalculator : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.PearsonSecondSkewnessCoefficientCalculator__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.statistics.descriptive.PearsonSecondSkewnessCoefficientCalculator : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.PearsonSecondSkewnessCoefficientCalculator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.PearsonSecondSkewnessCoefficientCalculator : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.PercentileCalculator__java.lang.Double_evaluate<double[]>>
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.PercentileCalculator : 1,

		double[] : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.PercentileCalculator__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.PercentileCalculator : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.PercentileCalculator__void_<init><double>>
	CONSUME 
		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.PercentileCalculator : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.PercentileCalculator__void_setPercentile<double>>
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.PercentileCalculator : 1,

		double : 1;
	PRODUCE 
		void : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.PopulationStandardDeviationCalculator__java.lang.Double_evaluate<double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.statistics.descriptive.PopulationStandardDeviationCalculator : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.PopulationStandardDeviationCalculator__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.statistics.descriptive.PopulationStandardDeviationCalculator : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.PopulationStandardDeviationCalculator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.PopulationStandardDeviationCalculator : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.PopulationVarianceCalculator__java.lang.Double_evaluate<double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.statistics.descriptive.PopulationVarianceCalculator : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.PopulationVarianceCalculator__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.statistics.descriptive.PopulationVarianceCalculator : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.PopulationVarianceCalculator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.PopulationVarianceCalculator : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.QuantileCalculationMethod__double_quantileFromUnsorted<double.double[]>>
	CONSUME 
		double[] : 1,

		double : 1,

		com.opengamma.analytics.math.statistics.descriptive.QuantileCalculationMethod : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.QuantileCalculationMethod__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.QuantileCalculationMethod : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.QuartileSkewnessCalculator__java.lang.Double_evaluate<double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.statistics.descriptive.QuartileSkewnessCalculator : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.QuartileSkewnessCalculator__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.QuartileSkewnessCalculator : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.QuartileSkewnessCalculator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.QuartileSkewnessCalculator : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.SampleCentralMomentCalculator__java.lang.Double_evaluate<double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.statistics.descriptive.SampleCentralMomentCalculator : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.SampleCentralMomentCalculator__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.SampleCentralMomentCalculator : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.SampleCentralMomentCalculator__void_<init><int>>
	CONSUME 
		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.SampleCentralMomentCalculator : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.SampleCovarianceCalculator__java.lang.Double_evaluate<double[][]>>
	CONSUME 
		double[][] : 1,

		com.opengamma.analytics.math.statistics.descriptive.SampleCovarianceCalculator : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.SampleCovarianceCalculator__java.lang.Object_evaluate<java.lang.Object[]>>
	CONSUME 
		java.lang.Object[] : 1,

		com.opengamma.analytics.math.statistics.descriptive.SampleCovarianceCalculator : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.SampleCovarianceCalculator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.SampleCovarianceCalculator : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.SampleFisherKurtosisCalculator__java.lang.Double_evaluate<double[]>>
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.SampleFisherKurtosisCalculator : 1,

		double[] : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.SampleFisherKurtosisCalculator__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.SampleFisherKurtosisCalculator : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.SampleFisherKurtosisCalculator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.SampleFisherKurtosisCalculator : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.SampleInterpolationQuantileMethod__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.SampleInterpolationQuantileMethod : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.SampleMomentCalculator__java.lang.Double_evaluate<double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.statistics.descriptive.SampleMomentCalculator : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.SampleMomentCalculator__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.statistics.descriptive.SampleMomentCalculator : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.SampleMomentCalculator__void_<init><int>>
	CONSUME 
		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.SampleMomentCalculator : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.SampleNormalizedCentralMomentCalculator__java.lang.Double_evaluate<double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.statistics.descriptive.SampleNormalizedCentralMomentCalculator : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.SampleNormalizedCentralMomentCalculator__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.SampleNormalizedCentralMomentCalculator : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.SampleNormalizedCentralMomentCalculator__void_<init><int>>
	CONSUME 
		int : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.SampleNormalizedCentralMomentCalculator : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.SamplePearsonKurtosisCalculator__java.lang.Double_evaluate<double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.statistics.descriptive.SamplePearsonKurtosisCalculator : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.SamplePearsonKurtosisCalculator__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.SamplePearsonKurtosisCalculator : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.SamplePearsonKurtosisCalculator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.SamplePearsonKurtosisCalculator : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.SamplePlusOneInterpolationQuantileMethod__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.SamplePlusOneInterpolationQuantileMethod : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.SampleSkewnessCalculator__java.lang.Double_evaluate<double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.statistics.descriptive.SampleSkewnessCalculator : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.SampleSkewnessCalculator__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.SampleSkewnessCalculator : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.SampleSkewnessCalculator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.SampleSkewnessCalculator : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.SampleStandardDeviationCalculator__java.lang.Double_evaluate<double[]>>
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.SampleStandardDeviationCalculator : 1,

		double[] : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.SampleStandardDeviationCalculator__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.SampleStandardDeviationCalculator : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.SampleStandardDeviationCalculator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.SampleStandardDeviationCalculator : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.SampleVarianceCalculator__java.lang.Double_evaluate<double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.statistics.descriptive.SampleVarianceCalculator : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.SampleVarianceCalculator__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.statistics.descriptive.SampleVarianceCalculator : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.SampleVarianceCalculator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.SampleVarianceCalculator : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.SemiStandardDeviationCalculator__java.lang.Double_evaluate<double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.statistics.descriptive.SemiStandardDeviationCalculator : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.SemiStandardDeviationCalculator__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.SemiStandardDeviationCalculator : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.SemiStandardDeviationCalculator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.SemiStandardDeviationCalculator : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.SemiStandardDeviationCalculator__void_<init><boolean>>
	CONSUME 
		boolean : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.SemiStandardDeviationCalculator : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.StatisticsCalculatorFactory__com.opengamma.analytics.math.function.Function_getCalculator<java.lang.String>>
	CONSUME 
		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.Function : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.StatisticsCalculatorFactory__java.lang.String_getCalculatorName<com.opengamma.analytics.math.function.Function>>
	CONSUME 
		com.opengamma.analytics.math.function.Function : 1;
	PRODUCE 
		java.lang.String : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.robust.InterquartileRangeCalculator__java.lang.Double_evaluate<double[]>>
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.robust.InterquartileRangeCalculator : 1,

		double[] : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.robust.InterquartileRangeCalculator__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.robust.InterquartileRangeCalculator : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.robust.InterquartileRangeCalculator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.robust.InterquartileRangeCalculator : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.robust.SampleMedianAbsoluteDeviationCalculator__java.lang.Double_evaluate<double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.statistics.descriptive.robust.SampleMedianAbsoluteDeviationCalculator : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.robust.SampleMedianAbsoluteDeviationCalculator__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.statistics.descriptive.robust.SampleMedianAbsoluteDeviationCalculator : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.robust.SampleMedianAbsoluteDeviationCalculator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.robust.SampleMedianAbsoluteDeviationCalculator : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.robust.TrimmedMeanCalculator__java.lang.Double_evaluate<double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.statistics.descriptive.robust.TrimmedMeanCalculator : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.robust.TrimmedMeanCalculator__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.robust.TrimmedMeanCalculator : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.robust.TrimmedMeanCalculator__void_<init><double>>
	CONSUME 
		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.robust.TrimmedMeanCalculator : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.robust.WinsorizedMeanCalculator__java.lang.Double_evaluate<double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.statistics.descriptive.robust.WinsorizedMeanCalculator : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.robust.WinsorizedMeanCalculator__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.robust.WinsorizedMeanCalculator : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.statistics.descriptive.robust.WinsorizedMeanCalculator__void_<init><double>>
	CONSUME 
		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.robust.WinsorizedMeanCalculator : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.BivariateNormalDistribution__double_getCDF<double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.statistics.distribution.BivariateNormalDistribution : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.BivariateNormalDistribution__double_getCDF<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.BivariateNormalDistribution : 1,

		java.lang.Object : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.BivariateNormalDistribution__double_getInverseCDF<double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.statistics.distribution.BivariateNormalDistribution : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.BivariateNormalDistribution__double_getInverseCDF<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.BivariateNormalDistribution : 1,

		java.lang.Object : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.BivariateNormalDistribution__double_getPDF<double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.statistics.distribution.BivariateNormalDistribution : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.BivariateNormalDistribution__double_getPDF<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.BivariateNormalDistribution : 1,

		java.lang.Object : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.BivariateNormalDistribution__double_nextRandom<>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.BivariateNormalDistribution : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.BivariateNormalDistribution__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.BivariateNormalDistribution : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.ChiSquareDistribution__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.ChiSquareDistribution : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.ChiSquareDistribution__double_getCDF<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.ChiSquareDistribution : 1,

		java.lang.Double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.ChiSquareDistribution__double_getCDF<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.ChiSquareDistribution : 1,

		java.lang.Object : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.ChiSquareDistribution__double_getDegreesOfFreedom<>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.ChiSquareDistribution : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.ChiSquareDistribution__double_getInverseCDF<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.ChiSquareDistribution : 1,

		java.lang.Double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.ChiSquareDistribution__double_getInverseCDF<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.ChiSquareDistribution : 1,

		java.lang.Object : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.ChiSquareDistribution__double_getPDF<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.ChiSquareDistribution : 1,

		java.lang.Double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.ChiSquareDistribution__double_getPDF<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.ChiSquareDistribution : 1,

		java.lang.Object : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.ChiSquareDistribution__double_nextRandom<>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.ChiSquareDistribution : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.ChiSquareDistribution__void_<init><double>>
	CONSUME 
		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.ChiSquareDistribution : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.ChiSquareDistribution__void_<init><double.cern.jet.random.engine.RandomEngine>>
	CONSUME 
		cern.jet.random.engine.RandomEngine : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.ChiSquareDistribution : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.GammaDistribution__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.GammaDistribution : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.GammaDistribution__double_getCDF<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.GammaDistribution : 1,

		java.lang.Double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.GammaDistribution__double_getCDF<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.GammaDistribution : 1,

		java.lang.Object : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.GammaDistribution__double_getInverseCDF<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.GammaDistribution : 1,

		java.lang.Double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.GammaDistribution__double_getInverseCDF<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.GammaDistribution : 1,

		java.lang.Object : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.GammaDistribution__double_getK<>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.GammaDistribution : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.GammaDistribution__double_getPDF<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.GammaDistribution : 1,

		java.lang.Double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.GammaDistribution__double_getPDF<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.GammaDistribution : 1,

		java.lang.Object : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.GammaDistribution__double_getTheta<>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.GammaDistribution : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.GammaDistribution__double_nextRandom<>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.GammaDistribution : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.GammaDistribution__void_<init><double.double>>
	CONSUME 
		double : 2;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.GammaDistribution : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.GammaDistribution__void_<init><double.double.cern.jet.random.engine.RandomEngine>>
	CONSUME 
		cern.jet.random.engine.RandomEngine : 1,

		double : 2;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.GammaDistribution : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution__double_getCDF<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution : 1,

		java.lang.Double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution__double_getCDF<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution : 1,

		java.lang.Object : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution__double_getInverseCDF<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution : 1,

		java.lang.Double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution__double_getInverseCDF<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution : 1,

		java.lang.Object : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution__double_getKsi<>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution__double_getMu<>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution__double_getPDF<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution : 1,

		java.lang.Double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution__double_getPDF<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution : 1,

		java.lang.Object : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution__double_getSigma<>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution__double_nextRandom<>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution__void_<init><double.double.double>>
	CONSUME 
		double : 3;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.GeneralizedParetoDistribution__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.GeneralizedParetoDistribution : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.GeneralizedParetoDistribution__double_getCDF<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.GeneralizedParetoDistribution : 1,

		java.lang.Double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.GeneralizedParetoDistribution__double_getCDF<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.GeneralizedParetoDistribution : 1,

		java.lang.Object : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.GeneralizedParetoDistribution__double_getInverseCDF<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.GeneralizedParetoDistribution : 1,

		java.lang.Double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.GeneralizedParetoDistribution__double_getInverseCDF<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.GeneralizedParetoDistribution : 1,

		java.lang.Object : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.GeneralizedParetoDistribution__double_getKsi<>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.GeneralizedParetoDistribution : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.GeneralizedParetoDistribution__double_getMu<>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.GeneralizedParetoDistribution : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.GeneralizedParetoDistribution__double_getPDF<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.GeneralizedParetoDistribution : 1,

		java.lang.Double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.GeneralizedParetoDistribution__double_getPDF<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.GeneralizedParetoDistribution : 1,

		java.lang.Object : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.GeneralizedParetoDistribution__double_getSigma<>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.GeneralizedParetoDistribution : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.GeneralizedParetoDistribution__double_nextRandom<>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.GeneralizedParetoDistribution : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.GeneralizedParetoDistribution__void_<init><double.double.double>>
	CONSUME 
		double : 3;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.GeneralizedParetoDistribution : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.GeneralizedParetoDistribution__void_<init><double.double.double.cern.jet.random.engine.RandomEngine>>
	CONSUME 
		cern.jet.random.engine.RandomEngine : 1,

		double : 3;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.GeneralizedParetoDistribution : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.LaplaceDistribution__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.LaplaceDistribution : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.LaplaceDistribution__double_getB<>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.LaplaceDistribution : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.LaplaceDistribution__double_getCDF<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.LaplaceDistribution : 1,

		java.lang.Double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.LaplaceDistribution__double_getCDF<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.LaplaceDistribution : 1,

		java.lang.Object : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.LaplaceDistribution__double_getInverseCDF<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.LaplaceDistribution : 1,

		java.lang.Double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.LaplaceDistribution__double_getInverseCDF<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.LaplaceDistribution : 1,

		java.lang.Object : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.LaplaceDistribution__double_getMu<>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.LaplaceDistribution : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.LaplaceDistribution__double_getPDF<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.LaplaceDistribution : 1,

		java.lang.Double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.LaplaceDistribution__double_getPDF<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.LaplaceDistribution : 1,

		java.lang.Object : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.LaplaceDistribution__double_nextRandom<>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.LaplaceDistribution : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.LaplaceDistribution__void_<init><double.double>>
	CONSUME 
		double : 2;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.LaplaceDistribution : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.LaplaceDistribution__void_<init><double.double.cern.jet.random.engine.RandomEngine>>
	CONSUME 
		cern.jet.random.engine.RandomEngine : 1,

		double : 2;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.LaplaceDistribution : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.NonCentralChiSquaredDistribution__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.NonCentralChiSquaredDistribution : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.NonCentralChiSquaredDistribution__double_getCDF<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.NonCentralChiSquaredDistribution : 1,

		java.lang.Double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.NonCentralChiSquaredDistribution__double_getCDF<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.NonCentralChiSquaredDistribution : 1,

		java.lang.Object : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.NonCentralChiSquaredDistribution__double_getDegrees<>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.NonCentralChiSquaredDistribution : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.NonCentralChiSquaredDistribution__double_getInverseCDF<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.NonCentralChiSquaredDistribution : 1,

		java.lang.Double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.NonCentralChiSquaredDistribution__double_getInverseCDF<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.NonCentralChiSquaredDistribution : 1,

		java.lang.Object : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.NonCentralChiSquaredDistribution__double_getNonCentrality<>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.NonCentralChiSquaredDistribution : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.NonCentralChiSquaredDistribution__double_getPDF<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.NonCentralChiSquaredDistribution : 1,

		java.lang.Double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.NonCentralChiSquaredDistribution__double_getPDF<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.NonCentralChiSquaredDistribution : 1,

		java.lang.Object : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.NonCentralChiSquaredDistribution__double_nextRandom<>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.NonCentralChiSquaredDistribution : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.NonCentralChiSquaredDistribution__void_<init><double.double>>
	CONSUME 
		double : 2;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.NonCentralChiSquaredDistribution : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.NormalDistribution__boolean_equals<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.statistics.distribution.NormalDistribution : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.NormalDistribution__double_getCDF<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.statistics.distribution.NormalDistribution : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.NormalDistribution__double_getCDF<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.statistics.distribution.NormalDistribution : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.NormalDistribution__double_getInverseCDF<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.statistics.distribution.NormalDistribution : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.NormalDistribution__double_getInverseCDF<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.statistics.distribution.NormalDistribution : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.NormalDistribution__double_getMean<>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.NormalDistribution : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.NormalDistribution__double_getPDF<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.statistics.distribution.NormalDistribution : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.NormalDistribution__double_getPDF<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.statistics.distribution.NormalDistribution : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.NormalDistribution__double_getStandardDeviation<>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.NormalDistribution : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.NormalDistribution__double_nextRandom<>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.NormalDistribution : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.NormalDistribution__void_<init><double.double>>
	CONSUME 
		double : 2;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.NormalDistribution : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.NormalDistribution__void_<init><double.double.cern.jet.random.engine.RandomEngine>>
	CONSUME 
		cern.jet.random.engine.RandomEngine : 1,

		double : 2;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.NormalDistribution : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution__double_getCDF<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution : 1,

		java.lang.Object : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution__double_getInverseCDF<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution : 1,

		java.lang.Object : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution__double_getPDF<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution : 1,

		java.lang.Object : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution__double_nextRandom<>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.StudentTDistribution__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.StudentTDistribution : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.StudentTDistribution__double_getCDF<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.StudentTDistribution : 1,

		java.lang.Double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.StudentTDistribution__double_getCDF<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.StudentTDistribution : 1,

		java.lang.Object : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.StudentTDistribution__double_getDegreesOfFreedom<>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.StudentTDistribution : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.StudentTDistribution__double_getInverseCDF<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.StudentTDistribution : 1,

		java.lang.Double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.StudentTDistribution__double_getInverseCDF<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.StudentTDistribution : 1,

		java.lang.Object : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.StudentTDistribution__double_getPDF<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.StudentTDistribution : 1,

		java.lang.Double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.StudentTDistribution__double_getPDF<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.StudentTDistribution : 1,

		java.lang.Object : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.StudentTDistribution__double_nextRandom<>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.StudentTDistribution : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.StudentTDistribution__void_<init><double>>
	CONSUME 
		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.StudentTDistribution : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.StudentTDistribution__void_<init><double.cern.jet.random.engine.RandomEngine>>
	CONSUME 
		cern.jet.random.engine.RandomEngine : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.StudentTDistribution : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.StudentTOneTailedCriticalValueCalculator__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.StudentTOneTailedCriticalValueCalculator : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.StudentTOneTailedCriticalValueCalculator__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.StudentTOneTailedCriticalValueCalculator : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.StudentTOneTailedCriticalValueCalculator__void_<init><double>>
	CONSUME 
		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.StudentTOneTailedCriticalValueCalculator : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.StudentTOneTailedCriticalValueCalculator__void_<init><double.cern.jet.random.engine.RandomEngine>>
	CONSUME 
		cern.jet.random.engine.RandomEngine : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.StudentTOneTailedCriticalValueCalculator : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.StudentTTwoTailedCriticalValueCalculator__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.StudentTTwoTailedCriticalValueCalculator : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.StudentTTwoTailedCriticalValueCalculator__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.StudentTTwoTailedCriticalValueCalculator : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.StudentTTwoTailedCriticalValueCalculator__void_<init><double>>
	CONSUME 
		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.StudentTTwoTailedCriticalValueCalculator : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.StudentTTwoTailedCriticalValueCalculator__void_<init><double.cern.jet.random.engine.RandomEngine>>
	CONSUME 
		cern.jet.random.engine.RandomEngine : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.StudentTTwoTailedCriticalValueCalculator : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.fnlib.D1MACH__double_five<>>
	CONSUME 
		void : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.fnlib.D1MACH__double_four<>>
	CONSUME 
		void : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.fnlib.D1MACH__double_one<>>
	CONSUME 
		void : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.fnlib.D1MACH__double_three<>>
	CONSUME 
		void : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.fnlib.D1MACH__double_two<>>
	CONSUME 
		void : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.fnlib.D1MACH__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.fnlib.D1MACH : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.fnlib.DCSEVL__double_getDCSEVL<double.double[].int>>
	CONSUME 
		double[] : 1,

		double : 1,

		int : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.fnlib.DCSEVL__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.fnlib.DCSEVL : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.fnlib.DERF__double_getErf<double>>
	CONSUME 
		double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.fnlib.DERF__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.fnlib.DERF : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.fnlib.DERFC__double_getErfc<double>>
	CONSUME 
		double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.fnlib.DERFC__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.fnlib.DERFC : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.fnlib.INITDS__int_getInitds<double[].int.double>>
	CONSUME 
		double[] : 1,

		double : 1,

		int : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.statistics.distribution.fnlib.INITDS__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.fnlib.INITDS : 1;
TRANSITION <com.opengamma.analytics.math.statistics.estimation.ChiSquareDistributionMomentEstimator__com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution_evaluate<double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.statistics.estimation.ChiSquareDistributionMomentEstimator : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution : 1;
TRANSITION <com.opengamma.analytics.math.statistics.estimation.ChiSquareDistributionMomentEstimator__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.estimation.ChiSquareDistributionMomentEstimator : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.statistics.estimation.ChiSquareDistributionMomentEstimator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.estimation.ChiSquareDistributionMomentEstimator : 1;
TRANSITION <com.opengamma.analytics.math.statistics.estimation.DistributionParameterEstimator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.estimation.DistributionParameterEstimator : 1;
TRANSITION <com.opengamma.analytics.math.statistics.estimation.GammaDistributionMomentEstimator__com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution_evaluate<double[]>>
	CONSUME 
		com.opengamma.analytics.math.statistics.estimation.GammaDistributionMomentEstimator : 1,

		double[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution : 1;
TRANSITION <com.opengamma.analytics.math.statistics.estimation.GammaDistributionMomentEstimator__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.estimation.GammaDistributionMomentEstimator : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.statistics.estimation.GammaDistributionMomentEstimator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.estimation.GammaDistributionMomentEstimator : 1;
TRANSITION <com.opengamma.analytics.math.statistics.estimation.GeneralizedParetoDistributionMomentEstimator$1__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.statistics.estimation.GeneralizedParetoDistributionMomentEstimator$1 : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.estimation.GeneralizedParetoDistributionMomentEstimator$1__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.statistics.estimation.GeneralizedParetoDistributionMomentEstimator$1 : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.statistics.estimation.GeneralizedParetoDistributionMomentEstimator__com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution_evaluate<double[]>>
	CONSUME 
		com.opengamma.analytics.math.statistics.estimation.GeneralizedParetoDistributionMomentEstimator : 1,

		double[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution : 1;
TRANSITION <com.opengamma.analytics.math.statistics.estimation.GeneralizedParetoDistributionMomentEstimator__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.estimation.GeneralizedParetoDistributionMomentEstimator : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.statistics.estimation.GeneralizedParetoDistributionMomentEstimator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.estimation.GeneralizedParetoDistributionMomentEstimator : 1;
TRANSITION <com.opengamma.analytics.math.statistics.estimation.LaplaceDistributionMaximumLikelihoodEstimator__com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution_evaluate<double[]>>
	CONSUME 
		com.opengamma.analytics.math.statistics.estimation.LaplaceDistributionMaximumLikelihoodEstimator : 1,

		double[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution : 1;
TRANSITION <com.opengamma.analytics.math.statistics.estimation.LaplaceDistributionMaximumLikelihoodEstimator__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.estimation.LaplaceDistributionMaximumLikelihoodEstimator : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.statistics.estimation.LaplaceDistributionMaximumLikelihoodEstimator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.estimation.LaplaceDistributionMaximumLikelihoodEstimator : 1;
TRANSITION <com.opengamma.analytics.math.statistics.estimation.NormalDistributionMaximumLikelihoodEstimator__com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution_evaluate<double[]>>
	CONSUME 
		com.opengamma.analytics.math.statistics.estimation.NormalDistributionMaximumLikelihoodEstimator : 1,

		double[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution : 1;
TRANSITION <com.opengamma.analytics.math.statistics.estimation.NormalDistributionMaximumLikelihoodEstimator__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.estimation.NormalDistributionMaximumLikelihoodEstimator : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.statistics.estimation.NormalDistributionMaximumLikelihoodEstimator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.estimation.NormalDistributionMaximumLikelihoodEstimator : 1;
TRANSITION <com.opengamma.analytics.math.statistics.estimation.NormalDistributionMomentEstimator__com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution_evaluate<double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.statistics.estimation.NormalDistributionMomentEstimator : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution : 1;
TRANSITION <com.opengamma.analytics.math.statistics.estimation.NormalDistributionMomentEstimator__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.estimation.NormalDistributionMomentEstimator : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.statistics.estimation.NormalDistributionMomentEstimator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.estimation.NormalDistributionMomentEstimator : 1;
TRANSITION <com.opengamma.analytics.math.statistics.estimation.StudentTDistributionMaximumLikelihoodEstimator$1__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.statistics.estimation.StudentTDistributionMaximumLikelihoodEstimator$1 : 1,

		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.estimation.StudentTDistributionMaximumLikelihoodEstimator$1__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.estimation.StudentTDistributionMaximumLikelihoodEstimator$1 : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.statistics.estimation.StudentTDistributionMaximumLikelihoodEstimator__com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution_evaluate<double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.statistics.estimation.StudentTDistributionMaximumLikelihoodEstimator : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution : 1;
TRANSITION <com.opengamma.analytics.math.statistics.estimation.StudentTDistributionMaximumLikelihoodEstimator__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.statistics.estimation.StudentTDistributionMaximumLikelihoodEstimator : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.statistics.estimation.StudentTDistributionMaximumLikelihoodEstimator__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.estimation.StudentTDistributionMaximumLikelihoodEstimator : 1;
TRANSITION <com.opengamma.analytics.math.statistics.leastsquare.GeneralizedLeastSquare__com.opengamma.analytics.math.statistics.leastsquare.GeneralizedLeastSquareResults_solve<java.lang.Object[].double[].double[].java.util.List>>
	CONSUME 
		java.util.List : 1,

		java.lang.Object[] : 1,

		double[] : 2,

		com.opengamma.analytics.math.statistics.leastsquare.GeneralizedLeastSquare : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.leastsquare.GeneralizedLeastSquareResults : 1;
TRANSITION <com.opengamma.analytics.math.statistics.leastsquare.GeneralizedLeastSquare__com.opengamma.analytics.math.statistics.leastsquare.GeneralizedLeastSquareResults_solve<java.util.List.java.util.List.java.util.List.java.util.List>>
	CONSUME 
		java.util.List : 4,

		com.opengamma.analytics.math.statistics.leastsquare.GeneralizedLeastSquare : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.leastsquare.GeneralizedLeastSquareResults : 1;
TRANSITION <com.opengamma.analytics.math.statistics.leastsquare.GeneralizedLeastSquare__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.leastsquare.GeneralizedLeastSquare : 1;
TRANSITION <com.opengamma.analytics.math.statistics.leastsquare.GeneralizedLeastSquareResults__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.leastsquare.GeneralizedLeastSquareResults : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.statistics.leastsquare.GeneralizedLeastSquareResults__com.opengamma.analytics.math.function.Function1D_getFunction<>>
	CONSUME 
		com.opengamma.analytics.math.statistics.leastsquare.GeneralizedLeastSquareResults : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.Function1D : 1;
TRANSITION <com.opengamma.analytics.math.statistics.leastsquare.GeneralizedLeastSquareResults__void_<init><java.util.List.double.com.opengamma.analytics.math.matrix.DoubleMatrix1D.com.opengamma.analytics.math.matrix.DoubleMatrix2D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1,

		java.util.List : 1,

		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.leastsquare.GeneralizedLeastSquareResults : 1;
TRANSITION <com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResults__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResults : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResults__com.opengamma.analytics.math.matrix.DoubleMatrix1D_getFitParameters<>>
	CONSUME 
		com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResults : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResults__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getCovariance<>>
	CONSUME 
		com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResults : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResults__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getFittingParameterSensitivityToData<>>
	CONSUME 
		com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResults : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResults__double_getChiSq<>>
	CONSUME 
		com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResults : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResults__void_<init><com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResults>>
	CONSUME 
		com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResults : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResults : 1;
TRANSITION <com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResults__void_<init><double.com.opengamma.analytics.math.matrix.DoubleMatrix1D.com.opengamma.analytics.math.matrix.DoubleMatrix2D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1,

		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResults : 1;
TRANSITION <com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResults__void_<init><double.com.opengamma.analytics.math.matrix.DoubleMatrix1D.com.opengamma.analytics.math.matrix.DoubleMatrix2D.com.opengamma.analytics.math.matrix.DoubleMatrix2D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 2,

		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResults : 1;
TRANSITION <com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform__com.opengamma.analytics.math.matrix.DoubleMatrix1D_getModelParameters<>>
	CONSUME 
		com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform__com.opengamma.analytics.math.matrix.DoubleMatrix2D_getModelParameterSensitivityToData<>>
	CONSUME 
		com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform__void_<init><com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResults>>
	CONSUME 
		com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResults : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform : 1;
TRANSITION <com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform__void_<init><com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResults.com.opengamma.analytics.math.minimization.NonLinearParameterTransforms>>
	CONSUME 
		com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResults : 1,

		com.opengamma.analytics.math.minimization.NonLinearParameterTransforms : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform : 1;
TRANSITION <com.opengamma.analytics.math.statistics.leastsquare.LeastSquareWithPenaltyResults__double_getPenalty<>>
	CONSUME 
		com.opengamma.analytics.math.statistics.leastsquare.LeastSquareWithPenaltyResults : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.statistics.leastsquare.LeastSquareWithPenaltyResults__void_<init><double.double.com.opengamma.analytics.math.matrix.DoubleMatrix1D.com.opengamma.analytics.math.matrix.DoubleMatrix2D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1,

		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		double : 2;
	PRODUCE 
		com.opengamma.analytics.math.statistics.leastsquare.LeastSquareWithPenaltyResults : 1;
TRANSITION <com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare$1__java.lang.Boolean_evaluate<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare$1 : 1;
	PRODUCE 
		java.lang.Boolean : 1;
TRANSITION <com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare$1__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare$1 : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare$2__com.opengamma.analytics.math.matrix.DoubleMatrix1D_evaluate<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare$2 : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare$2__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare$2 : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare$3__com.opengamma.analytics.math.matrix.DoubleMatrix1D_evaluate<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare$3 : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare$3__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare$3 : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare$4__com.opengamma.analytics.math.matrix.DoubleMatrix2D_evaluate<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare$4 : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare$4__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare$4 : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare__com.opengamma.analytics.math.matrix.DoubleMatrix2D_calInverseJacobian<com.opengamma.analytics.math.matrix.DoubleMatrix1D.com.opengamma.analytics.math.function.Function1D.com.opengamma.analytics.math.function.Function1D.com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 2,

		com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare : 1,

		com.opengamma.analytics.math.function.Function1D : 2;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare__com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResults_solve<com.opengamma.analytics.math.matrix.DoubleMatrix1D.com.opengamma.analytics.math.function.Function1D.com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 2,

		com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResults : 1;
TRANSITION <com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare__com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResults_solve<com.opengamma.analytics.math.matrix.DoubleMatrix1D.com.opengamma.analytics.math.matrix.DoubleMatrix1D.com.opengamma.analytics.math.function.Function1D.com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 3,

		com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResults : 1;
TRANSITION <com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare__com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResults_solve<com.opengamma.analytics.math.matrix.DoubleMatrix1D.com.opengamma.analytics.math.matrix.DoubleMatrix1D.com.opengamma.analytics.math.function.ParameterizedFunction.com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 3,

		com.opengamma.analytics.math.function.ParameterizedFunction : 1,

		com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResults : 1;
TRANSITION <com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare : 1;
TRANSITION <com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare__void_<init><com.opengamma.analytics.math.linearalgebra.Decomposition.com.opengamma.analytics.math.matrix.MatrixAlgebra.double>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.Decomposition : 1,

		double : 1,

		com.opengamma.analytics.math.matrix.MatrixAlgebra : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare : 1;
TRANSITION <com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquareWithPenalty$1__java.lang.Boolean_evaluate<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1,

		com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquareWithPenalty$1 : 1;
	PRODUCE 
		java.lang.Boolean : 1;
TRANSITION <com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquareWithPenalty$1__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquareWithPenalty$1 : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquareWithPenalty__com.opengamma.analytics.math.statistics.leastsquare.LeastSquareWithPenaltyResults_solve<com.opengamma.analytics.math.matrix.DoubleMatrix1D.com.opengamma.analytics.math.function.Function1D.com.opengamma.analytics.math.matrix.DoubleMatrix1D.com.opengamma.analytics.math.matrix.DoubleMatrix2D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1,

		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 2,

		com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquareWithPenalty : 1,

		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.leastsquare.LeastSquareWithPenaltyResults : 1;
TRANSITION <com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquareWithPenalty__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquareWithPenalty : 1;
TRANSITION <com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquareWithPenalty__void_<init><com.opengamma.analytics.math.linearalgebra.Decomposition>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.Decomposition : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquareWithPenalty : 1;
TRANSITION <com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquareWithPenalty__void_<init><com.opengamma.analytics.math.linearalgebra.Decomposition.com.opengamma.analytics.math.matrix.MatrixAlgebra.double>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.Decomposition : 1,

		double : 1,

		com.opengamma.analytics.math.matrix.MatrixAlgebra : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquareWithPenalty : 1;
TRANSITION <com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquareWithPenalty__void_<init><com.opengamma.analytics.math.linearalgebra.Decomposition.double>>
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.Decomposition : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquareWithPenalty : 1;
TRANSITION <com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquareWithPenalty__void_<init><double>>
	CONSUME 
		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquareWithPenalty : 1;
TRANSITION <com.opengamma.analytics.math.surface.ConstantDoublesSurface__boolean_equals<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.surface.ConstantDoublesSurface : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.surface.ConstantDoublesSurface__com.opengamma.analytics.math.surface.ConstantDoublesSurface_'from'<double>>
	CONSUME 
		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.ConstantDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.ConstantDoublesSurface__com.opengamma.analytics.math.surface.ConstantDoublesSurface_'from'<double.java.lang.String>>
	CONSUME 
		double : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.ConstantDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.ConstantDoublesSurface__int_size<>>
	CONSUME 
		com.opengamma.analytics.math.surface.ConstantDoublesSurface : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.surface.ConstantDoublesSurface__java.lang.Double_getZValue<com.opengamma.util.tuple.Pair>>
	CONSUME 
		com.opengamma.analytics.math.surface.ConstantDoublesSurface : 1,

		com.opengamma.util.tuple.Pair : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.surface.ConstantDoublesSurface__java.lang.Double_getZValue<java.lang.Double.java.lang.Double>>
	CONSUME 
		java.lang.Double : 2,

		com.opengamma.analytics.math.surface.ConstantDoublesSurface : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.surface.ConstantDoublesSurface__java.lang.Double[]_getXData<>>
	CONSUME 
		com.opengamma.analytics.math.surface.ConstantDoublesSurface : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.surface.ConstantDoublesSurface__java.lang.Double[]_getYData<>>
	CONSUME 
		com.opengamma.analytics.math.surface.ConstantDoublesSurface : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.surface.ConstantDoublesSurface__java.lang.Double[]_getZData<>>
	CONSUME 
		com.opengamma.analytics.math.surface.ConstantDoublesSurface : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.surface.ConstantDoublesSurface__java.lang.Object_getZValue<com.opengamma.util.tuple.Pair>>
	CONSUME 
		com.opengamma.analytics.math.surface.ConstantDoublesSurface : 1,

		com.opengamma.util.tuple.Pair : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.surface.ConstantDoublesSurface__java.lang.Object_getZValue<java.lang.Object.java.lang.Object>>
	CONSUME 
		java.lang.Object : 2,

		com.opengamma.analytics.math.surface.ConstantDoublesSurface : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.surface.ConstantDoublesSurface__java.lang.Object[]_getXData<>>
	CONSUME 
		com.opengamma.analytics.math.surface.ConstantDoublesSurface : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.surface.ConstantDoublesSurface__java.lang.Object[]_getYData<>>
	CONSUME 
		com.opengamma.analytics.math.surface.ConstantDoublesSurface : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.surface.ConstantDoublesSurface__java.lang.Object[]_getZData<>>
	CONSUME 
		com.opengamma.analytics.math.surface.ConstantDoublesSurface : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.surface.ConstantDoublesSurface__void_<init><double>>
	CONSUME 
		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.ConstantDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.ConstantDoublesSurface__void_<init><double.java.lang.String>>
	CONSUME 
		double : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.ConstantDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.ConstantSurfaceAdditiveShiftFunction__com.opengamma.analytics.math.surface.ConstantDoublesSurface_evaluate<com.opengamma.analytics.math.surface.ConstantDoublesSurface.double>>
	CONSUME 
		com.opengamma.analytics.math.surface.ConstantSurfaceAdditiveShiftFunction : 1,

		double : 1,

		com.opengamma.analytics.math.surface.ConstantDoublesSurface : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.ConstantDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.ConstantSurfaceAdditiveShiftFunction__com.opengamma.analytics.math.surface.ConstantDoublesSurface_evaluate<com.opengamma.analytics.math.surface.ConstantDoublesSurface.double.double.double>>
	CONSUME 
		com.opengamma.analytics.math.surface.ConstantSurfaceAdditiveShiftFunction : 1,

		double : 3,

		com.opengamma.analytics.math.surface.ConstantDoublesSurface : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.ConstantDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.ConstantSurfaceAdditiveShiftFunction__com.opengamma.analytics.math.surface.ConstantDoublesSurface_evaluate<com.opengamma.analytics.math.surface.ConstantDoublesSurface.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.surface.ConstantSurfaceAdditiveShiftFunction : 1,

		double : 1,

		java.lang.String : 1,

		com.opengamma.analytics.math.surface.ConstantDoublesSurface : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.ConstantDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.ConstantSurfaceAdditiveShiftFunction__com.opengamma.analytics.math.surface.ConstantDoublesSurface_evaluate<com.opengamma.analytics.math.surface.ConstantDoublesSurface.double[].double[].double[]>>
	CONSUME 
		double[] : 3,

		com.opengamma.analytics.math.surface.ConstantSurfaceAdditiveShiftFunction : 1,

		com.opengamma.analytics.math.surface.ConstantDoublesSurface : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.ConstantDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.ConstantSurfaceAdditiveShiftFunction__com.opengamma.analytics.math.surface.Surface_evaluate<com.opengamma.analytics.math.surface.Surface.double>>
	CONSUME 
		com.opengamma.analytics.math.surface.Surface : 1,

		com.opengamma.analytics.math.surface.ConstantSurfaceAdditiveShiftFunction : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface : 1;
TRANSITION <com.opengamma.analytics.math.surface.ConstantSurfaceAdditiveShiftFunction__com.opengamma.analytics.math.surface.Surface_evaluate<com.opengamma.analytics.math.surface.Surface.double.double.double>>
	CONSUME 
		com.opengamma.analytics.math.surface.Surface : 1,

		com.opengamma.analytics.math.surface.ConstantSurfaceAdditiveShiftFunction : 1,

		double : 3;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface : 1;
TRANSITION <com.opengamma.analytics.math.surface.ConstantSurfaceAdditiveShiftFunction__com.opengamma.analytics.math.surface.Surface_evaluate<com.opengamma.analytics.math.surface.Surface.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.surface.Surface : 1,

		com.opengamma.analytics.math.surface.ConstantSurfaceAdditiveShiftFunction : 1,

		double : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface : 1;
TRANSITION <com.opengamma.analytics.math.surface.ConstantSurfaceAdditiveShiftFunction__com.opengamma.analytics.math.surface.Surface_evaluate<com.opengamma.analytics.math.surface.Surface.double[].double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.surface.Surface : 1,

		double[] : 3,

		com.opengamma.analytics.math.surface.ConstantSurfaceAdditiveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface : 1;
TRANSITION <com.opengamma.analytics.math.surface.ConstantSurfaceAdditiveShiftFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.ConstantSurfaceAdditiveShiftFunction : 1;
TRANSITION <com.opengamma.analytics.math.surface.ConstantSurfaceMultiplicativeShiftFunction__com.opengamma.analytics.math.surface.ConstantDoublesSurface_evaluate<com.opengamma.analytics.math.surface.ConstantDoublesSurface.double>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.surface.ConstantDoublesSurface : 1,

		com.opengamma.analytics.math.surface.ConstantSurfaceMultiplicativeShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.ConstantDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.ConstantSurfaceMultiplicativeShiftFunction__com.opengamma.analytics.math.surface.ConstantDoublesSurface_evaluate<com.opengamma.analytics.math.surface.ConstantDoublesSurface.double.double.double>>
	CONSUME 
		double : 3,

		com.opengamma.analytics.math.surface.ConstantDoublesSurface : 1,

		com.opengamma.analytics.math.surface.ConstantSurfaceMultiplicativeShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.ConstantDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.ConstantSurfaceMultiplicativeShiftFunction__com.opengamma.analytics.math.surface.ConstantDoublesSurface_evaluate<com.opengamma.analytics.math.surface.ConstantDoublesSurface.double.java.lang.String>>
	CONSUME 
		double : 1,

		java.lang.String : 1,

		com.opengamma.analytics.math.surface.ConstantDoublesSurface : 1,

		com.opengamma.analytics.math.surface.ConstantSurfaceMultiplicativeShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.ConstantDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.ConstantSurfaceMultiplicativeShiftFunction__com.opengamma.analytics.math.surface.ConstantDoublesSurface_evaluate<com.opengamma.analytics.math.surface.ConstantDoublesSurface.double[].double[].double[]>>
	CONSUME 
		double[] : 3,

		com.opengamma.analytics.math.surface.ConstantDoublesSurface : 1,

		com.opengamma.analytics.math.surface.ConstantSurfaceMultiplicativeShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.ConstantDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.ConstantSurfaceMultiplicativeShiftFunction__com.opengamma.analytics.math.surface.Surface_evaluate<com.opengamma.analytics.math.surface.Surface.double>>
	CONSUME 
		com.opengamma.analytics.math.surface.Surface : 1,

		double : 1,

		com.opengamma.analytics.math.surface.ConstantSurfaceMultiplicativeShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface : 1;
TRANSITION <com.opengamma.analytics.math.surface.ConstantSurfaceMultiplicativeShiftFunction__com.opengamma.analytics.math.surface.Surface_evaluate<com.opengamma.analytics.math.surface.Surface.double.double.double>>
	CONSUME 
		com.opengamma.analytics.math.surface.Surface : 1,

		double : 3,

		com.opengamma.analytics.math.surface.ConstantSurfaceMultiplicativeShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface : 1;
TRANSITION <com.opengamma.analytics.math.surface.ConstantSurfaceMultiplicativeShiftFunction__com.opengamma.analytics.math.surface.Surface_evaluate<com.opengamma.analytics.math.surface.Surface.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.surface.Surface : 1,

		double : 1,

		java.lang.String : 1,

		com.opengamma.analytics.math.surface.ConstantSurfaceMultiplicativeShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface : 1;
TRANSITION <com.opengamma.analytics.math.surface.ConstantSurfaceMultiplicativeShiftFunction__com.opengamma.analytics.math.surface.Surface_evaluate<com.opengamma.analytics.math.surface.Surface.double[].double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.surface.Surface : 1,

		double[] : 3,

		com.opengamma.analytics.math.surface.ConstantSurfaceMultiplicativeShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface : 1;
TRANSITION <com.opengamma.analytics.math.surface.ConstantSurfaceMultiplicativeShiftFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.ConstantSurfaceMultiplicativeShiftFunction : 1;
TRANSITION <com.opengamma.analytics.math.surface.DoublesSurface__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.surface.DoublesSurface : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.surface.DoublesSurface__double[]_getXDataAsPrimitive<>>
	CONSUME 
		com.opengamma.analytics.math.surface.DoublesSurface : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.surface.DoublesSurface__double[]_getYDataAsPrimitive<>>
	CONSUME 
		com.opengamma.analytics.math.surface.DoublesSurface : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.surface.DoublesSurface__double[]_getZDataAsPrimitive<>>
	CONSUME 
		com.opengamma.analytics.math.surface.DoublesSurface : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.surface.DoublesSurface__int_size<>>
	CONSUME 
		com.opengamma.analytics.math.surface.DoublesSurface : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.surface.DoublesSurface__java.lang.Double[]_getXData<>>
	CONSUME 
		com.opengamma.analytics.math.surface.DoublesSurface : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.surface.DoublesSurface__java.lang.Double[]_getYData<>>
	CONSUME 
		com.opengamma.analytics.math.surface.DoublesSurface : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.surface.DoublesSurface__java.lang.Double[]_getZData<>>
	CONSUME 
		com.opengamma.analytics.math.surface.DoublesSurface : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.surface.DoublesSurface__java.lang.Object[]_getXData<>>
	CONSUME 
		com.opengamma.analytics.math.surface.DoublesSurface : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.surface.DoublesSurface__java.lang.Object[]_getYData<>>
	CONSUME 
		com.opengamma.analytics.math.surface.DoublesSurface : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.surface.DoublesSurface__java.lang.Object[]_getZData<>>
	CONSUME 
		com.opengamma.analytics.math.surface.DoublesSurface : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.surface.DoublesSurface__void_<init><com.opengamma.util.tuple.DoublesPair[].double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.util.tuple.DoublesPair[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.DoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.DoublesSurface__void_<init><com.opengamma.util.tuple.DoublesPair[].double[].java.lang.String>>
	CONSUME 
		double[] : 1,

		java.lang.String : 1,

		com.opengamma.util.tuple.DoublesPair[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.DoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.DoublesSurface__void_<init><com.opengamma.util.tuple.DoublesPair[].java.lang.Double[]>>
	CONSUME 
		java.lang.Double[] : 1,

		com.opengamma.util.tuple.DoublesPair[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.DoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.DoublesSurface__void_<init><com.opengamma.util.tuple.DoublesPair[].java.lang.Double[].java.lang.String>>
	CONSUME 
		java.lang.Double[] : 1,

		java.lang.String : 1,

		com.opengamma.util.tuple.DoublesPair[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.DoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.DoublesSurface__void_<init><double[].double[].double[]>>
	CONSUME 
		double[] : 3;
	PRODUCE 
		com.opengamma.analytics.math.surface.DoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.DoublesSurface__void_<init><double[].double[].double[].java.lang.String>>
	CONSUME 
		double[] : 3,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.DoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.DoublesSurface__void_<init><java.lang.Double[].java.lang.Double[].java.lang.Double[]>>
	CONSUME 
		java.lang.Double[] : 3;
	PRODUCE 
		com.opengamma.analytics.math.surface.DoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.DoublesSurface__void_<init><java.lang.Double[].java.lang.Double[].java.lang.Double[].java.lang.String>>
	CONSUME 
		java.lang.Double[] : 3,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.DoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.DoublesSurface__void_<init><java.util.List>>
	CONSUME 
		java.util.List : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.DoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.DoublesSurface__void_<init><java.util.List.java.lang.String>>
	CONSUME 
		java.util.List : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.DoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.DoublesSurface__void_<init><java.util.List.java.util.List>>
	CONSUME 
		java.util.List : 2;
	PRODUCE 
		com.opengamma.analytics.math.surface.DoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.DoublesSurface__void_<init><java.util.List.java.util.List.java.lang.String>>
	CONSUME 
		java.util.List : 2,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.DoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.DoublesSurface__void_<init><java.util.List.java.util.List.java.util.List>>
	CONSUME 
		java.util.List : 3;
	PRODUCE 
		com.opengamma.analytics.math.surface.DoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.DoublesSurface__void_<init><java.util.List.java.util.List.java.util.List.java.lang.String>>
	CONSUME 
		java.util.List : 3,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.DoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.DoublesSurface__void_<init><java.util.Map>>
	CONSUME 
		java.util.Map : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.DoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.DoublesSurface__void_<init><java.util.Map.java.lang.String>>
	CONSUME 
		java.util.Map : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.DoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalDoublesSurface__boolean_equals<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.surface.FunctionalDoublesSurface : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalDoublesSurface__com.opengamma.analytics.math.function.Function_getFunction<>>
	CONSUME 
		com.opengamma.analytics.math.surface.FunctionalDoublesSurface : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.Function : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalDoublesSurface__com.opengamma.analytics.math.surface.FunctionalDoublesSurface_'from'<com.opengamma.analytics.math.function.Function>>
	CONSUME 
		com.opengamma.analytics.math.function.Function : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.FunctionalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalDoublesSurface__com.opengamma.analytics.math.surface.FunctionalDoublesSurface_'from'<com.opengamma.analytics.math.function.Function.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.function.Function : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.FunctionalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalDoublesSurface__int_size<>>
	CONSUME 
		com.opengamma.analytics.math.surface.FunctionalDoublesSurface : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalDoublesSurface__java.lang.Double_getZValue<com.opengamma.util.tuple.Pair>>
	CONSUME 
		com.opengamma.analytics.math.surface.FunctionalDoublesSurface : 1,

		com.opengamma.util.tuple.Pair : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalDoublesSurface__java.lang.Double_getZValue<java.lang.Double.java.lang.Double>>
	CONSUME 
		java.lang.Double : 2,

		com.opengamma.analytics.math.surface.FunctionalDoublesSurface : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalDoublesSurface__java.lang.Double[]_getXData<>>
	CONSUME 
		com.opengamma.analytics.math.surface.FunctionalDoublesSurface : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalDoublesSurface__java.lang.Double[]_getYData<>>
	CONSUME 
		com.opengamma.analytics.math.surface.FunctionalDoublesSurface : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalDoublesSurface__java.lang.Double[]_getZData<>>
	CONSUME 
		com.opengamma.analytics.math.surface.FunctionalDoublesSurface : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalDoublesSurface__java.lang.Object_getZValue<com.opengamma.util.tuple.Pair>>
	CONSUME 
		com.opengamma.analytics.math.surface.FunctionalDoublesSurface : 1,

		com.opengamma.util.tuple.Pair : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalDoublesSurface__java.lang.Object_getZValue<java.lang.Object.java.lang.Object>>
	CONSUME 
		java.lang.Object : 2,

		com.opengamma.analytics.math.surface.FunctionalDoublesSurface : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalDoublesSurface__java.lang.Object[]_getXData<>>
	CONSUME 
		com.opengamma.analytics.math.surface.FunctionalDoublesSurface : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalDoublesSurface__java.lang.Object[]_getYData<>>
	CONSUME 
		com.opengamma.analytics.math.surface.FunctionalDoublesSurface : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalDoublesSurface__java.lang.Object[]_getZData<>>
	CONSUME 
		com.opengamma.analytics.math.surface.FunctionalDoublesSurface : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalDoublesSurface__void_<init><com.opengamma.analytics.math.function.Function>>
	CONSUME 
		com.opengamma.analytics.math.function.Function : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.FunctionalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalDoublesSurface__void_<init><com.opengamma.analytics.math.function.Function.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.function.Function : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.FunctionalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalSurface__int_size<>>
	CONSUME 
		com.opengamma.analytics.math.surface.FunctionalSurface : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalSurface__java.lang.Object_getZValue<com.opengamma.util.tuple.Pair>>
	CONSUME 
		com.opengamma.analytics.math.surface.FunctionalSurface : 1,

		com.opengamma.util.tuple.Pair : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalSurface__java.lang.Object_getZValue<java.lang.Object.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.surface.FunctionalSurface : 1,

		java.lang.Object : 2;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalSurface__java.lang.Object[]_getXData<>>
	CONSUME 
		com.opengamma.analytics.math.surface.FunctionalSurface : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalSurface__java.lang.Object[]_getYData<>>
	CONSUME 
		com.opengamma.analytics.math.surface.FunctionalSurface : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalSurface__java.lang.Object[]_getZData<>>
	CONSUME 
		com.opengamma.analytics.math.surface.FunctionalSurface : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalSurface__void_<init><com.opengamma.analytics.math.function.Function2D>>
	CONSUME 
		com.opengamma.analytics.math.function.Function2D : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.FunctionalSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalSurfaceAdditiveShiftFunction$ShiftedFunction__java.lang.Double_evaluate<java.lang.Double[]>>
	CONSUME 
		java.lang.Double[] : 1,

		com.opengamma.analytics.math.surface.FunctionalSurfaceAdditiveShiftFunction$ShiftedFunction : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalSurfaceAdditiveShiftFunction$ShiftedFunction__java.lang.Object_evaluate<java.lang.Object[]>>
	CONSUME 
		java.lang.Object[] : 1,

		com.opengamma.analytics.math.surface.FunctionalSurfaceAdditiveShiftFunction$ShiftedFunction : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalSurfaceAdditiveShiftFunction$ShiftedFunction__void_<init><double.com.opengamma.analytics.math.function.Function>>
	CONSUME 
		com.opengamma.analytics.math.function.Function : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.FunctionalSurfaceAdditiveShiftFunction$ShiftedFunction : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalSurfaceAdditiveShiftFunction__com.opengamma.analytics.math.surface.FunctionalDoublesSurface_evaluate<com.opengamma.analytics.math.surface.FunctionalDoublesSurface.double>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.surface.FunctionalSurfaceAdditiveShiftFunction : 1,

		com.opengamma.analytics.math.surface.FunctionalDoublesSurface : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.FunctionalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalSurfaceAdditiveShiftFunction__com.opengamma.analytics.math.surface.FunctionalDoublesSurface_evaluate<com.opengamma.analytics.math.surface.FunctionalDoublesSurface.double.double.double>>
	CONSUME 
		double : 3,

		com.opengamma.analytics.math.surface.FunctionalSurfaceAdditiveShiftFunction : 1,

		com.opengamma.analytics.math.surface.FunctionalDoublesSurface : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.FunctionalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalSurfaceAdditiveShiftFunction__com.opengamma.analytics.math.surface.FunctionalDoublesSurface_evaluate<com.opengamma.analytics.math.surface.FunctionalDoublesSurface.double.java.lang.String>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.surface.FunctionalSurfaceAdditiveShiftFunction : 1,

		java.lang.String : 1,

		com.opengamma.analytics.math.surface.FunctionalDoublesSurface : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.FunctionalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalSurfaceAdditiveShiftFunction__com.opengamma.analytics.math.surface.FunctionalDoublesSurface_evaluate<com.opengamma.analytics.math.surface.FunctionalDoublesSurface.double[].double[].double[]>>
	CONSUME 
		double[] : 3,

		com.opengamma.analytics.math.surface.FunctionalSurfaceAdditiveShiftFunction : 1,

		com.opengamma.analytics.math.surface.FunctionalDoublesSurface : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.FunctionalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalSurfaceAdditiveShiftFunction__com.opengamma.analytics.math.surface.Surface_evaluate<com.opengamma.analytics.math.surface.Surface.double>>
	CONSUME 
		com.opengamma.analytics.math.surface.Surface : 1,

		double : 1,

		com.opengamma.analytics.math.surface.FunctionalSurfaceAdditiveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalSurfaceAdditiveShiftFunction__com.opengamma.analytics.math.surface.Surface_evaluate<com.opengamma.analytics.math.surface.Surface.double.double.double>>
	CONSUME 
		com.opengamma.analytics.math.surface.Surface : 1,

		double : 3,

		com.opengamma.analytics.math.surface.FunctionalSurfaceAdditiveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalSurfaceAdditiveShiftFunction__com.opengamma.analytics.math.surface.Surface_evaluate<com.opengamma.analytics.math.surface.Surface.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.surface.Surface : 1,

		double : 1,

		com.opengamma.analytics.math.surface.FunctionalSurfaceAdditiveShiftFunction : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalSurfaceAdditiveShiftFunction__com.opengamma.analytics.math.surface.Surface_evaluate<com.opengamma.analytics.math.surface.Surface.double[].double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.surface.Surface : 1,

		double[] : 3,

		com.opengamma.analytics.math.surface.FunctionalSurfaceAdditiveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalSurfaceAdditiveShiftFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.FunctionalSurfaceAdditiveShiftFunction : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction$ShiftedFunction__java.lang.Double_evaluate<java.lang.Double[]>>
	CONSUME 
		java.lang.Double[] : 1,

		com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction$ShiftedFunction : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction$ShiftedFunction__java.lang.Object_evaluate<java.lang.Object[]>>
	CONSUME 
		java.lang.Object[] : 1,

		com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction$ShiftedFunction : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction$ShiftedFunction__void_<init><double.com.opengamma.analytics.math.function.Function>>
	CONSUME 
		com.opengamma.analytics.math.function.Function : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction$ShiftedFunction : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction__com.opengamma.analytics.math.surface.FunctionalDoublesSurface_evaluate<com.opengamma.analytics.math.surface.FunctionalDoublesSurface.double>>
	CONSUME 
		com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction : 1,

		double : 1,

		com.opengamma.analytics.math.surface.FunctionalDoublesSurface : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.FunctionalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction__com.opengamma.analytics.math.surface.FunctionalDoublesSurface_evaluate<com.opengamma.analytics.math.surface.FunctionalDoublesSurface.double.double.double>>
	CONSUME 
		com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction : 1,

		double : 3,

		com.opengamma.analytics.math.surface.FunctionalDoublesSurface : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.FunctionalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction__com.opengamma.analytics.math.surface.FunctionalDoublesSurface_evaluate<com.opengamma.analytics.math.surface.FunctionalDoublesSurface.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction : 1,

		double : 1,

		java.lang.String : 1,

		com.opengamma.analytics.math.surface.FunctionalDoublesSurface : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.FunctionalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction__com.opengamma.analytics.math.surface.FunctionalDoublesSurface_evaluate<com.opengamma.analytics.math.surface.FunctionalDoublesSurface.double[].double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction : 1,

		double[] : 3,

		com.opengamma.analytics.math.surface.FunctionalDoublesSurface : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.FunctionalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction__com.opengamma.analytics.math.surface.Surface_evaluate<com.opengamma.analytics.math.surface.Surface.double>>
	CONSUME 
		com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction : 1,

		com.opengamma.analytics.math.surface.Surface : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction__com.opengamma.analytics.math.surface.Surface_evaluate<com.opengamma.analytics.math.surface.Surface.double.double.double>>
	CONSUME 
		com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction : 1,

		com.opengamma.analytics.math.surface.Surface : 1,

		double : 3;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction__com.opengamma.analytics.math.surface.Surface_evaluate<com.opengamma.analytics.math.surface.Surface.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction : 1,

		com.opengamma.analytics.math.surface.Surface : 1,

		double : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction__com.opengamma.analytics.math.surface.Surface_evaluate<com.opengamma.analytics.math.surface.Surface.double[].double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction : 1,

		com.opengamma.analytics.math.surface.Surface : 1,

		double[] : 3;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface : 1;
TRANSITION <com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedDoublesSurface__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedDoublesSurface__com.opengamma.analytics.math.interpolation.Interpolator2D_getInterpolator<>>
	CONSUME 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.Interpolator2D : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedDoublesSurface__com.opengamma.analytics.math.surface.InterpolatedDoublesSurface_'from'<com.opengamma.util.tuple.DoublesPair[].double[].com.opengamma.analytics.math.interpolation.Interpolator2D>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.interpolation.Interpolator2D : 1,

		com.opengamma.util.tuple.DoublesPair[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedDoublesSurface__com.opengamma.analytics.math.surface.InterpolatedDoublesSurface_'from'<com.opengamma.util.tuple.DoublesPair[].double[].com.opengamma.analytics.math.interpolation.Interpolator2D.java.lang.String>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.interpolation.Interpolator2D : 1,

		java.lang.String : 1,

		com.opengamma.util.tuple.DoublesPair[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedDoublesSurface__com.opengamma.analytics.math.surface.InterpolatedDoublesSurface_'from'<com.opengamma.util.tuple.DoublesPair[].java.lang.Double[].com.opengamma.analytics.math.interpolation.Interpolator2D>>
	CONSUME 
		java.lang.Double[] : 1,

		com.opengamma.analytics.math.interpolation.Interpolator2D : 1,

		com.opengamma.util.tuple.DoublesPair[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedDoublesSurface__com.opengamma.analytics.math.surface.InterpolatedDoublesSurface_'from'<com.opengamma.util.tuple.DoublesPair[].java.lang.Double[].com.opengamma.analytics.math.interpolation.Interpolator2D.java.lang.String>>
	CONSUME 
		java.lang.Double[] : 1,

		com.opengamma.analytics.math.interpolation.Interpolator2D : 1,

		java.lang.String : 1,

		com.opengamma.util.tuple.DoublesPair[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedDoublesSurface__com.opengamma.analytics.math.surface.InterpolatedDoublesSurface_'from'<double[].double[].double[].com.opengamma.analytics.math.interpolation.Interpolator2D>>
	CONSUME 
		double[] : 3,

		com.opengamma.analytics.math.interpolation.Interpolator2D : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedDoublesSurface__com.opengamma.analytics.math.surface.InterpolatedDoublesSurface_'from'<java.lang.Double[].java.lang.Double[].java.lang.Double[].com.opengamma.analytics.math.interpolation.Interpolator2D>>
	CONSUME 
		java.lang.Double[] : 3,

		com.opengamma.analytics.math.interpolation.Interpolator2D : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedDoublesSurface__com.opengamma.analytics.math.surface.InterpolatedDoublesSurface_'from'<java.util.List.com.opengamma.analytics.math.interpolation.Interpolator2D>>
	CONSUME 
		java.util.List : 1,

		com.opengamma.analytics.math.interpolation.Interpolator2D : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedDoublesSurface__com.opengamma.analytics.math.surface.InterpolatedDoublesSurface_'from'<java.util.List.com.opengamma.analytics.math.interpolation.Interpolator2D.java.lang.String>>
	CONSUME 
		java.util.List : 1,

		com.opengamma.analytics.math.interpolation.Interpolator2D : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedDoublesSurface__com.opengamma.analytics.math.surface.InterpolatedDoublesSurface_'from'<java.util.List.java.util.List.com.opengamma.analytics.math.interpolation.Interpolator2D>>
	CONSUME 
		java.util.List : 2,

		com.opengamma.analytics.math.interpolation.Interpolator2D : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedDoublesSurface__com.opengamma.analytics.math.surface.InterpolatedDoublesSurface_'from'<java.util.List.java.util.List.com.opengamma.analytics.math.interpolation.Interpolator2D.java.lang.String>>
	CONSUME 
		java.util.List : 2,

		com.opengamma.analytics.math.interpolation.Interpolator2D : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedDoublesSurface__com.opengamma.analytics.math.surface.InterpolatedDoublesSurface_'from'<java.util.List.java.util.List.java.util.List.com.opengamma.analytics.math.interpolation.Interpolator2D>>
	CONSUME 
		java.util.List : 3,

		com.opengamma.analytics.math.interpolation.Interpolator2D : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedDoublesSurface__com.opengamma.analytics.math.surface.InterpolatedDoublesSurface_'from'<java.util.Map.com.opengamma.analytics.math.interpolation.Interpolator2D>>
	CONSUME 
		java.util.Map : 1,

		com.opengamma.analytics.math.interpolation.Interpolator2D : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedDoublesSurface__com.opengamma.analytics.math.surface.InterpolatedDoublesSurface_'from'<java.util.Map.com.opengamma.analytics.math.interpolation.Interpolator2D.java.lang.String>>
	CONSUME 
		java.util.Map : 1,

		com.opengamma.analytics.math.interpolation.Interpolator2D : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedDoublesSurface__com.opengamma.analytics.math.surface.InterpolatedDoublesSurface_fromGrid<double[].double[].double[].com.opengamma.analytics.math.interpolation.Interpolator2D>>
	CONSUME 
		double[] : 3,

		com.opengamma.analytics.math.interpolation.Interpolator2D : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedDoublesSurface__java.lang.Double_getZValue<com.opengamma.util.tuple.Pair>>
	CONSUME 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1,

		com.opengamma.util.tuple.Pair : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedDoublesSurface__java.lang.Double_getZValue<java.lang.Double.java.lang.Double>>
	CONSUME 
		java.lang.Double : 2,

		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedDoublesSurface__java.lang.Object_getZValue<com.opengamma.util.tuple.Pair>>
	CONSUME 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1,

		com.opengamma.util.tuple.Pair : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedDoublesSurface__java.lang.Object_getZValue<java.lang.Object.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1,

		java.lang.Object : 2;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedDoublesSurface__java.util.Map_getInterpolatorData<>>
	CONSUME 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1;
	PRODUCE 
		java.util.Map : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedDoublesSurface__void_<init><com.opengamma.util.tuple.DoublesPair[].double[].com.opengamma.analytics.math.interpolation.Interpolator2D>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.interpolation.Interpolator2D : 1,

		com.opengamma.util.tuple.DoublesPair[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedDoublesSurface__void_<init><com.opengamma.util.tuple.DoublesPair[].double[].com.opengamma.analytics.math.interpolation.Interpolator2D.java.lang.String>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.interpolation.Interpolator2D : 1,

		java.lang.String : 1,

		com.opengamma.util.tuple.DoublesPair[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedDoublesSurface__void_<init><com.opengamma.util.tuple.DoublesPair[].java.lang.Double[].com.opengamma.analytics.math.interpolation.Interpolator2D>>
	CONSUME 
		java.lang.Double[] : 1,

		com.opengamma.analytics.math.interpolation.Interpolator2D : 1,

		com.opengamma.util.tuple.DoublesPair[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedDoublesSurface__void_<init><com.opengamma.util.tuple.DoublesPair[].java.lang.Double[].com.opengamma.analytics.math.interpolation.Interpolator2D.java.lang.String>>
	CONSUME 
		java.lang.Double[] : 1,

		com.opengamma.analytics.math.interpolation.Interpolator2D : 1,

		java.lang.String : 1,

		com.opengamma.util.tuple.DoublesPair[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedDoublesSurface__void_<init><double[].double[].double[].com.opengamma.analytics.math.interpolation.Interpolator2D>>
	CONSUME 
		double[] : 3,

		com.opengamma.analytics.math.interpolation.Interpolator2D : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedDoublesSurface__void_<init><java.lang.Double[].java.lang.Double[].java.lang.Double[].com.opengamma.analytics.math.interpolation.Interpolator2D>>
	CONSUME 
		java.lang.Double[] : 3,

		com.opengamma.analytics.math.interpolation.Interpolator2D : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedDoublesSurface__void_<init><java.util.List.com.opengamma.analytics.math.interpolation.Interpolator2D>>
	CONSUME 
		java.util.List : 1,

		com.opengamma.analytics.math.interpolation.Interpolator2D : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedDoublesSurface__void_<init><java.util.List.com.opengamma.analytics.math.interpolation.Interpolator2D.java.lang.String>>
	CONSUME 
		java.util.List : 1,

		com.opengamma.analytics.math.interpolation.Interpolator2D : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedDoublesSurface__void_<init><java.util.List.java.util.List.com.opengamma.analytics.math.interpolation.Interpolator2D>>
	CONSUME 
		java.util.List : 2,

		com.opengamma.analytics.math.interpolation.Interpolator2D : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedDoublesSurface__void_<init><java.util.List.java.util.List.com.opengamma.analytics.math.interpolation.Interpolator2D.java.lang.String>>
	CONSUME 
		java.util.List : 2,

		com.opengamma.analytics.math.interpolation.Interpolator2D : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedDoublesSurface__void_<init><java.util.List.java.util.List.java.util.List.com.opengamma.analytics.math.interpolation.Interpolator2D>>
	CONSUME 
		java.util.List : 3,

		com.opengamma.analytics.math.interpolation.Interpolator2D : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedDoublesSurface__void_<init><java.util.Map.com.opengamma.analytics.math.interpolation.Interpolator2D>>
	CONSUME 
		java.util.Map : 1,

		com.opengamma.analytics.math.interpolation.Interpolator2D : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedDoublesSurface__void_<init><java.util.Map.com.opengamma.analytics.math.interpolation.Interpolator2D.java.lang.String>>
	CONSUME 
		java.util.Map : 1,

		com.opengamma.analytics.math.interpolation.Interpolator2D : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface__boolean_equals<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface__boolean_isXZCurves<>>
	CONSUME 
		com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface__com.opengamma.analytics.math.curve.Curve[]_getCurves<>>
	CONSUME 
		com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve[] : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface__com.opengamma.analytics.math.interpolation.Interpolator1D_getInterpolator<>>
	CONSUME 
		com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface__com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface_'from'<boolean.double[].com.opengamma.analytics.math.curve.Curve[].com.opengamma.analytics.math.interpolation.Interpolator1D>>
	CONSUME 
		boolean : 1,

		double[] : 1,

		com.opengamma.analytics.math.curve.Curve[] : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface__com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface_'from'<boolean.java.lang.Double[].com.opengamma.analytics.math.curve.Curve[].com.opengamma.analytics.math.interpolation.Interpolator1D>>
	CONSUME 
		boolean : 1,

		java.lang.Double[] : 1,

		com.opengamma.analytics.math.curve.Curve[] : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface__com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface_'from'<boolean.java.util.List.java.util.List.com.opengamma.analytics.math.interpolation.Interpolator1D>>
	CONSUME 
		java.util.List : 2,

		boolean : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface__com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface_'from'<boolean.java.util.Map.com.opengamma.analytics.math.interpolation.Interpolator1D>>
	CONSUME 
		boolean : 1,

		java.util.Map : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface__com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface_'from'<boolean.java.util.Map.com.opengamma.analytics.math.interpolation.Interpolator1D.java.lang.String>>
	CONSUME 
		boolean : 1,

		java.util.Map : 1,

		java.lang.String : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface__com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface_fromSorted<boolean.double[].com.opengamma.analytics.math.curve.Curve[].com.opengamma.analytics.math.interpolation.Interpolator1D>>
	CONSUME 
		boolean : 1,

		double[] : 1,

		com.opengamma.analytics.math.curve.Curve[] : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface__com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface_fromSorted<boolean.java.lang.Double[].com.opengamma.analytics.math.curve.Curve[].com.opengamma.analytics.math.interpolation.Interpolator1D>>
	CONSUME 
		boolean : 1,

		java.lang.Double[] : 1,

		com.opengamma.analytics.math.curve.Curve[] : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface__com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface_fromSorted<boolean.java.util.List.java.util.List.com.opengamma.analytics.math.interpolation.Interpolator1D>>
	CONSUME 
		java.util.List : 2,

		boolean : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface__com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface_fromSorted<boolean.java.util.Map.com.opengamma.analytics.math.interpolation.Interpolator1D>>
	CONSUME 
		boolean : 1,

		java.util.Map : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface__com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface_fromSorted<boolean.java.util.Map.com.opengamma.analytics.math.interpolation.Interpolator1D.java.lang.String>>
	CONSUME 
		boolean : 1,

		java.util.Map : 1,

		java.lang.String : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface__double[]_getPoints<>>
	CONSUME 
		com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface__int_size<>>
	CONSUME 
		com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface__java.lang.Double_getZValue<com.opengamma.util.tuple.Pair>>
	CONSUME 
		com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface : 1,

		com.opengamma.util.tuple.Pair : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface__java.lang.Double_getZValue<java.lang.Double.java.lang.Double>>
	CONSUME 
		java.lang.Double : 2,

		com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface__java.lang.Double[]_getXData<>>
	CONSUME 
		com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface__java.lang.Double[]_getYData<>>
	CONSUME 
		com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface__java.lang.Double[]_getZData<>>
	CONSUME 
		com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface : 1;
	PRODUCE 
		java.lang.Double[] : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface__java.lang.Object_getZValue<com.opengamma.util.tuple.Pair>>
	CONSUME 
		com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface : 1,

		com.opengamma.util.tuple.Pair : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface__java.lang.Object_getZValue<java.lang.Object.java.lang.Object>>
	CONSUME 
		java.lang.Object : 2,

		com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface__java.lang.Object[]_getXData<>>
	CONSUME 
		com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface__java.lang.Object[]_getYData<>>
	CONSUME 
		com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface__java.lang.Object[]_getZData<>>
	CONSUME 
		com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface__void_<init><boolean.java.util.Map.com.opengamma.analytics.math.interpolation.Interpolator1D.boolean>>
	CONSUME 
		boolean : 2,

		java.util.Map : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction__com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface_evaluate<com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface.double>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction : 1,

		com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction__com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface_evaluate<com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface.double.double.double>>
	CONSUME 
		double : 3,

		com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction : 1,

		com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction__com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface_evaluate<com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface.double.java.lang.String>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction : 1,

		java.lang.String : 1,

		com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction__com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface_evaluate<com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface.double[].double[].double[]>>
	CONSUME 
		double[] : 3,

		com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction : 1,

		com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction__com.opengamma.analytics.math.surface.Surface_evaluate<com.opengamma.analytics.math.surface.Surface.double>>
	CONSUME 
		com.opengamma.analytics.math.surface.Surface : 1,

		double : 1,

		com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction__com.opengamma.analytics.math.surface.Surface_evaluate<com.opengamma.analytics.math.surface.Surface.double.double.double>>
	CONSUME 
		com.opengamma.analytics.math.surface.Surface : 1,

		double : 3,

		com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction__com.opengamma.analytics.math.surface.Surface_evaluate<com.opengamma.analytics.math.surface.Surface.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.surface.Surface : 1,

		double : 1,

		com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction__com.opengamma.analytics.math.surface.Surface_evaluate<com.opengamma.analytics.math.surface.Surface.double[].double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.surface.Surface : 1,

		double[] : 3,

		com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction__com.opengamma.analytics.math.surface.InterpolatedDoublesSurface_evaluate<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface.double>>
	CONSUME 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1,

		double : 1,

		com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction__com.opengamma.analytics.math.surface.InterpolatedDoublesSurface_evaluate<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface.double.double.double>>
	CONSUME 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1,

		double : 3,

		com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction__com.opengamma.analytics.math.surface.InterpolatedDoublesSurface_evaluate<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1,

		double : 1,

		com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction__com.opengamma.analytics.math.surface.InterpolatedDoublesSurface_evaluate<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface.double[].double[].double[]>>
	CONSUME 
		double[] : 3,

		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1,

		com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction__com.opengamma.analytics.math.surface.Surface_evaluate<com.opengamma.analytics.math.surface.Surface.double>>
	CONSUME 
		com.opengamma.analytics.math.surface.Surface : 1,

		double : 1,

		com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction__com.opengamma.analytics.math.surface.Surface_evaluate<com.opengamma.analytics.math.surface.Surface.double.double.double>>
	CONSUME 
		com.opengamma.analytics.math.surface.Surface : 1,

		double : 3,

		com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction__com.opengamma.analytics.math.surface.Surface_evaluate<com.opengamma.analytics.math.surface.Surface.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.surface.Surface : 1,

		double : 1,

		com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction__com.opengamma.analytics.math.surface.Surface_evaluate<com.opengamma.analytics.math.surface.Surface.double[].double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.surface.Surface : 1,

		double[] : 3,

		com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedSurfaceMultiplicativeShiftFunction__com.opengamma.analytics.math.surface.InterpolatedDoublesSurface_evaluate<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface.double>>
	CONSUME 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1,

		double : 1,

		com.opengamma.analytics.math.surface.InterpolatedSurfaceMultiplicativeShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedSurfaceMultiplicativeShiftFunction__com.opengamma.analytics.math.surface.InterpolatedDoublesSurface_evaluate<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface.double.double.double>>
	CONSUME 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1,

		double : 3,

		com.opengamma.analytics.math.surface.InterpolatedSurfaceMultiplicativeShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedSurfaceMultiplicativeShiftFunction__com.opengamma.analytics.math.surface.InterpolatedDoublesSurface_evaluate<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1,

		double : 1,

		java.lang.String : 1,

		com.opengamma.analytics.math.surface.InterpolatedSurfaceMultiplicativeShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedSurfaceMultiplicativeShiftFunction__com.opengamma.analytics.math.surface.InterpolatedDoublesSurface_evaluate<com.opengamma.analytics.math.surface.InterpolatedDoublesSurface.double[].double[].double[]>>
	CONSUME 
		double[] : 3,

		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1,

		com.opengamma.analytics.math.surface.InterpolatedSurfaceMultiplicativeShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedSurfaceMultiplicativeShiftFunction__com.opengamma.analytics.math.surface.Surface_evaluate<com.opengamma.analytics.math.surface.Surface.double>>
	CONSUME 
		com.opengamma.analytics.math.surface.Surface : 1,

		double : 1,

		com.opengamma.analytics.math.surface.InterpolatedSurfaceMultiplicativeShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedSurfaceMultiplicativeShiftFunction__com.opengamma.analytics.math.surface.Surface_evaluate<com.opengamma.analytics.math.surface.Surface.double.double.double>>
	CONSUME 
		com.opengamma.analytics.math.surface.Surface : 1,

		double : 3,

		com.opengamma.analytics.math.surface.InterpolatedSurfaceMultiplicativeShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedSurfaceMultiplicativeShiftFunction__com.opengamma.analytics.math.surface.Surface_evaluate<com.opengamma.analytics.math.surface.Surface.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.surface.Surface : 1,

		double : 1,

		java.lang.String : 1,

		com.opengamma.analytics.math.surface.InterpolatedSurfaceMultiplicativeShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedSurfaceMultiplicativeShiftFunction__com.opengamma.analytics.math.surface.Surface_evaluate<com.opengamma.analytics.math.surface.Surface.double[].double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.surface.Surface : 1,

		double[] : 3,

		com.opengamma.analytics.math.surface.InterpolatedSurfaceMultiplicativeShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface : 1;
TRANSITION <com.opengamma.analytics.math.surface.InterpolatedSurfaceMultiplicativeShiftFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedSurfaceMultiplicativeShiftFunction : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalDoublesSurface__com.opengamma.analytics.math.surface.NodalDoublesSurface_'from'<com.opengamma.util.tuple.DoublesPair[].double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.util.tuple.DoublesPair[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalDoublesSurface__com.opengamma.analytics.math.surface.NodalDoublesSurface_'from'<com.opengamma.util.tuple.DoublesPair[].double[].java.lang.String>>
	CONSUME 
		double[] : 1,

		java.lang.String : 1,

		com.opengamma.util.tuple.DoublesPair[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalDoublesSurface__com.opengamma.analytics.math.surface.NodalDoublesSurface_'from'<com.opengamma.util.tuple.DoublesPair[].java.lang.Double[]>>
	CONSUME 
		java.lang.Double[] : 1,

		com.opengamma.util.tuple.DoublesPair[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalDoublesSurface__com.opengamma.analytics.math.surface.NodalDoublesSurface_'from'<com.opengamma.util.tuple.DoublesPair[].java.lang.Double[].java.lang.String>>
	CONSUME 
		java.lang.Double[] : 1,

		java.lang.String : 1,

		com.opengamma.util.tuple.DoublesPair[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalDoublesSurface__com.opengamma.analytics.math.surface.NodalDoublesSurface_'from'<double[].double[].double[]>>
	CONSUME 
		double[] : 3;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalDoublesSurface__com.opengamma.analytics.math.surface.NodalDoublesSurface_'from'<double[].double[].double[].java.lang.String>>
	CONSUME 
		double[] : 3,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalDoublesSurface__com.opengamma.analytics.math.surface.NodalDoublesSurface_'from'<java.lang.Double[].java.lang.Double[].java.lang.Double[]>>
	CONSUME 
		java.lang.Double[] : 3;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalDoublesSurface__com.opengamma.analytics.math.surface.NodalDoublesSurface_'from'<java.lang.Double[].java.lang.Double[].java.lang.Double[].java.lang.String>>
	CONSUME 
		java.lang.Double[] : 3,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalDoublesSurface__com.opengamma.analytics.math.surface.NodalDoublesSurface_'from'<java.util.List>>
	CONSUME 
		java.util.List : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalDoublesSurface__com.opengamma.analytics.math.surface.NodalDoublesSurface_'from'<java.util.List.java.lang.String>>
	CONSUME 
		java.util.List : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalDoublesSurface__com.opengamma.analytics.math.surface.NodalDoublesSurface_'from'<java.util.List.java.util.List>>
	CONSUME 
		java.util.List : 2;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalDoublesSurface__com.opengamma.analytics.math.surface.NodalDoublesSurface_'from'<java.util.List.java.util.List.java.lang.String>>
	CONSUME 
		java.util.List : 2,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalDoublesSurface__com.opengamma.analytics.math.surface.NodalDoublesSurface_'from'<java.util.List.java.util.List.java.util.List>>
	CONSUME 
		java.util.List : 3;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalDoublesSurface__com.opengamma.analytics.math.surface.NodalDoublesSurface_'from'<java.util.List.java.util.List.java.util.List.java.lang.String>>
	CONSUME 
		java.util.List : 3,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalDoublesSurface__com.opengamma.analytics.math.surface.NodalDoublesSurface_'from'<java.util.Map>>
	CONSUME 
		java.util.Map : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalDoublesSurface__com.opengamma.analytics.math.surface.NodalDoublesSurface_'from'<java.util.Map.java.lang.String>>
	CONSUME 
		java.util.Map : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalDoublesSurface__java.lang.Double_getZValue<com.opengamma.util.tuple.Pair>>
	CONSUME 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1,

		com.opengamma.util.tuple.Pair : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalDoublesSurface__java.lang.Double_getZValue<java.lang.Double.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1,

		java.lang.Double : 2;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalDoublesSurface__java.lang.Object_getZValue<com.opengamma.util.tuple.Pair>>
	CONSUME 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1,

		com.opengamma.util.tuple.Pair : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalDoublesSurface__java.lang.Object_getZValue<java.lang.Object.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1,

		java.lang.Object : 2;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalDoublesSurface__void_<init><com.opengamma.util.tuple.DoublesPair[].double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.util.tuple.DoublesPair[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalDoublesSurface__void_<init><com.opengamma.util.tuple.DoublesPair[].double[].java.lang.String>>
	CONSUME 
		double[] : 1,

		java.lang.String : 1,

		com.opengamma.util.tuple.DoublesPair[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalDoublesSurface__void_<init><com.opengamma.util.tuple.DoublesPair[].java.lang.Double[]>>
	CONSUME 
		java.lang.Double[] : 1,

		com.opengamma.util.tuple.DoublesPair[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalDoublesSurface__void_<init><com.opengamma.util.tuple.DoublesPair[].java.lang.Double[].java.lang.String>>
	CONSUME 
		java.lang.Double[] : 1,

		java.lang.String : 1,

		com.opengamma.util.tuple.DoublesPair[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalDoublesSurface__void_<init><double[].double[].double[]>>
	CONSUME 
		double[] : 3;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalDoublesSurface__void_<init><double[].double[].double[].java.lang.String>>
	CONSUME 
		double[] : 3,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalDoublesSurface__void_<init><java.lang.Double[].java.lang.Double[].java.lang.Double[]>>
	CONSUME 
		java.lang.Double[] : 3;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalDoublesSurface__void_<init><java.lang.Double[].java.lang.Double[].java.lang.Double[].java.lang.String>>
	CONSUME 
		java.lang.Double[] : 3,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalDoublesSurface__void_<init><java.util.List>>
	CONSUME 
		java.util.List : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalDoublesSurface__void_<init><java.util.List.java.lang.String>>
	CONSUME 
		java.util.List : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalDoublesSurface__void_<init><java.util.List.java.util.List>>
	CONSUME 
		java.util.List : 2;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalDoublesSurface__void_<init><java.util.List.java.util.List.java.lang.String>>
	CONSUME 
		java.util.List : 2,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalDoublesSurface__void_<init><java.util.List.java.util.List.java.util.List>>
	CONSUME 
		java.util.List : 3;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalDoublesSurface__void_<init><java.util.List.java.util.List.java.util.List.java.lang.String>>
	CONSUME 
		java.util.List : 3,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalDoublesSurface__void_<init><java.util.Map>>
	CONSUME 
		java.util.Map : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalDoublesSurface__void_<init><java.util.Map.java.lang.String>>
	CONSUME 
		java.util.Map : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalObjectsSurface__com.opengamma.analytics.math.surface.NodalObjectsSurface_'from'<java.lang.Object[].java.lang.Object[].java.lang.Object[]>>
	CONSUME 
		java.lang.Object[] : 3;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalObjectsSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalObjectsSurface__com.opengamma.analytics.math.surface.NodalObjectsSurface_'from'<java.lang.Object[].java.lang.Object[].java.lang.Object[].java.lang.String>>
	CONSUME 
		java.lang.Object[] : 3,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalObjectsSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalObjectsSurface__java.lang.Object_getZValue<com.opengamma.util.tuple.Pair>>
	CONSUME 
		com.opengamma.analytics.math.surface.NodalObjectsSurface : 1,

		com.opengamma.util.tuple.Pair : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalObjectsSurface__java.lang.Object_getZValue<java.lang.Object.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.surface.NodalObjectsSurface : 1,

		java.lang.Object : 2;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalObjectsSurface__void_<init><java.lang.Object[].java.lang.Object[].java.lang.Object[]>>
	CONSUME 
		java.lang.Object[] : 3;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalObjectsSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalObjectsSurface__void_<init><java.lang.Object[].java.lang.Object[].java.lang.Object[].java.lang.String>>
	CONSUME 
		java.lang.Object[] : 3,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalObjectsSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalSurfaceAdditiveShiftFunction__com.opengamma.analytics.math.surface.NodalDoublesSurface_evaluate<com.opengamma.analytics.math.surface.NodalDoublesSurface.double>>
	CONSUME 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1,

		double : 1,

		com.opengamma.analytics.math.surface.NodalSurfaceAdditiveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalSurfaceAdditiveShiftFunction__com.opengamma.analytics.math.surface.NodalDoublesSurface_evaluate<com.opengamma.analytics.math.surface.NodalDoublesSurface.double.double.double>>
	CONSUME 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1,

		double : 3,

		com.opengamma.analytics.math.surface.NodalSurfaceAdditiveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalSurfaceAdditiveShiftFunction__com.opengamma.analytics.math.surface.NodalDoublesSurface_evaluate<com.opengamma.analytics.math.surface.NodalDoublesSurface.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1,

		double : 1,

		java.lang.String : 1,

		com.opengamma.analytics.math.surface.NodalSurfaceAdditiveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalSurfaceAdditiveShiftFunction__com.opengamma.analytics.math.surface.NodalDoublesSurface_evaluate<com.opengamma.analytics.math.surface.NodalDoublesSurface.double[].double[].double[]>>
	CONSUME 
		double[] : 3,

		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1,

		com.opengamma.analytics.math.surface.NodalSurfaceAdditiveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalSurfaceAdditiveShiftFunction__com.opengamma.analytics.math.surface.Surface_evaluate<com.opengamma.analytics.math.surface.Surface.double>>
	CONSUME 
		com.opengamma.analytics.math.surface.Surface : 1,

		double : 1,

		com.opengamma.analytics.math.surface.NodalSurfaceAdditiveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalSurfaceAdditiveShiftFunction__com.opengamma.analytics.math.surface.Surface_evaluate<com.opengamma.analytics.math.surface.Surface.double.double.double>>
	CONSUME 
		com.opengamma.analytics.math.surface.Surface : 1,

		double : 3,

		com.opengamma.analytics.math.surface.NodalSurfaceAdditiveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalSurfaceAdditiveShiftFunction__com.opengamma.analytics.math.surface.Surface_evaluate<com.opengamma.analytics.math.surface.Surface.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.surface.Surface : 1,

		double : 1,

		java.lang.String : 1,

		com.opengamma.analytics.math.surface.NodalSurfaceAdditiveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalSurfaceAdditiveShiftFunction__com.opengamma.analytics.math.surface.Surface_evaluate<com.opengamma.analytics.math.surface.Surface.double[].double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.surface.Surface : 1,

		double[] : 3,

		com.opengamma.analytics.math.surface.NodalSurfaceAdditiveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalSurfaceAdditiveShiftFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalSurfaceAdditiveShiftFunction : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalSurfaceMultiplicativeShiftFunction__com.opengamma.analytics.math.surface.NodalDoublesSurface_evaluate<com.opengamma.analytics.math.surface.NodalDoublesSurface.double>>
	CONSUME 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1,

		double : 1,

		com.opengamma.analytics.math.surface.NodalSurfaceMultiplicativeShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalSurfaceMultiplicativeShiftFunction__com.opengamma.analytics.math.surface.NodalDoublesSurface_evaluate<com.opengamma.analytics.math.surface.NodalDoublesSurface.double.double.double>>
	CONSUME 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1,

		double : 3,

		com.opengamma.analytics.math.surface.NodalSurfaceMultiplicativeShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalSurfaceMultiplicativeShiftFunction__com.opengamma.analytics.math.surface.NodalDoublesSurface_evaluate<com.opengamma.analytics.math.surface.NodalDoublesSurface.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1,

		double : 1,

		com.opengamma.analytics.math.surface.NodalSurfaceMultiplicativeShiftFunction : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalSurfaceMultiplicativeShiftFunction__com.opengamma.analytics.math.surface.NodalDoublesSurface_evaluate<com.opengamma.analytics.math.surface.NodalDoublesSurface.double[].double[].double[]>>
	CONSUME 
		double[] : 3,

		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1,

		com.opengamma.analytics.math.surface.NodalSurfaceMultiplicativeShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalSurfaceMultiplicativeShiftFunction__com.opengamma.analytics.math.surface.Surface_evaluate<com.opengamma.analytics.math.surface.Surface.double>>
	CONSUME 
		com.opengamma.analytics.math.surface.Surface : 1,

		double : 1,

		com.opengamma.analytics.math.surface.NodalSurfaceMultiplicativeShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalSurfaceMultiplicativeShiftFunction__com.opengamma.analytics.math.surface.Surface_evaluate<com.opengamma.analytics.math.surface.Surface.double.double.double>>
	CONSUME 
		com.opengamma.analytics.math.surface.Surface : 1,

		double : 3,

		com.opengamma.analytics.math.surface.NodalSurfaceMultiplicativeShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalSurfaceMultiplicativeShiftFunction__com.opengamma.analytics.math.surface.Surface_evaluate<com.opengamma.analytics.math.surface.Surface.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.surface.Surface : 1,

		double : 1,

		com.opengamma.analytics.math.surface.NodalSurfaceMultiplicativeShiftFunction : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalSurfaceMultiplicativeShiftFunction__com.opengamma.analytics.math.surface.Surface_evaluate<com.opengamma.analytics.math.surface.Surface.double[].double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.surface.Surface : 1,

		double[] : 3,

		com.opengamma.analytics.math.surface.NodalSurfaceMultiplicativeShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface : 1;
TRANSITION <com.opengamma.analytics.math.surface.NodalSurfaceMultiplicativeShiftFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalSurfaceMultiplicativeShiftFunction : 1;
TRANSITION <com.opengamma.analytics.math.surface.ObjectsSurface__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.surface.ObjectsSurface : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.surface.ObjectsSurface__int_size<>>
	CONSUME 
		com.opengamma.analytics.math.surface.ObjectsSurface : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.surface.ObjectsSurface__java.lang.Object[]_getXData<>>
	CONSUME 
		com.opengamma.analytics.math.surface.ObjectsSurface : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.surface.ObjectsSurface__java.lang.Object[]_getYData<>>
	CONSUME 
		com.opengamma.analytics.math.surface.ObjectsSurface : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.surface.ObjectsSurface__java.lang.Object[]_getZData<>>
	CONSUME 
		com.opengamma.analytics.math.surface.ObjectsSurface : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.surface.ObjectsSurface__void_<init><java.lang.Object[].java.lang.Object[].java.lang.Object[]>>
	CONSUME 
		java.lang.Object[] : 3;
	PRODUCE 
		com.opengamma.analytics.math.surface.ObjectsSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.ObjectsSurface__void_<init><java.lang.Object[].java.lang.Object[].java.lang.Object[].java.lang.String>>
	CONSUME 
		java.lang.Object[] : 3,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.ObjectsSurface : 1;
TRANSITION <com.opengamma.analytics.math.surface.Surface__boolean_equals<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.surface.Surface : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <com.opengamma.analytics.math.surface.Surface__int_size<>>
	CONSUME 
		com.opengamma.analytics.math.surface.Surface : 1;
	PRODUCE 
		int : 1;
TRANSITION <com.opengamma.analytics.math.surface.Surface__java.lang.Object_getZValue<com.opengamma.util.tuple.Pair>>
	CONSUME 
		com.opengamma.analytics.math.surface.Surface : 1,

		com.opengamma.util.tuple.Pair : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.surface.Surface__java.lang.Object_getZValue<java.lang.Object.java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.surface.Surface : 1,

		java.lang.Object : 2;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.surface.Surface__java.lang.Object[]_getXData<>>
	CONSUME 
		com.opengamma.analytics.math.surface.Surface : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.surface.Surface__java.lang.Object[]_getYData<>>
	CONSUME 
		com.opengamma.analytics.math.surface.Surface : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.surface.Surface__java.lang.Object[]_getZData<>>
	CONSUME 
		com.opengamma.analytics.math.surface.Surface : 1;
	PRODUCE 
		java.lang.Object[] : 1;
TRANSITION <com.opengamma.analytics.math.surface.Surface__java.lang.String_getName<>>
	CONSUME 
		com.opengamma.analytics.math.surface.Surface : 1;
	PRODUCE 
		java.lang.String : 1;
TRANSITION <com.opengamma.analytics.math.surface.Surface__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface : 1;
TRANSITION <com.opengamma.analytics.math.surface.Surface__void_<init><java.lang.String>>
	CONSUME 
		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface : 1;
TRANSITION <com.opengamma.analytics.math.surface.SurfaceShiftFunction__com.opengamma.analytics.math.surface.Surface_evaluate<com.opengamma.analytics.math.surface.Surface.double>>
	CONSUME 
		com.opengamma.analytics.math.surface.Surface : 1,

		com.opengamma.analytics.math.surface.SurfaceShiftFunction : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface : 1;
TRANSITION <com.opengamma.analytics.math.surface.SurfaceShiftFunction__com.opengamma.analytics.math.surface.Surface_evaluate<com.opengamma.analytics.math.surface.Surface.double.double.double>>
	CONSUME 
		com.opengamma.analytics.math.surface.Surface : 1,

		com.opengamma.analytics.math.surface.SurfaceShiftFunction : 1,

		double : 3;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface : 1;
TRANSITION <com.opengamma.analytics.math.surface.SurfaceShiftFunction__com.opengamma.analytics.math.surface.Surface_evaluate<com.opengamma.analytics.math.surface.Surface.double.java.lang.String>>
	CONSUME 
		com.opengamma.analytics.math.surface.Surface : 1,

		com.opengamma.analytics.math.surface.SurfaceShiftFunction : 1,

		double : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface : 1;
TRANSITION <com.opengamma.analytics.math.surface.SurfaceShiftFunction__com.opengamma.analytics.math.surface.Surface_evaluate<com.opengamma.analytics.math.surface.Surface.double[].double[].double[]>>
	CONSUME 
		com.opengamma.analytics.math.surface.Surface : 1,

		double[] : 3,

		com.opengamma.analytics.math.surface.SurfaceShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface : 1;
TRANSITION <com.opengamma.analytics.math.surface.SurfaceShiftFunctionFactory__com.opengamma.analytics.math.surface.Surface_getShiftedSurface<com.opengamma.analytics.math.surface.Surface.double.boolean>>
	CONSUME 
		boolean : 1,

		com.opengamma.analytics.math.surface.Surface : 1,

		double : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface : 1;
TRANSITION <com.opengamma.analytics.math.surface.SurfaceShiftFunctionFactory__com.opengamma.analytics.math.surface.Surface_getShiftedSurface<com.opengamma.analytics.math.surface.Surface.double.java.lang.String.boolean>>
	CONSUME 
		boolean : 1,

		com.opengamma.analytics.math.surface.Surface : 1,

		double : 1,

		java.lang.String : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface : 1;
TRANSITION <com.opengamma.analytics.math.surface.SurfaceShiftFunctionFactory__com.opengamma.analytics.math.surface.SurfaceShiftFunction_getFunction<java.lang.Class>>
	CONSUME 
		java.lang.Class : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.SurfaceShiftFunction : 1;
TRANSITION <com.opengamma.analytics.math.surface.SurfaceShiftFunctionFactory__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.SurfaceShiftFunctionFactory : 1;
TRANSITION <com.opengamma.analytics.math.surface.SurfaceSliceFunction__com.opengamma.analytics.math.curve.ConstantDoublesCurve_cut<com.opengamma.analytics.math.surface.ConstantDoublesSurface.com.opengamma.analytics.math.Axis.java.lang.Double>>
	CONSUME 
		com.opengamma.analytics.math.Axis : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.surface.SurfaceSliceFunction : 1,

		com.opengamma.analytics.math.surface.ConstantDoublesSurface : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ConstantDoublesCurve : 1;
TRANSITION <com.opengamma.analytics.math.surface.SurfaceSliceFunction__com.opengamma.analytics.math.curve.Curve_cut<com.opengamma.analytics.math.surface.Surface.com.opengamma.analytics.math.Axis.java.lang.Double.com.opengamma.analytics.math.interpolation.Interpolator1D>>
	CONSUME 
		com.opengamma.analytics.math.Axis : 1,

		com.opengamma.analytics.math.surface.Surface : 1,

		java.lang.Double : 1,

		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve : 1;
TRANSITION <com.opengamma.analytics.math.surface.SurfaceSliceFunction__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.SurfaceSliceFunction : 1;
TRANSITION <com.opengamma.analytics.math.util.wrapper.ColtMathWrapper__cern.colt.matrix.DoubleMatrix2D_wrap<com.opengamma.analytics.math.matrix.DoubleMatrix2D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
	PRODUCE 
		cern.colt.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.util.wrapper.ColtMathWrapper__com.opengamma.analytics.math.matrix.DoubleMatrix2D_wrap<cern.colt.matrix.DoubleMatrix2D>>
	CONSUME 
		cern.colt.matrix.DoubleMatrix2D : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper$1__double_value<double>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper$1 : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper$2__double_value<double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper$2 : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper$3__double_value<double[]>>
	CONSUME 
		double[] : 1,

		com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper$3 : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper$4__java.lang.Double_evaluate<java.lang.Double>>
	CONSUME 
		java.lang.Double : 1,

		com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper$4 : 1;
	PRODUCE 
		java.lang.Double : 1;
TRANSITION <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper$4__java.lang.Object_evaluate<java.lang.Object>>
	CONSUME 
		com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper$4 : 1,

		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper$5__double_value<double>>
	CONSUME 
		double : 1,

		com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper$5 : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper$5__org.apache.commons.math.analysis.UnivariateRealFunction_derivative<>>
	CONSUME 
		com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper$5 : 1;
	PRODUCE 
		org.apache.commons.math.analysis.UnivariateRealFunction : 1;
TRANSITION <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper__com.opengamma.analytics.math.function.Function1D_unwrap<org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeForm>>
	CONSUME 
		org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeForm : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.Function1D : 1;
TRANSITION <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper__com.opengamma.analytics.math.matrix.DoubleMatrix1D_unwrap<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
TRANSITION <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper__com.opengamma.analytics.math.matrix.DoubleMatrix2D_unwrap<org.apache.commons.math.linear.RealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
TRANSITION <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper__double[]_unwrap<org.apache.commons.math.optimization.RealPointValuePair>>
	CONSUME 
		org.apache.commons.math.optimization.RealPointValuePair : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper__org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction_wrapDifferentiable<com.opengamma.analytics.math.function.DoubleFunction1D>>
	CONSUME 
		com.opengamma.analytics.math.function.DoubleFunction1D : 1;
	PRODUCE 
		org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction : 1;
TRANSITION <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper__org.apache.commons.math.analysis.MultivariateRealFunction_wrap<com.opengamma.analytics.math.function.FunctionND>>
	CONSUME 
		com.opengamma.analytics.math.function.FunctionND : 1;
	PRODUCE 
		org.apache.commons.math.analysis.MultivariateRealFunction : 1;
TRANSITION <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper__org.apache.commons.math.analysis.MultivariateRealFunction_wrapMultivariate<com.opengamma.analytics.math.function.Function1D>>
	CONSUME 
		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		org.apache.commons.math.analysis.MultivariateRealFunction : 1;
TRANSITION <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper__org.apache.commons.math.analysis.UnivariateRealFunction_wrapUnivariate<com.opengamma.analytics.math.function.Function1D>>
	CONSUME 
		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		org.apache.commons.math.analysis.UnivariateRealFunction : 1;
TRANSITION <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper__org.apache.commons.math.complex.Complex_wrap<com.opengamma.analytics.math.number.ComplexNumber>>
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
	PRODUCE 
		org.apache.commons.math.complex.Complex : 1;
TRANSITION <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper__org.apache.commons.math.linear.RealMatrix_wrap<com.opengamma.analytics.math.matrix.DoubleMatrix2D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper__org.apache.commons.math.linear.RealMatrix_wrapAsMatrix<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper__org.apache.commons.math.linear.RealVector_wrap<com.opengamma.analytics.math.matrix.DoubleMatrix1D>>
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <com.opengamma.analytics.math.utilities.Diff__double[]_values<double[]>>
	CONSUME 
		double[] : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.utilities.Diff__double[]_values<double[].int>>
	CONSUME 
		double[] : 1,

		int : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <com.opengamma.analytics.math.utilities.Diff__float[]_values<float[]>>
	CONSUME 
		float[] : 1;
	PRODUCE 
		float[] : 1;
TRANSITION <com.opengamma.analytics.math.utilities.Diff__float[]_values<float[].int>>
	CONSUME 
		int : 1,

		float[] : 1;
	PRODUCE 
		float[] : 1;
TRANSITION <com.opengamma.analytics.math.utilities.Diff__int[]_values<int[]>>
	CONSUME 
		int[] : 1;
	PRODUCE 
		int[] : 1;
TRANSITION <com.opengamma.analytics.math.utilities.Diff__int[]_values<int[].int>>
	CONSUME 
		int[] : 1,

		int : 1;
	PRODUCE 
		int[] : 1;
TRANSITION <com.opengamma.analytics.math.utilities.Diff__long[]_values<long[]>>
	CONSUME 
		long[] : 1;
	PRODUCE 
		long[] : 1;
TRANSITION <com.opengamma.analytics.math.utilities.Diff__long[]_values<long[].int>>
	CONSUME 
		long[] : 1,

		int : 1;
	PRODUCE 
		long[] : 1;
TRANSITION <com.opengamma.analytics.math.utilities.Diff__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.utilities.Diff : 1;
TRANSITION <com.opengamma.analytics.math.utilities.Epsilon__double_epsilon<double>>
	CONSUME 
		double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.utilities.Epsilon__double_epsilonP<double>>
	CONSUME 
		double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.utilities.Epsilon__double_epsilonPP<double>>
	CONSUME 
		double : 1;
	PRODUCE 
		double : 1;
TRANSITION <com.opengamma.analytics.math.utilities.Epsilon__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		com.opengamma.analytics.math.utilities.Epsilon : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix$1__org.apache.commons.math.FieldElement_visit<int.int.org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.linear.AbstractFieldMatrix$1 : 1,

		org.apache.commons.math.FieldElement : 1,

		int : 2;
	PRODUCE 
		org.apache.commons.math.FieldElement : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix$2__void_visit<int.int.org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.FieldElement : 1,

		org.apache.commons.math.linear.AbstractFieldMatrix$2 : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix$3__void_visit<int.int.org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.FieldElement : 1,

		org.apache.commons.math.linear.AbstractFieldMatrix$3 : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix__boolean_equals<java.lang.Object>>
	CONSUME 
		org.apache.commons.math.linear.AbstractFieldMatrix : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix__boolean_isSquare<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractFieldMatrix : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix__int_getColumnDimension<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractFieldMatrix : 1;
	PRODUCE 
		int : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix__int_getRowDimension<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractFieldMatrix : 1;
	PRODUCE 
		int : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix__org.apache.commons.math.Field_getField<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractFieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.Field : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix__org.apache.commons.math.FieldElement_getEntry<int.int>>
	CONSUME 
		org.apache.commons.math.linear.AbstractFieldMatrix : 1,

		int : 2;
	PRODUCE 
		org.apache.commons.math.FieldElement : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix__org.apache.commons.math.FieldElement_getTrace<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractFieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix__org.apache.commons.math.FieldElement_walkInColumnOrder<org.apache.commons.math.linear.FieldMatrixChangingVisitor>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrixChangingVisitor : 1,

		org.apache.commons.math.linear.AbstractFieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix__org.apache.commons.math.FieldElement_walkInColumnOrder<org.apache.commons.math.linear.FieldMatrixPreservingVisitor>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrixPreservingVisitor : 1,

		org.apache.commons.math.linear.AbstractFieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix__org.apache.commons.math.FieldElement_walkInOptimizedOrder<org.apache.commons.math.linear.FieldMatrixChangingVisitor>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrixChangingVisitor : 1,

		org.apache.commons.math.linear.AbstractFieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix__org.apache.commons.math.FieldElement_walkInOptimizedOrder<org.apache.commons.math.linear.FieldMatrixPreservingVisitor>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrixPreservingVisitor : 1,

		org.apache.commons.math.linear.AbstractFieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix__org.apache.commons.math.FieldElement_walkInRowOrder<org.apache.commons.math.linear.FieldMatrixChangingVisitor>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrixChangingVisitor : 1,

		org.apache.commons.math.linear.AbstractFieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix__org.apache.commons.math.FieldElement_walkInRowOrder<org.apache.commons.math.linear.FieldMatrixPreservingVisitor>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrixPreservingVisitor : 1,

		org.apache.commons.math.linear.AbstractFieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix__org.apache.commons.math.FieldElement[]_getColumn<int>>
	CONSUME 
		org.apache.commons.math.linear.AbstractFieldMatrix : 1,

		int : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement[] : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix__org.apache.commons.math.FieldElement[]_getRow<int>>
	CONSUME 
		org.apache.commons.math.linear.AbstractFieldMatrix : 1,

		int : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement[] : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix__org.apache.commons.math.FieldElement[]_operate<org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1,

		org.apache.commons.math.linear.AbstractFieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement[] : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix__org.apache.commons.math.FieldElement[]_preMultiply<org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1,

		org.apache.commons.math.linear.AbstractFieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement[] : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix__org.apache.commons.math.FieldElement[][]_getData<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractFieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement[][] : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix__org.apache.commons.math.linear.FieldMatrix_add<org.apache.commons.math.linear.FieldMatrix>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrix : 1,

		org.apache.commons.math.linear.AbstractFieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix__org.apache.commons.math.linear.FieldMatrix_copy<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractFieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix__org.apache.commons.math.linear.FieldMatrix_createMatrix<int.int>>
	CONSUME 
		org.apache.commons.math.linear.AbstractFieldMatrix : 1,

		int : 2;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix__org.apache.commons.math.linear.FieldMatrix_getColumnMatrix<int>>
	CONSUME 
		org.apache.commons.math.linear.AbstractFieldMatrix : 1,

		int : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix__org.apache.commons.math.linear.FieldMatrix_getRowMatrix<int>>
	CONSUME 
		org.apache.commons.math.linear.AbstractFieldMatrix : 1,

		int : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix__org.apache.commons.math.linear.FieldMatrix_getSubMatrix<int.int.int.int>>
	CONSUME 
		org.apache.commons.math.linear.AbstractFieldMatrix : 1,

		int : 4;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix__org.apache.commons.math.linear.FieldMatrix_getSubMatrix<int[].int[]>>
	CONSUME 
		org.apache.commons.math.linear.AbstractFieldMatrix : 1,

		int[] : 2;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix__org.apache.commons.math.linear.FieldMatrix_multiply<org.apache.commons.math.linear.FieldMatrix>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrix : 1,

		org.apache.commons.math.linear.AbstractFieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix__org.apache.commons.math.linear.FieldMatrix_preMultiply<org.apache.commons.math.linear.FieldMatrix>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrix : 1,

		org.apache.commons.math.linear.AbstractFieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix__org.apache.commons.math.linear.FieldMatrix_scalarAdd<org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.FieldElement : 1,

		org.apache.commons.math.linear.AbstractFieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix__org.apache.commons.math.linear.FieldMatrix_scalarMultiply<org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.FieldElement : 1,

		org.apache.commons.math.linear.AbstractFieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix__org.apache.commons.math.linear.FieldMatrix_subtract<org.apache.commons.math.linear.FieldMatrix>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrix : 1,

		org.apache.commons.math.linear.AbstractFieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix__org.apache.commons.math.linear.FieldMatrix_transpose<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractFieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix__org.apache.commons.math.linear.FieldVector_getColumnVector<int>>
	CONSUME 
		org.apache.commons.math.linear.AbstractFieldMatrix : 1,

		int : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix__org.apache.commons.math.linear.FieldVector_getRowVector<int>>
	CONSUME 
		org.apache.commons.math.linear.AbstractFieldMatrix : 1,

		int : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix__org.apache.commons.math.linear.FieldVector_operate<org.apache.commons.math.linear.FieldVector>>
	CONSUME 
		org.apache.commons.math.linear.AbstractFieldMatrix : 1,

		org.apache.commons.math.linear.FieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix__org.apache.commons.math.linear.FieldVector_preMultiply<org.apache.commons.math.linear.FieldVector>>
	CONSUME 
		org.apache.commons.math.linear.AbstractFieldMatrix : 1,

		org.apache.commons.math.linear.FieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix__void_addToEntry<int.int.org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.FieldElement : 1,

		org.apache.commons.math.linear.AbstractFieldMatrix : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix__void_copySubMatrix<int[].int[].org.apache.commons.math.FieldElement[][]>>
	CONSUME 
		org.apache.commons.math.linear.AbstractFieldMatrix : 1,

		int[] : 2,

		org.apache.commons.math.FieldElement[][] : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix__void_multiplyEntry<int.int.org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.FieldElement : 1,

		org.apache.commons.math.linear.AbstractFieldMatrix : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix__void_setColumn<int.org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1,

		org.apache.commons.math.linear.AbstractFieldMatrix : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix__void_setColumnMatrix<int.org.apache.commons.math.linear.FieldMatrix>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrix : 1,

		org.apache.commons.math.linear.AbstractFieldMatrix : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix__void_setColumnVector<int.org.apache.commons.math.linear.FieldVector>>
	CONSUME 
		org.apache.commons.math.linear.AbstractFieldMatrix : 1,

		org.apache.commons.math.linear.FieldVector : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix__void_setEntry<int.int.org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.FieldElement : 1,

		org.apache.commons.math.linear.AbstractFieldMatrix : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix__void_setRow<int.org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1,

		org.apache.commons.math.linear.AbstractFieldMatrix : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix__void_setRowMatrix<int.org.apache.commons.math.linear.FieldMatrix>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrix : 1,

		org.apache.commons.math.linear.AbstractFieldMatrix : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix__void_setRowVector<int.org.apache.commons.math.linear.FieldVector>>
	CONSUME 
		org.apache.commons.math.linear.AbstractFieldMatrix : 1,

		org.apache.commons.math.linear.FieldVector : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.AbstractFieldMatrix__void_setSubMatrix<org.apache.commons.math.FieldElement[][].int.int>>
	CONSUME 
		org.apache.commons.math.linear.AbstractFieldMatrix : 1,

		org.apache.commons.math.FieldElement[][] : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix$1__double_end<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix$1 : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix$1__void_visit<int.int.double>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix$1 : 1,

		double : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix$2__double_end<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix$2 : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix$2__void_visit<int.int.double>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix$2 : 1,

		double : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix$3__double_visit<int.int.double>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix$3 : 1,

		double : 1,

		int : 2;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix$4__void_visit<int.int.double>>
	CONSUME 
		double : 1,

		org.apache.commons.math.linear.AbstractRealMatrix$4 : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix$5__void_visit<int.int.double>>
	CONSUME 
		double : 1,

		int : 2,

		org.apache.commons.math.linear.AbstractRealMatrix$5 : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__boolean_equals<java.lang.Object>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__boolean_isSingular<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__boolean_isSquare<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__double_getDeterminant<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__double_getEntry<int.int>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1,

		int : 2;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__double_getFrobeniusNorm<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__double_getNorm<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__double_getTrace<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__double_walkInColumnOrder<org.apache.commons.math.linear.RealMatrixChangingVisitor>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1,

		org.apache.commons.math.linear.RealMatrixChangingVisitor : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__double_walkInColumnOrder<org.apache.commons.math.linear.RealMatrixPreservingVisitor>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1,

		org.apache.commons.math.linear.RealMatrixPreservingVisitor : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__double_walkInOptimizedOrder<org.apache.commons.math.linear.RealMatrixChangingVisitor>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1,

		org.apache.commons.math.linear.RealMatrixChangingVisitor : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__double_walkInOptimizedOrder<org.apache.commons.math.linear.RealMatrixPreservingVisitor>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1,

		org.apache.commons.math.linear.RealMatrixPreservingVisitor : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__double_walkInRowOrder<org.apache.commons.math.linear.RealMatrixChangingVisitor>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1,

		org.apache.commons.math.linear.RealMatrixChangingVisitor : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__double_walkInRowOrder<org.apache.commons.math.linear.RealMatrixPreservingVisitor>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1,

		org.apache.commons.math.linear.RealMatrixPreservingVisitor : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__double[]_getColumn<int>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1,

		int : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__double[]_getRow<int>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1,

		int : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__double[]_operate<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.AbstractRealMatrix : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__double[]_preMultiply<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.AbstractRealMatrix : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__double[]_solve<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.AbstractRealMatrix : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__double[][]_getData<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1;
	PRODUCE 
		double[][] : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__int_getColumnDimension<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1;
	PRODUCE 
		int : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__int_getRowDimension<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1;
	PRODUCE 
		int : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__org.apache.commons.math.linear.RealMatrix_add<org.apache.commons.math.linear.RealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1,

		org.apache.commons.math.linear.RealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__org.apache.commons.math.linear.RealMatrix_copy<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__org.apache.commons.math.linear.RealMatrix_createMatrix<int.int>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1,

		int : 2;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__org.apache.commons.math.linear.RealMatrix_getColumnMatrix<int>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1,

		int : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__org.apache.commons.math.linear.RealMatrix_getRowMatrix<int>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1,

		int : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__org.apache.commons.math.linear.RealMatrix_getSubMatrix<int.int.int.int>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1,

		int : 4;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__org.apache.commons.math.linear.RealMatrix_getSubMatrix<int[].int[]>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1,

		int[] : 2;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__org.apache.commons.math.linear.RealMatrix_inverse<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__org.apache.commons.math.linear.RealMatrix_multiply<org.apache.commons.math.linear.RealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1,

		org.apache.commons.math.linear.RealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__org.apache.commons.math.linear.RealMatrix_preMultiply<org.apache.commons.math.linear.RealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1,

		org.apache.commons.math.linear.RealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__org.apache.commons.math.linear.RealMatrix_scalarAdd<double>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1,

		double : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__org.apache.commons.math.linear.RealMatrix_scalarMultiply<double>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1,

		double : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__org.apache.commons.math.linear.RealMatrix_solve<org.apache.commons.math.linear.RealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1,

		org.apache.commons.math.linear.RealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__org.apache.commons.math.linear.RealMatrix_subtract<org.apache.commons.math.linear.RealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1,

		org.apache.commons.math.linear.RealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__org.apache.commons.math.linear.RealMatrix_transpose<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__org.apache.commons.math.linear.RealVector_getColumnVector<int>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1,

		int : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__org.apache.commons.math.linear.RealVector_getRowVector<int>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1,

		int : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__org.apache.commons.math.linear.RealVector_operate<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1,

		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__org.apache.commons.math.linear.RealVector_preMultiply<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1,

		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__void_addToEntry<int.int.double>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1,

		double : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__void_copySubMatrix<int[].int[].double[][]>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1,

		double[][] : 1,

		int[] : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__void_luDecompose<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__void_multiplyEntry<int.int.double>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1,

		double : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__void_setColumn<int.double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.AbstractRealMatrix : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__void_setColumnMatrix<int.org.apache.commons.math.linear.RealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1,

		org.apache.commons.math.linear.RealMatrix : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__void_setColumnVector<int.org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1,

		org.apache.commons.math.linear.RealVector : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__void_setEntry<int.int.double>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1,

		double : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__void_setRow<int.double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.AbstractRealMatrix : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__void_setRowMatrix<int.org.apache.commons.math.linear.RealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1,

		org.apache.commons.math.linear.RealMatrix : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__void_setRowVector<int.org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1,

		org.apache.commons.math.linear.RealVector : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealMatrix__void_setSubMatrix<double[][].int.int>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1,

		double[][] : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector$1__boolean_hasNext<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector$1 : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector$1__java.lang.Object_next<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector$1 : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector$1__org.apache.commons.math.linear.RealVector$Entry_next<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector$1 : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector$Entry : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector$1__void_remove<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector$1 : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector$EntryImpl__double_getValue<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector$EntryImpl : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector$EntryImpl__void_<init><org.apache.commons.math.linear.AbstractRealVector>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.AbstractRealVector$EntryImpl : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector$EntryImpl__void_setValue<double>>
	CONSUME 
		double : 1,

		org.apache.commons.math.linear.AbstractRealVector$EntryImpl : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__double_dotProduct<double[]>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1,

		double[] : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__double_dotProduct<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1,

		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__double_getDistance<double[]>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1,

		double[] : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__double_getDistance<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1,

		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__double_getL1Distance<double[]>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1,

		double[] : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__double_getL1Distance<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1,

		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__double_getL1Norm<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__double_getLInfDistance<double[]>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1,

		double[] : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__double_getLInfDistance<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1,

		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__double_getLInfNorm<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__double_getMaxValue<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__double_getMinValue<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__double_getNorm<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__double[]_getData<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__double[]_toArray<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__int_getMaxIndex<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		int : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__int_getMinIndex<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		int : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.AbstractRealVector_copy<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.AbstractRealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealMatrix_outerProduct<double[]>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1,

		double[] : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealMatrix_outerProduct<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1,

		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_add<double[]>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1,

		double[] : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_add<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1,

		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_copy<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_ebeDivide<double[]>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1,

		double[] : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_ebeMultiply<double[]>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1,

		double[] : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_map<org.apache.commons.math.analysis.UnivariateRealFunction>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1,

		org.apache.commons.math.analysis.UnivariateRealFunction : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapAbs<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapAbsToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapAcos<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapAcosToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapAdd<double>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1,

		double : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapAddToSelf<double>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1,

		double : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapAsin<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapAsinToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapAtan<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapAtanToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapCbrt<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapCbrtToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapCeil<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapCeilToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapCos<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapCosToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapCosh<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapCoshToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapDivide<double>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1,

		double : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapDivideToSelf<double>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1,

		double : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapExp<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapExpToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapExpm1<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapExpm1ToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapFloor<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapFloorToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapInv<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapInvToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapLog<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapLog10<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapLog10ToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapLog1p<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapLog1pToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapLogToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapMultiply<double>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1,

		double : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapMultiplyToSelf<double>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1,

		double : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapPow<double>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1,

		double : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapPowToSelf<double>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1,

		double : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapRint<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapRintToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapSignum<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapSignumToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapSin<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapSinToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapSinh<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapSinhToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapSqrt<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapSqrtToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapSubtract<double>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1,

		double : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapSubtractToSelf<double>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1,

		double : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapTan<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapTanToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapTanh<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapTanhToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapToSelf<org.apache.commons.math.analysis.UnivariateRealFunction>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1,

		org.apache.commons.math.analysis.UnivariateRealFunction : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapUlp<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_mapUlpToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_projection<double[]>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1,

		double[] : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_subtract<double[]>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1,

		double[] : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_subtract<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1,

		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__org.apache.commons.math.linear.RealVector_unitVector<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		org.apache.commons.math.linear.AbstractRealVector : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__void_set<double>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1,

		double : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__void_setSubVector<int.double[]>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1,

		double[] : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__void_setSubVector<int.org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1,

		org.apache.commons.math.linear.RealVector : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.AbstractRealVector__void_unitize<>>
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.AnyMatrix__boolean_isSquare<>>
	CONSUME 
		org.apache.commons.math.linear.AnyMatrix : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <org.apache.commons.math.linear.AnyMatrix__int_getColumnDimension<>>
	CONSUME 
		org.apache.commons.math.linear.AnyMatrix : 1;
	PRODUCE 
		int : 1;
TRANSITION <org.apache.commons.math.linear.AnyMatrix__int_getRowDimension<>>
	CONSUME 
		org.apache.commons.math.linear.AnyMatrix : 1;
	PRODUCE 
		int : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowFieldMatrix__int_getColumnDimension<>>
	CONSUME 
		org.apache.commons.math.linear.Array2DRowFieldMatrix : 1;
	PRODUCE 
		int : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowFieldMatrix__int_getRowDimension<>>
	CONSUME 
		org.apache.commons.math.linear.Array2DRowFieldMatrix : 1;
	PRODUCE 
		int : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowFieldMatrix__org.apache.commons.math.FieldElement_getEntry<int.int>>
	CONSUME 
		org.apache.commons.math.linear.Array2DRowFieldMatrix : 1,

		int : 2;
	PRODUCE 
		org.apache.commons.math.FieldElement : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowFieldMatrix__org.apache.commons.math.FieldElement_walkInColumnOrder<org.apache.commons.math.linear.FieldMatrixChangingVisitor>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrixChangingVisitor : 1,

		org.apache.commons.math.linear.Array2DRowFieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowFieldMatrix__org.apache.commons.math.FieldElement_walkInColumnOrder<org.apache.commons.math.linear.FieldMatrixPreservingVisitor>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrixPreservingVisitor : 1,

		org.apache.commons.math.linear.Array2DRowFieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowFieldMatrix__org.apache.commons.math.FieldElement_walkInRowOrder<org.apache.commons.math.linear.FieldMatrixChangingVisitor>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrixChangingVisitor : 1,

		org.apache.commons.math.linear.Array2DRowFieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowFieldMatrix__org.apache.commons.math.FieldElement_walkInRowOrder<org.apache.commons.math.linear.FieldMatrixPreservingVisitor>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrixPreservingVisitor : 1,

		org.apache.commons.math.linear.Array2DRowFieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowFieldMatrix__org.apache.commons.math.FieldElement[]_operate<org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1,

		org.apache.commons.math.linear.Array2DRowFieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement[] : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowFieldMatrix__org.apache.commons.math.FieldElement[]_preMultiply<org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1,

		org.apache.commons.math.linear.Array2DRowFieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement[] : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowFieldMatrix__org.apache.commons.math.FieldElement[][]_getData<>>
	CONSUME 
		org.apache.commons.math.linear.Array2DRowFieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement[][] : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowFieldMatrix__org.apache.commons.math.FieldElement[][]_getDataRef<>>
	CONSUME 
		org.apache.commons.math.linear.Array2DRowFieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement[][] : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowFieldMatrix__org.apache.commons.math.linear.Array2DRowFieldMatrix_add<org.apache.commons.math.linear.Array2DRowFieldMatrix>>
	CONSUME 
		org.apache.commons.math.linear.Array2DRowFieldMatrix : 2;
	PRODUCE 
		org.apache.commons.math.linear.Array2DRowFieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowFieldMatrix__org.apache.commons.math.linear.Array2DRowFieldMatrix_multiply<org.apache.commons.math.linear.Array2DRowFieldMatrix>>
	CONSUME 
		org.apache.commons.math.linear.Array2DRowFieldMatrix : 2;
	PRODUCE 
		org.apache.commons.math.linear.Array2DRowFieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowFieldMatrix__org.apache.commons.math.linear.Array2DRowFieldMatrix_subtract<org.apache.commons.math.linear.Array2DRowFieldMatrix>>
	CONSUME 
		org.apache.commons.math.linear.Array2DRowFieldMatrix : 2;
	PRODUCE 
		org.apache.commons.math.linear.Array2DRowFieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowFieldMatrix__org.apache.commons.math.linear.FieldMatrix_add<org.apache.commons.math.linear.FieldMatrix>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrix : 1,

		org.apache.commons.math.linear.Array2DRowFieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowFieldMatrix__org.apache.commons.math.linear.FieldMatrix_copy<>>
	CONSUME 
		org.apache.commons.math.linear.Array2DRowFieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowFieldMatrix__org.apache.commons.math.linear.FieldMatrix_createMatrix<int.int>>
	CONSUME 
		org.apache.commons.math.linear.Array2DRowFieldMatrix : 1,

		int : 2;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowFieldMatrix__org.apache.commons.math.linear.FieldMatrix_multiply<org.apache.commons.math.linear.FieldMatrix>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrix : 1,

		org.apache.commons.math.linear.Array2DRowFieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowFieldMatrix__org.apache.commons.math.linear.FieldMatrix_subtract<org.apache.commons.math.linear.FieldMatrix>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrix : 1,

		org.apache.commons.math.linear.Array2DRowFieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowFieldMatrix__void_<init><org.apache.commons.math.Field>>
	CONSUME 
		org.apache.commons.math.Field : 1;
	PRODUCE 
		org.apache.commons.math.linear.Array2DRowFieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowFieldMatrix__void_<init><org.apache.commons.math.Field.int.int>>
	CONSUME 
		org.apache.commons.math.Field : 1,

		int : 2;
	PRODUCE 
		org.apache.commons.math.linear.Array2DRowFieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowFieldMatrix__void_<init><org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1;
	PRODUCE 
		org.apache.commons.math.linear.Array2DRowFieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowFieldMatrix__void_<init><org.apache.commons.math.FieldElement[][]>>
	CONSUME 
		org.apache.commons.math.FieldElement[][] : 1;
	PRODUCE 
		org.apache.commons.math.linear.Array2DRowFieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowFieldMatrix__void_<init><org.apache.commons.math.FieldElement[][].boolean>>
	CONSUME 
		boolean : 1,

		org.apache.commons.math.FieldElement[][] : 1;
	PRODUCE 
		org.apache.commons.math.linear.Array2DRowFieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowFieldMatrix__void_addToEntry<int.int.org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.FieldElement : 1,

		org.apache.commons.math.linear.Array2DRowFieldMatrix : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowFieldMatrix__void_multiplyEntry<int.int.org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.FieldElement : 1,

		org.apache.commons.math.linear.Array2DRowFieldMatrix : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowFieldMatrix__void_setEntry<int.int.org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.FieldElement : 1,

		org.apache.commons.math.linear.Array2DRowFieldMatrix : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowFieldMatrix__void_setSubMatrix<org.apache.commons.math.FieldElement[][].int.int>>
	CONSUME 
		org.apache.commons.math.FieldElement[][] : 1,

		org.apache.commons.math.linear.Array2DRowFieldMatrix : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowRealMatrix__double_getEntry<int.int>>
	CONSUME 
		org.apache.commons.math.linear.Array2DRowRealMatrix : 1,

		int : 2;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowRealMatrix__double_walkInColumnOrder<org.apache.commons.math.linear.RealMatrixChangingVisitor>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrixChangingVisitor : 1,

		org.apache.commons.math.linear.Array2DRowRealMatrix : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowRealMatrix__double_walkInColumnOrder<org.apache.commons.math.linear.RealMatrixPreservingVisitor>>
	CONSUME 
		org.apache.commons.math.linear.Array2DRowRealMatrix : 1,

		org.apache.commons.math.linear.RealMatrixPreservingVisitor : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowRealMatrix__double_walkInRowOrder<org.apache.commons.math.linear.RealMatrixChangingVisitor>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrixChangingVisitor : 1,

		org.apache.commons.math.linear.Array2DRowRealMatrix : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowRealMatrix__double_walkInRowOrder<org.apache.commons.math.linear.RealMatrixPreservingVisitor>>
	CONSUME 
		org.apache.commons.math.linear.Array2DRowRealMatrix : 1,

		org.apache.commons.math.linear.RealMatrixPreservingVisitor : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowRealMatrix__double[]_operate<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.Array2DRowRealMatrix : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowRealMatrix__double[]_preMultiply<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.Array2DRowRealMatrix : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowRealMatrix__double[][]_getData<>>
	CONSUME 
		org.apache.commons.math.linear.Array2DRowRealMatrix : 1;
	PRODUCE 
		double[][] : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowRealMatrix__double[][]_getDataRef<>>
	CONSUME 
		org.apache.commons.math.linear.Array2DRowRealMatrix : 1;
	PRODUCE 
		double[][] : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowRealMatrix__int_getColumnDimension<>>
	CONSUME 
		org.apache.commons.math.linear.Array2DRowRealMatrix : 1;
	PRODUCE 
		int : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowRealMatrix__int_getRowDimension<>>
	CONSUME 
		org.apache.commons.math.linear.Array2DRowRealMatrix : 1;
	PRODUCE 
		int : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowRealMatrix__org.apache.commons.math.linear.Array2DRowRealMatrix_add<org.apache.commons.math.linear.Array2DRowRealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.Array2DRowRealMatrix : 2;
	PRODUCE 
		org.apache.commons.math.linear.Array2DRowRealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowRealMatrix__org.apache.commons.math.linear.Array2DRowRealMatrix_multiply<org.apache.commons.math.linear.Array2DRowRealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.Array2DRowRealMatrix : 2;
	PRODUCE 
		org.apache.commons.math.linear.Array2DRowRealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowRealMatrix__org.apache.commons.math.linear.Array2DRowRealMatrix_subtract<org.apache.commons.math.linear.Array2DRowRealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.Array2DRowRealMatrix : 2;
	PRODUCE 
		org.apache.commons.math.linear.Array2DRowRealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowRealMatrix__org.apache.commons.math.linear.RealMatrix_add<org.apache.commons.math.linear.RealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1,

		org.apache.commons.math.linear.Array2DRowRealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowRealMatrix__org.apache.commons.math.linear.RealMatrix_copy<>>
	CONSUME 
		org.apache.commons.math.linear.Array2DRowRealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowRealMatrix__org.apache.commons.math.linear.RealMatrix_createMatrix<int.int>>
	CONSUME 
		org.apache.commons.math.linear.Array2DRowRealMatrix : 1,

		int : 2;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowRealMatrix__org.apache.commons.math.linear.RealMatrix_multiply<org.apache.commons.math.linear.RealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1,

		org.apache.commons.math.linear.Array2DRowRealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowRealMatrix__org.apache.commons.math.linear.RealMatrix_subtract<org.apache.commons.math.linear.RealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1,

		org.apache.commons.math.linear.Array2DRowRealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowRealMatrix__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		org.apache.commons.math.linear.Array2DRowRealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowRealMatrix__void_<init><double[]>>
	CONSUME 
		double[] : 1;
	PRODUCE 
		org.apache.commons.math.linear.Array2DRowRealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowRealMatrix__void_<init><double[][]>>
	CONSUME 
		double[][] : 1;
	PRODUCE 
		org.apache.commons.math.linear.Array2DRowRealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowRealMatrix__void_<init><double[][].boolean>>
	CONSUME 
		boolean : 1,

		double[][] : 1;
	PRODUCE 
		org.apache.commons.math.linear.Array2DRowRealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowRealMatrix__void_<init><int.int>>
	CONSUME 
		int : 2;
	PRODUCE 
		org.apache.commons.math.linear.Array2DRowRealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowRealMatrix__void_addToEntry<int.int.double>>
	CONSUME 
		double : 1,

		org.apache.commons.math.linear.Array2DRowRealMatrix : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowRealMatrix__void_multiplyEntry<int.int.double>>
	CONSUME 
		double : 1,

		org.apache.commons.math.linear.Array2DRowRealMatrix : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowRealMatrix__void_setEntry<int.int.double>>
	CONSUME 
		double : 1,

		org.apache.commons.math.linear.Array2DRowRealMatrix : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.Array2DRowRealMatrix__void_setSubMatrix<double[][].int.int>>
	CONSUME 
		org.apache.commons.math.linear.Array2DRowRealMatrix : 1,

		double[][] : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__boolean_equals<java.lang.Object>>
	CONSUME 
		org.apache.commons.math.linear.ArrayFieldVector : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__int_getDimension<>>
	CONSUME 
		org.apache.commons.math.linear.ArrayFieldVector : 1;
	PRODUCE 
		int : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__org.apache.commons.math.Field_getField<>>
	CONSUME 
		org.apache.commons.math.linear.ArrayFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.Field : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__org.apache.commons.math.FieldElement_dotProduct<org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1,

		org.apache.commons.math.linear.ArrayFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__org.apache.commons.math.FieldElement_dotProduct<org.apache.commons.math.linear.ArrayFieldVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayFieldVector : 2;
	PRODUCE 
		org.apache.commons.math.FieldElement : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__org.apache.commons.math.FieldElement_dotProduct<org.apache.commons.math.linear.FieldVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayFieldVector : 1,

		org.apache.commons.math.linear.FieldVector : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__org.apache.commons.math.FieldElement_getEntry<int>>
	CONSUME 
		org.apache.commons.math.linear.ArrayFieldVector : 1,

		int : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__org.apache.commons.math.FieldElement[]_getData<>>
	CONSUME 
		org.apache.commons.math.linear.ArrayFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement[] : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__org.apache.commons.math.FieldElement[]_getDataRef<>>
	CONSUME 
		org.apache.commons.math.linear.ArrayFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement[] : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__org.apache.commons.math.FieldElement[]_toArray<>>
	CONSUME 
		org.apache.commons.math.linear.ArrayFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement[] : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__org.apache.commons.math.linear.ArrayFieldVector_add<org.apache.commons.math.linear.ArrayFieldVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayFieldVector : 2;
	PRODUCE 
		org.apache.commons.math.linear.ArrayFieldVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__org.apache.commons.math.linear.ArrayFieldVector_append<org.apache.commons.math.linear.ArrayFieldVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayFieldVector : 2;
	PRODUCE 
		org.apache.commons.math.linear.ArrayFieldVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__org.apache.commons.math.linear.ArrayFieldVector_ebeDivide<org.apache.commons.math.linear.ArrayFieldVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayFieldVector : 2;
	PRODUCE 
		org.apache.commons.math.linear.ArrayFieldVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__org.apache.commons.math.linear.ArrayFieldVector_ebeMultiply<org.apache.commons.math.linear.ArrayFieldVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayFieldVector : 2;
	PRODUCE 
		org.apache.commons.math.linear.ArrayFieldVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__org.apache.commons.math.linear.ArrayFieldVector_projection<org.apache.commons.math.linear.ArrayFieldVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayFieldVector : 2;
	PRODUCE 
		org.apache.commons.math.linear.ArrayFieldVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__org.apache.commons.math.linear.ArrayFieldVector_subtract<org.apache.commons.math.linear.ArrayFieldVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayFieldVector : 2;
	PRODUCE 
		org.apache.commons.math.linear.ArrayFieldVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__org.apache.commons.math.linear.FieldMatrix_outerProduct<org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1,

		org.apache.commons.math.linear.ArrayFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__org.apache.commons.math.linear.FieldMatrix_outerProduct<org.apache.commons.math.linear.ArrayFieldVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayFieldVector : 2;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__org.apache.commons.math.linear.FieldMatrix_outerProduct<org.apache.commons.math.linear.FieldVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayFieldVector : 1,

		org.apache.commons.math.linear.FieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__org.apache.commons.math.linear.FieldVector_add<org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1,

		org.apache.commons.math.linear.ArrayFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__org.apache.commons.math.linear.FieldVector_add<org.apache.commons.math.linear.FieldVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayFieldVector : 1,

		org.apache.commons.math.linear.FieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__org.apache.commons.math.linear.FieldVector_append<org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.linear.ArrayFieldVector : 1,

		org.apache.commons.math.FieldElement : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__org.apache.commons.math.linear.FieldVector_append<org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1,

		org.apache.commons.math.linear.ArrayFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__org.apache.commons.math.linear.FieldVector_append<org.apache.commons.math.linear.FieldVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayFieldVector : 1,

		org.apache.commons.math.linear.FieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__org.apache.commons.math.linear.FieldVector_copy<>>
	CONSUME 
		org.apache.commons.math.linear.ArrayFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__org.apache.commons.math.linear.FieldVector_ebeDivide<org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1,

		org.apache.commons.math.linear.ArrayFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__org.apache.commons.math.linear.FieldVector_ebeDivide<org.apache.commons.math.linear.FieldVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayFieldVector : 1,

		org.apache.commons.math.linear.FieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__org.apache.commons.math.linear.FieldVector_ebeMultiply<org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1,

		org.apache.commons.math.linear.ArrayFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__org.apache.commons.math.linear.FieldVector_ebeMultiply<org.apache.commons.math.linear.FieldVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayFieldVector : 1,

		org.apache.commons.math.linear.FieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__org.apache.commons.math.linear.FieldVector_getSubVector<int.int>>
	CONSUME 
		org.apache.commons.math.linear.ArrayFieldVector : 1,

		int : 2;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__org.apache.commons.math.linear.FieldVector_mapAdd<org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.linear.ArrayFieldVector : 1,

		org.apache.commons.math.FieldElement : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__org.apache.commons.math.linear.FieldVector_mapAddToSelf<org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.linear.ArrayFieldVector : 1,

		org.apache.commons.math.FieldElement : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__org.apache.commons.math.linear.FieldVector_mapDivide<org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.linear.ArrayFieldVector : 1,

		org.apache.commons.math.FieldElement : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__org.apache.commons.math.linear.FieldVector_mapDivideToSelf<org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.linear.ArrayFieldVector : 1,

		org.apache.commons.math.FieldElement : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__org.apache.commons.math.linear.FieldVector_mapInv<>>
	CONSUME 
		org.apache.commons.math.linear.ArrayFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__org.apache.commons.math.linear.FieldVector_mapInvToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.ArrayFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__org.apache.commons.math.linear.FieldVector_mapMultiply<org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.linear.ArrayFieldVector : 1,

		org.apache.commons.math.FieldElement : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__org.apache.commons.math.linear.FieldVector_mapMultiplyToSelf<org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.linear.ArrayFieldVector : 1,

		org.apache.commons.math.FieldElement : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__org.apache.commons.math.linear.FieldVector_mapSubtract<org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.linear.ArrayFieldVector : 1,

		org.apache.commons.math.FieldElement : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__org.apache.commons.math.linear.FieldVector_mapSubtractToSelf<org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.linear.ArrayFieldVector : 1,

		org.apache.commons.math.FieldElement : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__org.apache.commons.math.linear.FieldVector_projection<org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1,

		org.apache.commons.math.linear.ArrayFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__org.apache.commons.math.linear.FieldVector_projection<org.apache.commons.math.linear.FieldVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayFieldVector : 1,

		org.apache.commons.math.linear.FieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__org.apache.commons.math.linear.FieldVector_subtract<org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1,

		org.apache.commons.math.linear.ArrayFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__org.apache.commons.math.linear.FieldVector_subtract<org.apache.commons.math.linear.FieldVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayFieldVector : 1,

		org.apache.commons.math.linear.FieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__void_<init><int.org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.FieldElement : 1,

		int : 1;
	PRODUCE 
		org.apache.commons.math.linear.ArrayFieldVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__void_<init><org.apache.commons.math.Field>>
	CONSUME 
		org.apache.commons.math.Field : 1;
	PRODUCE 
		org.apache.commons.math.linear.ArrayFieldVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__void_<init><org.apache.commons.math.Field.int>>
	CONSUME 
		org.apache.commons.math.Field : 1,

		int : 1;
	PRODUCE 
		org.apache.commons.math.linear.ArrayFieldVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__void_<init><org.apache.commons.math.Field.org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.Field : 1,

		org.apache.commons.math.FieldElement[] : 1;
	PRODUCE 
		org.apache.commons.math.linear.ArrayFieldVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__void_<init><org.apache.commons.math.Field.org.apache.commons.math.FieldElement[].boolean>>
	CONSUME 
		org.apache.commons.math.Field : 1,

		org.apache.commons.math.FieldElement[] : 1,

		boolean : 1;
	PRODUCE 
		org.apache.commons.math.linear.ArrayFieldVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__void_<init><org.apache.commons.math.Field.org.apache.commons.math.FieldElement[].org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.Field : 1,

		org.apache.commons.math.FieldElement[] : 2;
	PRODUCE 
		org.apache.commons.math.linear.ArrayFieldVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__void_<init><org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1;
	PRODUCE 
		org.apache.commons.math.linear.ArrayFieldVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__void_<init><org.apache.commons.math.FieldElement[].boolean>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1,

		boolean : 1;
	PRODUCE 
		org.apache.commons.math.linear.ArrayFieldVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__void_<init><org.apache.commons.math.FieldElement[].int.int>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1,

		int : 2;
	PRODUCE 
		org.apache.commons.math.linear.ArrayFieldVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__void_<init><org.apache.commons.math.FieldElement[].org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 2;
	PRODUCE 
		org.apache.commons.math.linear.ArrayFieldVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__void_<init><org.apache.commons.math.FieldElement[].org.apache.commons.math.linear.ArrayFieldVector>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1,

		org.apache.commons.math.linear.ArrayFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.ArrayFieldVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__void_<init><org.apache.commons.math.linear.ArrayFieldVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.ArrayFieldVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__void_<init><org.apache.commons.math.linear.ArrayFieldVector.boolean>>
	CONSUME 
		boolean : 1,

		org.apache.commons.math.linear.ArrayFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.ArrayFieldVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__void_<init><org.apache.commons.math.linear.ArrayFieldVector.org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1,

		org.apache.commons.math.linear.ArrayFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.ArrayFieldVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__void_<init><org.apache.commons.math.linear.ArrayFieldVector.org.apache.commons.math.linear.ArrayFieldVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayFieldVector : 2;
	PRODUCE 
		org.apache.commons.math.linear.ArrayFieldVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__void_<init><org.apache.commons.math.linear.FieldVector>>
	CONSUME 
		org.apache.commons.math.linear.FieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.ArrayFieldVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__void_set<int.org.apache.commons.math.linear.ArrayFieldVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayFieldVector : 2,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__void_set<org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.linear.ArrayFieldVector : 1,

		org.apache.commons.math.FieldElement : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__void_setEntry<int.org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.linear.ArrayFieldVector : 1,

		org.apache.commons.math.FieldElement : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__void_setSubVector<int.org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1,

		org.apache.commons.math.linear.ArrayFieldVector : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.ArrayFieldVector__void_setSubVector<int.org.apache.commons.math.linear.FieldVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayFieldVector : 1,

		org.apache.commons.math.linear.FieldVector : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__boolean_equals<java.lang.Object>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__boolean_isInfinite<>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__boolean_isNaN<>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__double_dotProduct<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__double_dotProduct<org.apache.commons.math.linear.ArrayRealVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 2;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__double_dotProduct<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1,

		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__double_getDistance<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__double_getDistance<org.apache.commons.math.linear.ArrayRealVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 2;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__double_getDistance<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1,

		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__double_getEntry<int>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1,

		int : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__double_getL1Distance<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__double_getL1Distance<org.apache.commons.math.linear.ArrayRealVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 2;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__double_getL1Distance<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1,

		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__double_getL1Norm<>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__double_getLInfDistance<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__double_getLInfDistance<org.apache.commons.math.linear.ArrayRealVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 2;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__double_getLInfDistance<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1,

		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__double_getLInfNorm<>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__double_getNorm<>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__double[]_getData<>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__double[]_getDataRef<>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__double[]_toArray<>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__int_getDimension<>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		int : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.AbstractRealVector_copy<>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.AbstractRealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.ArrayRealVector_add<org.apache.commons.math.linear.ArrayRealVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 2;
	PRODUCE 
		org.apache.commons.math.linear.ArrayRealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.ArrayRealVector_append<org.apache.commons.math.linear.ArrayRealVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 2;
	PRODUCE 
		org.apache.commons.math.linear.ArrayRealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.ArrayRealVector_ebeDivide<org.apache.commons.math.linear.ArrayRealVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 2;
	PRODUCE 
		org.apache.commons.math.linear.ArrayRealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.ArrayRealVector_ebeMultiply<org.apache.commons.math.linear.ArrayRealVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 2;
	PRODUCE 
		org.apache.commons.math.linear.ArrayRealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.ArrayRealVector_projection<org.apache.commons.math.linear.ArrayRealVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 2;
	PRODUCE 
		org.apache.commons.math.linear.ArrayRealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.ArrayRealVector_subtract<org.apache.commons.math.linear.ArrayRealVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 2;
	PRODUCE 
		org.apache.commons.math.linear.ArrayRealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.RealMatrix_outerProduct<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.RealMatrix_outerProduct<org.apache.commons.math.linear.ArrayRealVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 2;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.RealMatrix_outerProduct<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1,

		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.RealVector_add<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.RealVector_add<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1,

		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.RealVector_append<double>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1,

		double : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.RealVector_append<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.RealVector_append<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1,

		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.RealVector_copy<>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.RealVector_ebeDivide<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.RealVector_ebeDivide<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1,

		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.RealVector_ebeMultiply<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.RealVector_ebeMultiply<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1,

		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.RealVector_getSubVector<int.int>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1,

		int : 2;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.RealVector_mapAbsToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.RealVector_mapAcosToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.RealVector_mapAddToSelf<double>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1,

		double : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.RealVector_mapAsinToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.RealVector_mapAtanToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.RealVector_mapCbrtToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.RealVector_mapCeilToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.RealVector_mapCosToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.RealVector_mapCoshToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.RealVector_mapDivideToSelf<double>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1,

		double : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.RealVector_mapExpToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.RealVector_mapExpm1ToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.RealVector_mapFloorToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.RealVector_mapInvToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.RealVector_mapLog10ToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.RealVector_mapLog1pToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.RealVector_mapLogToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.RealVector_mapMultiplyToSelf<double>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1,

		double : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.RealVector_mapPowToSelf<double>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1,

		double : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.RealVector_mapRintToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.RealVector_mapSignumToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.RealVector_mapSinToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.RealVector_mapSinhToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.RealVector_mapSqrtToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.RealVector_mapSubtractToSelf<double>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1,

		double : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.RealVector_mapTanToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.RealVector_mapTanhToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.RealVector_mapUlpToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.RealVector_projection<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.RealVector_projection<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1,

		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.RealVector_subtract<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.RealVector_subtract<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1,

		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__org.apache.commons.math.linear.RealVector_unitVector<>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		org.apache.commons.math.linear.ArrayRealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__void_<init><double[]>>
	CONSUME 
		double[] : 1;
	PRODUCE 
		org.apache.commons.math.linear.ArrayRealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__void_<init><double[].boolean>>
	CONSUME 
		boolean : 1,

		double[] : 1;
	PRODUCE 
		org.apache.commons.math.linear.ArrayRealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__void_<init><double[].double[]>>
	CONSUME 
		double[] : 2;
	PRODUCE 
		org.apache.commons.math.linear.ArrayRealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__void_<init><double[].int.int>>
	CONSUME 
		double[] : 1,

		int : 2;
	PRODUCE 
		org.apache.commons.math.linear.ArrayRealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__void_<init><double[].org.apache.commons.math.linear.ArrayRealVector>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.ArrayRealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__void_<init><int>>
	CONSUME 
		int : 1;
	PRODUCE 
		org.apache.commons.math.linear.ArrayRealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__void_<init><int.double>>
	CONSUME 
		double : 1,

		int : 1;
	PRODUCE 
		org.apache.commons.math.linear.ArrayRealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__void_<init><java.lang.Double[]>>
	CONSUME 
		java.lang.Double[] : 1;
	PRODUCE 
		org.apache.commons.math.linear.ArrayRealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__void_<init><java.lang.Double[].int.int>>
	CONSUME 
		java.lang.Double[] : 1,

		int : 2;
	PRODUCE 
		org.apache.commons.math.linear.ArrayRealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__void_<init><org.apache.commons.math.linear.ArrayRealVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.ArrayRealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__void_<init><org.apache.commons.math.linear.ArrayRealVector.boolean>>
	CONSUME 
		boolean : 1,

		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.ArrayRealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__void_<init><org.apache.commons.math.linear.ArrayRealVector.double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.ArrayRealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__void_<init><org.apache.commons.math.linear.ArrayRealVector.org.apache.commons.math.linear.ArrayRealVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 2;
	PRODUCE 
		org.apache.commons.math.linear.ArrayRealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__void_<init><org.apache.commons.math.linear.ArrayRealVector.org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1,

		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.ArrayRealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__void_<init><org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.ArrayRealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__void_<init><org.apache.commons.math.linear.RealVector.org.apache.commons.math.linear.ArrayRealVector>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1,

		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.ArrayRealVector : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__void_set<double>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1,

		double : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__void_set<int.org.apache.commons.math.linear.ArrayRealVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 2,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__void_setEntry<int.double>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1,

		double : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__void_setSubVector<int.double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.ArrayRealVector : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__void_setSubVector<int.org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1,

		org.apache.commons.math.linear.RealVector : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.ArrayRealVector__void_unitize<>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.BiDiagonalTransformer__org.apache.commons.math.linear.RealMatrix_getB<>>
	CONSUME 
		org.apache.commons.math.linear.BiDiagonalTransformer : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BiDiagonalTransformer__org.apache.commons.math.linear.RealMatrix_getU<>>
	CONSUME 
		org.apache.commons.math.linear.BiDiagonalTransformer : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BiDiagonalTransformer__org.apache.commons.math.linear.RealMatrix_getV<>>
	CONSUME 
		org.apache.commons.math.linear.BiDiagonalTransformer : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BiDiagonalTransformer__void_<init><org.apache.commons.math.linear.RealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.BiDiagonalTransformer : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrix__double_getEntryAsDouble<int.int>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrix : 1,

		int : 2;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrix__double[]_getColumnAsDoubleArray<int>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrix : 1,

		int : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrix__double[]_getRowAsDoubleArray<int>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrix : 1,

		int : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrix__double[][]_getDataAsDoubleArray<>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrix : 1;
	PRODUCE 
		double[][] : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrix__int_getRoundingMode<>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrix : 1;
	PRODUCE 
		int : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrix__java.math.BigDecimal_getDeterminant<>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrix : 1;
	PRODUCE 
		java.math.BigDecimal : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrix__java.math.BigDecimal_getEntry<int.int>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrix : 1,

		int : 2;
	PRODUCE 
		java.math.BigDecimal : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrix__java.math.BigDecimal_getNorm<>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrix : 1;
	PRODUCE 
		java.math.BigDecimal : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrix__java.math.BigDecimal_getTrace<>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrix : 1;
	PRODUCE 
		java.math.BigDecimal : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrix__java.math.BigDecimal[]_getColumn<int>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrix : 1,

		int : 1;
	PRODUCE 
		java.math.BigDecimal[] : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrix__java.math.BigDecimal[]_getRow<int>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrix : 1,

		int : 1;
	PRODUCE 
		java.math.BigDecimal[] : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrix__java.math.BigDecimal[]_operate<java.math.BigDecimal[]>>
	CONSUME 
		java.math.BigDecimal[] : 1,

		org.apache.commons.math.linear.BigMatrix : 1;
	PRODUCE 
		java.math.BigDecimal[] : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrix__java.math.BigDecimal[]_preMultiply<java.math.BigDecimal[]>>
	CONSUME 
		java.math.BigDecimal[] : 1,

		org.apache.commons.math.linear.BigMatrix : 1;
	PRODUCE 
		java.math.BigDecimal[] : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrix__java.math.BigDecimal[]_solve<java.math.BigDecimal[]>>
	CONSUME 
		java.math.BigDecimal[] : 1,

		org.apache.commons.math.linear.BigMatrix : 1;
	PRODUCE 
		java.math.BigDecimal[] : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrix__java.math.BigDecimal[][]_getData<>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrix : 1;
	PRODUCE 
		java.math.BigDecimal[][] : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrix__org.apache.commons.math.linear.BigMatrix_add<org.apache.commons.math.linear.BigMatrix>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrix : 2;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrix__org.apache.commons.math.linear.BigMatrix_copy<>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrix__org.apache.commons.math.linear.BigMatrix_getColumnMatrix<int>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrix : 1,

		int : 1;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrix__org.apache.commons.math.linear.BigMatrix_getRowMatrix<int>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrix : 1,

		int : 1;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrix__org.apache.commons.math.linear.BigMatrix_getSubMatrix<int.int.int.int>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrix : 1,

		int : 4;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrix__org.apache.commons.math.linear.BigMatrix_getSubMatrix<int[].int[]>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrix : 1,

		int[] : 2;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrix__org.apache.commons.math.linear.BigMatrix_inverse<>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrix__org.apache.commons.math.linear.BigMatrix_multiply<org.apache.commons.math.linear.BigMatrix>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrix : 2;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrix__org.apache.commons.math.linear.BigMatrix_preMultiply<org.apache.commons.math.linear.BigMatrix>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrix : 2;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrix__org.apache.commons.math.linear.BigMatrix_scalarAdd<java.math.BigDecimal>>
	CONSUME 
		java.math.BigDecimal : 1,

		org.apache.commons.math.linear.BigMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrix__org.apache.commons.math.linear.BigMatrix_scalarMultiply<java.math.BigDecimal>>
	CONSUME 
		java.math.BigDecimal : 1,

		org.apache.commons.math.linear.BigMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrix__org.apache.commons.math.linear.BigMatrix_solve<org.apache.commons.math.linear.BigMatrix>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrix : 2;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrix__org.apache.commons.math.linear.BigMatrix_subtract<org.apache.commons.math.linear.BigMatrix>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrix : 2;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrix__org.apache.commons.math.linear.BigMatrix_transpose<>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__boolean_equals<java.lang.Object>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrixImpl : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__boolean_isSingular<>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrixImpl : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__boolean_isSquare<>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrixImpl : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__double_getEntryAsDouble<int.int>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrixImpl : 1,

		int : 2;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__double[]_getColumnAsDoubleArray<int>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrixImpl : 1,

		int : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__double[]_getRowAsDoubleArray<int>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrixImpl : 1,

		int : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__double[][]_getDataAsDoubleArray<>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrixImpl : 1;
	PRODUCE 
		double[][] : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__int_getColumnDimension<>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrixImpl : 1;
	PRODUCE 
		int : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__int_getRoundingMode<>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrixImpl : 1;
	PRODUCE 
		int : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__int_getRowDimension<>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrixImpl : 1;
	PRODUCE 
		int : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__int_getScale<>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrixImpl : 1;
	PRODUCE 
		int : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__java.math.BigDecimal_getDeterminant<>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrixImpl : 1;
	PRODUCE 
		java.math.BigDecimal : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__java.math.BigDecimal_getEntry<int.int>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrixImpl : 1,

		int : 2;
	PRODUCE 
		java.math.BigDecimal : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__java.math.BigDecimal_getNorm<>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrixImpl : 1;
	PRODUCE 
		java.math.BigDecimal : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__java.math.BigDecimal_getTrace<>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrixImpl : 1;
	PRODUCE 
		java.math.BigDecimal : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__java.math.BigDecimal[]_getColumn<int>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrixImpl : 1,

		int : 1;
	PRODUCE 
		java.math.BigDecimal[] : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__java.math.BigDecimal[]_getRow<int>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrixImpl : 1,

		int : 1;
	PRODUCE 
		java.math.BigDecimal[] : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__java.math.BigDecimal[]_operate<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.BigMatrixImpl : 1;
	PRODUCE 
		java.math.BigDecimal[] : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__java.math.BigDecimal[]_operate<java.math.BigDecimal[]>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrixImpl : 1,

		java.math.BigDecimal[] : 1;
	PRODUCE 
		java.math.BigDecimal[] : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__java.math.BigDecimal[]_preMultiply<java.math.BigDecimal[]>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrixImpl : 1,

		java.math.BigDecimal[] : 1;
	PRODUCE 
		java.math.BigDecimal[] : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__java.math.BigDecimal[]_solve<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.BigMatrixImpl : 1;
	PRODUCE 
		java.math.BigDecimal[] : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__java.math.BigDecimal[]_solve<java.math.BigDecimal[]>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrixImpl : 1,

		java.math.BigDecimal[] : 1;
	PRODUCE 
		java.math.BigDecimal[] : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__java.math.BigDecimal[][]_getData<>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrixImpl : 1;
	PRODUCE 
		java.math.BigDecimal[][] : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__java.math.BigDecimal[][]_getDataRef<>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrixImpl : 1;
	PRODUCE 
		java.math.BigDecimal[][] : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__org.apache.commons.math.linear.BigMatrix_add<org.apache.commons.math.linear.BigMatrix>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrixImpl : 1,

		org.apache.commons.math.linear.BigMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__org.apache.commons.math.linear.BigMatrix_copy<>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrixImpl : 1;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__org.apache.commons.math.linear.BigMatrix_getColumnMatrix<int>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrixImpl : 1,

		int : 1;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__org.apache.commons.math.linear.BigMatrix_getRowMatrix<int>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrixImpl : 1,

		int : 1;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__org.apache.commons.math.linear.BigMatrix_getSubMatrix<int.int.int.int>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrixImpl : 1,

		int : 4;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__org.apache.commons.math.linear.BigMatrix_getSubMatrix<int[].int[]>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrixImpl : 1,

		int[] : 2;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__org.apache.commons.math.linear.BigMatrix_inverse<>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrixImpl : 1;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__org.apache.commons.math.linear.BigMatrix_multiply<org.apache.commons.math.linear.BigMatrix>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrixImpl : 1,

		org.apache.commons.math.linear.BigMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__org.apache.commons.math.linear.BigMatrix_preMultiply<org.apache.commons.math.linear.BigMatrix>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrixImpl : 1,

		org.apache.commons.math.linear.BigMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__org.apache.commons.math.linear.BigMatrix_scalarAdd<java.math.BigDecimal>>
	CONSUME 
		java.math.BigDecimal : 1,

		org.apache.commons.math.linear.BigMatrixImpl : 1;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__org.apache.commons.math.linear.BigMatrix_scalarMultiply<java.math.BigDecimal>>
	CONSUME 
		java.math.BigDecimal : 1,

		org.apache.commons.math.linear.BigMatrixImpl : 1;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__org.apache.commons.math.linear.BigMatrix_solve<org.apache.commons.math.linear.BigMatrix>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrixImpl : 1,

		org.apache.commons.math.linear.BigMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__org.apache.commons.math.linear.BigMatrix_subtract<org.apache.commons.math.linear.BigMatrix>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrixImpl : 1,

		org.apache.commons.math.linear.BigMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__org.apache.commons.math.linear.BigMatrix_transpose<>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrixImpl : 1;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__org.apache.commons.math.linear.BigMatrixImpl_add<org.apache.commons.math.linear.BigMatrixImpl>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrixImpl : 2;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrixImpl : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__org.apache.commons.math.linear.BigMatrixImpl_multiply<org.apache.commons.math.linear.BigMatrixImpl>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrixImpl : 2;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrixImpl : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__org.apache.commons.math.linear.BigMatrixImpl_subtract<org.apache.commons.math.linear.BigMatrixImpl>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrixImpl : 2;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrixImpl : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrixImpl : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__void_<init><double[][]>>
	CONSUME 
		double[][] : 1;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrixImpl : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__void_<init><int.int>>
	CONSUME 
		int : 2;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrixImpl : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__void_<init><java.lang.String[][]>>
	CONSUME 
		java.lang.String[][] : 1;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrixImpl : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__void_<init><java.math.BigDecimal[]>>
	CONSUME 
		java.math.BigDecimal[] : 1;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrixImpl : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__void_<init><java.math.BigDecimal[][]>>
	CONSUME 
		java.math.BigDecimal[][] : 1;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrixImpl : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__void_<init><java.math.BigDecimal[][].boolean>>
	CONSUME 
		boolean : 1,

		java.math.BigDecimal[][] : 1;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrixImpl : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__void_luDecompose<>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrixImpl : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__void_setRoundingMode<int>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrixImpl : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__void_setScale<int>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrixImpl : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.BigMatrixImpl__void_setSubMatrix<java.math.BigDecimal[][].int.int>>
	CONSUME 
		org.apache.commons.math.linear.BigMatrixImpl : 1,

		java.math.BigDecimal[][] : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.BlockFieldMatrix__int_getColumnDimension<>>
	CONSUME 
		org.apache.commons.math.linear.BlockFieldMatrix : 1;
	PRODUCE 
		int : 1;
TRANSITION <org.apache.commons.math.linear.BlockFieldMatrix__int_getRowDimension<>>
	CONSUME 
		org.apache.commons.math.linear.BlockFieldMatrix : 1;
	PRODUCE 
		int : 1;
TRANSITION <org.apache.commons.math.linear.BlockFieldMatrix__org.apache.commons.math.FieldElement_getEntry<int.int>>
	CONSUME 
		org.apache.commons.math.linear.BlockFieldMatrix : 1,

		int : 2;
	PRODUCE 
		org.apache.commons.math.FieldElement : 1;
TRANSITION <org.apache.commons.math.linear.BlockFieldMatrix__org.apache.commons.math.FieldElement_walkInOptimizedOrder<org.apache.commons.math.linear.FieldMatrixChangingVisitor>>
	CONSUME 
		org.apache.commons.math.linear.BlockFieldMatrix : 1,

		org.apache.commons.math.linear.FieldMatrixChangingVisitor : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement : 1;
TRANSITION <org.apache.commons.math.linear.BlockFieldMatrix__org.apache.commons.math.FieldElement_walkInOptimizedOrder<org.apache.commons.math.linear.FieldMatrixPreservingVisitor>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrixPreservingVisitor : 1,

		org.apache.commons.math.linear.BlockFieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement : 1;
TRANSITION <org.apache.commons.math.linear.BlockFieldMatrix__org.apache.commons.math.FieldElement_walkInRowOrder<org.apache.commons.math.linear.FieldMatrixChangingVisitor>>
	CONSUME 
		org.apache.commons.math.linear.BlockFieldMatrix : 1,

		org.apache.commons.math.linear.FieldMatrixChangingVisitor : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement : 1;
TRANSITION <org.apache.commons.math.linear.BlockFieldMatrix__org.apache.commons.math.FieldElement_walkInRowOrder<org.apache.commons.math.linear.FieldMatrixPreservingVisitor>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrixPreservingVisitor : 1,

		org.apache.commons.math.linear.BlockFieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement : 1;
TRANSITION <org.apache.commons.math.linear.BlockFieldMatrix__org.apache.commons.math.FieldElement[]_getColumn<int>>
	CONSUME 
		org.apache.commons.math.linear.BlockFieldMatrix : 1,

		int : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement[] : 1;
TRANSITION <org.apache.commons.math.linear.BlockFieldMatrix__org.apache.commons.math.FieldElement[]_getRow<int>>
	CONSUME 
		org.apache.commons.math.linear.BlockFieldMatrix : 1,

		int : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement[] : 1;
TRANSITION <org.apache.commons.math.linear.BlockFieldMatrix__org.apache.commons.math.FieldElement[]_operate<org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.linear.BlockFieldMatrix : 1,

		org.apache.commons.math.FieldElement[] : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement[] : 1;
TRANSITION <org.apache.commons.math.linear.BlockFieldMatrix__org.apache.commons.math.FieldElement[]_preMultiply<org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.linear.BlockFieldMatrix : 1,

		org.apache.commons.math.FieldElement[] : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement[] : 1;
TRANSITION <org.apache.commons.math.linear.BlockFieldMatrix__org.apache.commons.math.FieldElement[][]_createBlocksLayout<org.apache.commons.math.Field.int.int>>
	CONSUME 
		org.apache.commons.math.Field : 1,

		int : 2;
	PRODUCE 
		org.apache.commons.math.FieldElement[][] : 1;
TRANSITION <org.apache.commons.math.linear.BlockFieldMatrix__org.apache.commons.math.FieldElement[][]_getData<>>
	CONSUME 
		org.apache.commons.math.linear.BlockFieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement[][] : 1;
TRANSITION <org.apache.commons.math.linear.BlockFieldMatrix__org.apache.commons.math.FieldElement[][]_toBlocksLayout<org.apache.commons.math.FieldElement[][]>>
	CONSUME 
		org.apache.commons.math.FieldElement[][] : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement[][] : 1;
TRANSITION <org.apache.commons.math.linear.BlockFieldMatrix__org.apache.commons.math.linear.BlockFieldMatrix_add<org.apache.commons.math.linear.BlockFieldMatrix>>
	CONSUME 
		org.apache.commons.math.linear.BlockFieldMatrix : 2;
	PRODUCE 
		org.apache.commons.math.linear.BlockFieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BlockFieldMatrix__org.apache.commons.math.linear.BlockFieldMatrix_multiply<org.apache.commons.math.linear.BlockFieldMatrix>>
	CONSUME 
		org.apache.commons.math.linear.BlockFieldMatrix : 2;
	PRODUCE 
		org.apache.commons.math.linear.BlockFieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BlockFieldMatrix__org.apache.commons.math.linear.BlockFieldMatrix_subtract<org.apache.commons.math.linear.BlockFieldMatrix>>
	CONSUME 
		org.apache.commons.math.linear.BlockFieldMatrix : 2;
	PRODUCE 
		org.apache.commons.math.linear.BlockFieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BlockFieldMatrix__org.apache.commons.math.linear.FieldMatrix_add<org.apache.commons.math.linear.FieldMatrix>>
	CONSUME 
		org.apache.commons.math.linear.BlockFieldMatrix : 1,

		org.apache.commons.math.linear.FieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BlockFieldMatrix__org.apache.commons.math.linear.FieldMatrix_copy<>>
	CONSUME 
		org.apache.commons.math.linear.BlockFieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BlockFieldMatrix__org.apache.commons.math.linear.FieldMatrix_createMatrix<int.int>>
	CONSUME 
		org.apache.commons.math.linear.BlockFieldMatrix : 1,

		int : 2;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BlockFieldMatrix__org.apache.commons.math.linear.FieldMatrix_getColumnMatrix<int>>
	CONSUME 
		org.apache.commons.math.linear.BlockFieldMatrix : 1,

		int : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BlockFieldMatrix__org.apache.commons.math.linear.FieldMatrix_getRowMatrix<int>>
	CONSUME 
		org.apache.commons.math.linear.BlockFieldMatrix : 1,

		int : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BlockFieldMatrix__org.apache.commons.math.linear.FieldMatrix_getSubMatrix<int.int.int.int>>
	CONSUME 
		org.apache.commons.math.linear.BlockFieldMatrix : 1,

		int : 4;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BlockFieldMatrix__org.apache.commons.math.linear.FieldMatrix_multiply<org.apache.commons.math.linear.FieldMatrix>>
	CONSUME 
		org.apache.commons.math.linear.BlockFieldMatrix : 1,

		org.apache.commons.math.linear.FieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BlockFieldMatrix__org.apache.commons.math.linear.FieldMatrix_scalarAdd<org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.linear.BlockFieldMatrix : 1,

		org.apache.commons.math.FieldElement : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BlockFieldMatrix__org.apache.commons.math.linear.FieldMatrix_scalarMultiply<org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.linear.BlockFieldMatrix : 1,

		org.apache.commons.math.FieldElement : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BlockFieldMatrix__org.apache.commons.math.linear.FieldMatrix_subtract<org.apache.commons.math.linear.FieldMatrix>>
	CONSUME 
		org.apache.commons.math.linear.BlockFieldMatrix : 1,

		org.apache.commons.math.linear.FieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BlockFieldMatrix__org.apache.commons.math.linear.FieldMatrix_transpose<>>
	CONSUME 
		org.apache.commons.math.linear.BlockFieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BlockFieldMatrix__org.apache.commons.math.linear.FieldVector_getColumnVector<int>>
	CONSUME 
		org.apache.commons.math.linear.BlockFieldMatrix : 1,

		int : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.BlockFieldMatrix__org.apache.commons.math.linear.FieldVector_getRowVector<int>>
	CONSUME 
		org.apache.commons.math.linear.BlockFieldMatrix : 1,

		int : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.BlockFieldMatrix__void_<init><int.int.org.apache.commons.math.FieldElement[][].boolean>>
	CONSUME 
		boolean : 1,

		org.apache.commons.math.FieldElement[][] : 1,

		int : 2;
	PRODUCE 
		org.apache.commons.math.linear.BlockFieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BlockFieldMatrix__void_<init><org.apache.commons.math.Field.int.int>>
	CONSUME 
		org.apache.commons.math.Field : 1,

		int : 2;
	PRODUCE 
		org.apache.commons.math.linear.BlockFieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BlockFieldMatrix__void_<init><org.apache.commons.math.FieldElement[][]>>
	CONSUME 
		org.apache.commons.math.FieldElement[][] : 1;
	PRODUCE 
		org.apache.commons.math.linear.BlockFieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BlockFieldMatrix__void_addToEntry<int.int.org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.linear.BlockFieldMatrix : 1,

		org.apache.commons.math.FieldElement : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.BlockFieldMatrix__void_multiplyEntry<int.int.org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.linear.BlockFieldMatrix : 1,

		org.apache.commons.math.FieldElement : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.BlockFieldMatrix__void_setColumn<int.org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.linear.BlockFieldMatrix : 1,

		org.apache.commons.math.FieldElement[] : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.BlockFieldMatrix__void_setColumnMatrix<int.org.apache.commons.math.linear.FieldMatrix>>
	CONSUME 
		org.apache.commons.math.linear.BlockFieldMatrix : 1,

		org.apache.commons.math.linear.FieldMatrix : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.BlockFieldMatrix__void_setColumnVector<int.org.apache.commons.math.linear.FieldVector>>
	CONSUME 
		org.apache.commons.math.linear.BlockFieldMatrix : 1,

		org.apache.commons.math.linear.FieldVector : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.BlockFieldMatrix__void_setEntry<int.int.org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.linear.BlockFieldMatrix : 1,

		org.apache.commons.math.FieldElement : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.BlockFieldMatrix__void_setRow<int.org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.linear.BlockFieldMatrix : 1,

		org.apache.commons.math.FieldElement[] : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.BlockFieldMatrix__void_setRowMatrix<int.org.apache.commons.math.linear.BlockFieldMatrix>>
	CONSUME 
		org.apache.commons.math.linear.BlockFieldMatrix : 2,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.BlockFieldMatrix__void_setRowMatrix<int.org.apache.commons.math.linear.FieldMatrix>>
	CONSUME 
		org.apache.commons.math.linear.BlockFieldMatrix : 1,

		org.apache.commons.math.linear.FieldMatrix : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.BlockFieldMatrix__void_setRowVector<int.org.apache.commons.math.linear.FieldVector>>
	CONSUME 
		org.apache.commons.math.linear.BlockFieldMatrix : 1,

		org.apache.commons.math.linear.FieldVector : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.BlockFieldMatrix__void_setSubMatrix<org.apache.commons.math.FieldElement[][].int.int>>
	CONSUME 
		org.apache.commons.math.linear.BlockFieldMatrix : 1,

		org.apache.commons.math.FieldElement[][] : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__double_getEntry<int.int>>
	CONSUME 
		org.apache.commons.math.linear.BlockRealMatrix : 1,

		int : 2;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__double_getFrobeniusNorm<>>
	CONSUME 
		org.apache.commons.math.linear.BlockRealMatrix : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__double_getNorm<>>
	CONSUME 
		org.apache.commons.math.linear.BlockRealMatrix : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__double_walkInOptimizedOrder<org.apache.commons.math.linear.RealMatrixChangingVisitor>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrixChangingVisitor : 1,

		org.apache.commons.math.linear.BlockRealMatrix : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__double_walkInOptimizedOrder<org.apache.commons.math.linear.RealMatrixPreservingVisitor>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrixPreservingVisitor : 1,

		org.apache.commons.math.linear.BlockRealMatrix : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__double_walkInRowOrder<org.apache.commons.math.linear.RealMatrixChangingVisitor>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrixChangingVisitor : 1,

		org.apache.commons.math.linear.BlockRealMatrix : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__double_walkInRowOrder<org.apache.commons.math.linear.RealMatrixPreservingVisitor>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrixPreservingVisitor : 1,

		org.apache.commons.math.linear.BlockRealMatrix : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__double[]_getColumn<int>>
	CONSUME 
		org.apache.commons.math.linear.BlockRealMatrix : 1,

		int : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__double[]_getRow<int>>
	CONSUME 
		org.apache.commons.math.linear.BlockRealMatrix : 1,

		int : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__double[]_operate<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.BlockRealMatrix : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__double[]_preMultiply<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.BlockRealMatrix : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__double[][]_createBlocksLayout<int.int>>
	CONSUME 
		int : 2;
	PRODUCE 
		double[][] : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__double[][]_getData<>>
	CONSUME 
		org.apache.commons.math.linear.BlockRealMatrix : 1;
	PRODUCE 
		double[][] : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__double[][]_toBlocksLayout<double[][]>>
	CONSUME 
		double[][] : 1;
	PRODUCE 
		double[][] : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__int_getColumnDimension<>>
	CONSUME 
		org.apache.commons.math.linear.BlockRealMatrix : 1;
	PRODUCE 
		int : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__int_getRowDimension<>>
	CONSUME 
		org.apache.commons.math.linear.BlockRealMatrix : 1;
	PRODUCE 
		int : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__org.apache.commons.math.linear.BlockRealMatrix_add<org.apache.commons.math.linear.BlockRealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.BlockRealMatrix : 2;
	PRODUCE 
		org.apache.commons.math.linear.BlockRealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__org.apache.commons.math.linear.BlockRealMatrix_add<org.apache.commons.math.linear.RealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1,

		org.apache.commons.math.linear.BlockRealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.BlockRealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__org.apache.commons.math.linear.BlockRealMatrix_copy<>>
	CONSUME 
		org.apache.commons.math.linear.BlockRealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.BlockRealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__org.apache.commons.math.linear.BlockRealMatrix_createMatrix<int.int>>
	CONSUME 
		org.apache.commons.math.linear.BlockRealMatrix : 1,

		int : 2;
	PRODUCE 
		org.apache.commons.math.linear.BlockRealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__org.apache.commons.math.linear.BlockRealMatrix_getColumnMatrix<int>>
	CONSUME 
		org.apache.commons.math.linear.BlockRealMatrix : 1,

		int : 1;
	PRODUCE 
		org.apache.commons.math.linear.BlockRealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__org.apache.commons.math.linear.BlockRealMatrix_getRowMatrix<int>>
	CONSUME 
		org.apache.commons.math.linear.BlockRealMatrix : 1,

		int : 1;
	PRODUCE 
		org.apache.commons.math.linear.BlockRealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__org.apache.commons.math.linear.BlockRealMatrix_getSubMatrix<int.int.int.int>>
	CONSUME 
		org.apache.commons.math.linear.BlockRealMatrix : 1,

		int : 4;
	PRODUCE 
		org.apache.commons.math.linear.BlockRealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__org.apache.commons.math.linear.BlockRealMatrix_multiply<org.apache.commons.math.linear.BlockRealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.BlockRealMatrix : 2;
	PRODUCE 
		org.apache.commons.math.linear.BlockRealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__org.apache.commons.math.linear.BlockRealMatrix_multiply<org.apache.commons.math.linear.RealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1,

		org.apache.commons.math.linear.BlockRealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.BlockRealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__org.apache.commons.math.linear.BlockRealMatrix_scalarAdd<double>>
	CONSUME 
		double : 1,

		org.apache.commons.math.linear.BlockRealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.BlockRealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__org.apache.commons.math.linear.BlockRealMatrix_subtract<org.apache.commons.math.linear.BlockRealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.BlockRealMatrix : 2;
	PRODUCE 
		org.apache.commons.math.linear.BlockRealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__org.apache.commons.math.linear.BlockRealMatrix_subtract<org.apache.commons.math.linear.RealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1,

		org.apache.commons.math.linear.BlockRealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.BlockRealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__org.apache.commons.math.linear.BlockRealMatrix_transpose<>>
	CONSUME 
		org.apache.commons.math.linear.BlockRealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.BlockRealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__org.apache.commons.math.linear.RealMatrix_add<org.apache.commons.math.linear.RealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1,

		org.apache.commons.math.linear.BlockRealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__org.apache.commons.math.linear.RealMatrix_copy<>>
	CONSUME 
		org.apache.commons.math.linear.BlockRealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__org.apache.commons.math.linear.RealMatrix_createMatrix<int.int>>
	CONSUME 
		org.apache.commons.math.linear.BlockRealMatrix : 1,

		int : 2;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__org.apache.commons.math.linear.RealMatrix_getColumnMatrix<int>>
	CONSUME 
		org.apache.commons.math.linear.BlockRealMatrix : 1,

		int : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__org.apache.commons.math.linear.RealMatrix_getRowMatrix<int>>
	CONSUME 
		org.apache.commons.math.linear.BlockRealMatrix : 1,

		int : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__org.apache.commons.math.linear.RealMatrix_getSubMatrix<int.int.int.int>>
	CONSUME 
		org.apache.commons.math.linear.BlockRealMatrix : 1,

		int : 4;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__org.apache.commons.math.linear.RealMatrix_multiply<org.apache.commons.math.linear.RealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1,

		org.apache.commons.math.linear.BlockRealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__org.apache.commons.math.linear.RealMatrix_scalarAdd<double>>
	CONSUME 
		double : 1,

		org.apache.commons.math.linear.BlockRealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__org.apache.commons.math.linear.RealMatrix_scalarMultiply<double>>
	CONSUME 
		double : 1,

		org.apache.commons.math.linear.BlockRealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__org.apache.commons.math.linear.RealMatrix_subtract<org.apache.commons.math.linear.RealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1,

		org.apache.commons.math.linear.BlockRealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__org.apache.commons.math.linear.RealMatrix_transpose<>>
	CONSUME 
		org.apache.commons.math.linear.BlockRealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__org.apache.commons.math.linear.RealVector_getColumnVector<int>>
	CONSUME 
		org.apache.commons.math.linear.BlockRealMatrix : 1,

		int : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__org.apache.commons.math.linear.RealVector_getRowVector<int>>
	CONSUME 
		org.apache.commons.math.linear.BlockRealMatrix : 1,

		int : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__void_<init><double[][]>>
	CONSUME 
		double[][] : 1;
	PRODUCE 
		org.apache.commons.math.linear.BlockRealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__void_<init><int.int>>
	CONSUME 
		int : 2;
	PRODUCE 
		org.apache.commons.math.linear.BlockRealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__void_<init><int.int.double[][].boolean>>
	CONSUME 
		boolean : 1,

		double[][] : 1,

		int : 2;
	PRODUCE 
		org.apache.commons.math.linear.BlockRealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__void_addToEntry<int.int.double>>
	CONSUME 
		double : 1,

		org.apache.commons.math.linear.BlockRealMatrix : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__void_multiplyEntry<int.int.double>>
	CONSUME 
		double : 1,

		org.apache.commons.math.linear.BlockRealMatrix : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__void_setColumn<int.double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.BlockRealMatrix : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__void_setColumnMatrix<int.org.apache.commons.math.linear.RealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1,

		org.apache.commons.math.linear.BlockRealMatrix : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__void_setColumnVector<int.org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1,

		org.apache.commons.math.linear.BlockRealMatrix : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__void_setEntry<int.int.double>>
	CONSUME 
		double : 1,

		org.apache.commons.math.linear.BlockRealMatrix : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__void_setRow<int.double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.BlockRealMatrix : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__void_setRowMatrix<int.org.apache.commons.math.linear.BlockRealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.BlockRealMatrix : 2,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__void_setRowMatrix<int.org.apache.commons.math.linear.RealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1,

		org.apache.commons.math.linear.BlockRealMatrix : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__void_setRowVector<int.org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1,

		org.apache.commons.math.linear.BlockRealMatrix : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.BlockRealMatrix__void_setSubMatrix<double[][].int.int>>
	CONSUME 
		double[][] : 1,

		org.apache.commons.math.linear.BlockRealMatrix : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.CholeskyDecomposition__double_getDeterminant<>>
	CONSUME 
		org.apache.commons.math.linear.CholeskyDecomposition : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.CholeskyDecomposition__org.apache.commons.math.linear.DecompositionSolver_getSolver<>>
	CONSUME 
		org.apache.commons.math.linear.CholeskyDecomposition : 1;
	PRODUCE 
		org.apache.commons.math.linear.DecompositionSolver : 1;
TRANSITION <org.apache.commons.math.linear.CholeskyDecomposition__org.apache.commons.math.linear.RealMatrix_getL<>>
	CONSUME 
		org.apache.commons.math.linear.CholeskyDecomposition : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.CholeskyDecomposition__org.apache.commons.math.linear.RealMatrix_getLT<>>
	CONSUME 
		org.apache.commons.math.linear.CholeskyDecomposition : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.CholeskyDecompositionImpl$Solver__boolean_isNonSingular<>>
	CONSUME 
		org.apache.commons.math.linear.CholeskyDecompositionImpl$Solver : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <org.apache.commons.math.linear.CholeskyDecompositionImpl$Solver__double[]_solve<double[]>>
	CONSUME 
		org.apache.commons.math.linear.CholeskyDecompositionImpl$Solver : 1,

		double[] : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.linear.CholeskyDecompositionImpl$Solver__org.apache.commons.math.linear.ArrayRealVector_solve<org.apache.commons.math.linear.ArrayRealVector>>
	CONSUME 
		org.apache.commons.math.linear.CholeskyDecompositionImpl$Solver : 1,

		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.ArrayRealVector : 1;
TRANSITION <org.apache.commons.math.linear.CholeskyDecompositionImpl$Solver__org.apache.commons.math.linear.RealMatrix_getInverse<>>
	CONSUME 
		org.apache.commons.math.linear.CholeskyDecompositionImpl$Solver : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.CholeskyDecompositionImpl$Solver__org.apache.commons.math.linear.RealMatrix_solve<org.apache.commons.math.linear.RealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.CholeskyDecompositionImpl$Solver : 1,

		org.apache.commons.math.linear.RealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.CholeskyDecompositionImpl$Solver__org.apache.commons.math.linear.RealVector_solve<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.CholeskyDecompositionImpl$Solver : 1,

		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.CholeskyDecompositionImpl__double_getDeterminant<>>
	CONSUME 
		org.apache.commons.math.linear.CholeskyDecompositionImpl : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.CholeskyDecompositionImpl__org.apache.commons.math.linear.DecompositionSolver_getSolver<>>
	CONSUME 
		org.apache.commons.math.linear.CholeskyDecompositionImpl : 1;
	PRODUCE 
		org.apache.commons.math.linear.DecompositionSolver : 1;
TRANSITION <org.apache.commons.math.linear.CholeskyDecompositionImpl__org.apache.commons.math.linear.RealMatrix_getL<>>
	CONSUME 
		org.apache.commons.math.linear.CholeskyDecompositionImpl : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.CholeskyDecompositionImpl__org.apache.commons.math.linear.RealMatrix_getLT<>>
	CONSUME 
		org.apache.commons.math.linear.CholeskyDecompositionImpl : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.CholeskyDecompositionImpl__void_<init><org.apache.commons.math.linear.RealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.CholeskyDecompositionImpl : 1;
TRANSITION <org.apache.commons.math.linear.CholeskyDecompositionImpl__void_<init><org.apache.commons.math.linear.RealMatrix.double.double>>
	CONSUME 
		double : 2,

		org.apache.commons.math.linear.RealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.CholeskyDecompositionImpl : 1;
TRANSITION <org.apache.commons.math.linear.DecompositionSolver__boolean_isNonSingular<>>
	CONSUME 
		org.apache.commons.math.linear.DecompositionSolver : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <org.apache.commons.math.linear.DecompositionSolver__double[]_solve<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.DecompositionSolver : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.linear.DecompositionSolver__org.apache.commons.math.linear.RealMatrix_getInverse<>>
	CONSUME 
		org.apache.commons.math.linear.DecompositionSolver : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.DecompositionSolver__org.apache.commons.math.linear.RealMatrix_solve<org.apache.commons.math.linear.RealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1,

		org.apache.commons.math.linear.DecompositionSolver : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.DecompositionSolver__org.apache.commons.math.linear.RealVector_solve<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1,

		org.apache.commons.math.linear.DecompositionSolver : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.DefaultFieldMatrixChangingVisitor__org.apache.commons.math.FieldElement_end<>>
	CONSUME 
		org.apache.commons.math.linear.DefaultFieldMatrixChangingVisitor : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement : 1;
TRANSITION <org.apache.commons.math.linear.DefaultFieldMatrixChangingVisitor__org.apache.commons.math.FieldElement_visit<int.int.org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.linear.DefaultFieldMatrixChangingVisitor : 1,

		org.apache.commons.math.FieldElement : 1,

		int : 2;
	PRODUCE 
		org.apache.commons.math.FieldElement : 1;
TRANSITION <org.apache.commons.math.linear.DefaultFieldMatrixChangingVisitor__void_<init><org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.FieldElement : 1;
	PRODUCE 
		org.apache.commons.math.linear.DefaultFieldMatrixChangingVisitor : 1;
TRANSITION <org.apache.commons.math.linear.DefaultFieldMatrixPreservingVisitor__org.apache.commons.math.FieldElement_end<>>
	CONSUME 
		org.apache.commons.math.linear.DefaultFieldMatrixPreservingVisitor : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement : 1;
TRANSITION <org.apache.commons.math.linear.DefaultFieldMatrixPreservingVisitor__void_<init><org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.FieldElement : 1;
	PRODUCE 
		org.apache.commons.math.linear.DefaultFieldMatrixPreservingVisitor : 1;
TRANSITION <org.apache.commons.math.linear.DefaultFieldMatrixPreservingVisitor__void_visit<int.int.org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.linear.DefaultFieldMatrixPreservingVisitor : 1,

		org.apache.commons.math.FieldElement : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.DefaultRealMatrixChangingVisitor__double_end<>>
	CONSUME 
		org.apache.commons.math.linear.DefaultRealMatrixChangingVisitor : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.DefaultRealMatrixChangingVisitor__double_visit<int.int.double>>
	CONSUME 
		double : 1,

		org.apache.commons.math.linear.DefaultRealMatrixChangingVisitor : 1,

		int : 2;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.DefaultRealMatrixChangingVisitor__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		org.apache.commons.math.linear.DefaultRealMatrixChangingVisitor : 1;
TRANSITION <org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor__double_end<>>
	CONSUME 
		org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor : 1;
TRANSITION <org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor__void_visit<int.int.double>>
	CONSUME 
		org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor : 1,

		double : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.EigenDecomposition__double_getDeterminant<>>
	CONSUME 
		org.apache.commons.math.linear.EigenDecomposition : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.EigenDecomposition__double_getImagEigenvalue<int>>
	CONSUME 
		org.apache.commons.math.linear.EigenDecomposition : 1,

		int : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.EigenDecomposition__double_getRealEigenvalue<int>>
	CONSUME 
		org.apache.commons.math.linear.EigenDecomposition : 1,

		int : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.EigenDecomposition__double[]_getImagEigenvalues<>>
	CONSUME 
		org.apache.commons.math.linear.EigenDecomposition : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.linear.EigenDecomposition__double[]_getRealEigenvalues<>>
	CONSUME 
		org.apache.commons.math.linear.EigenDecomposition : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.linear.EigenDecomposition__org.apache.commons.math.linear.DecompositionSolver_getSolver<>>
	CONSUME 
		org.apache.commons.math.linear.EigenDecomposition : 1;
	PRODUCE 
		org.apache.commons.math.linear.DecompositionSolver : 1;
TRANSITION <org.apache.commons.math.linear.EigenDecomposition__org.apache.commons.math.linear.RealMatrix_getD<>>
	CONSUME 
		org.apache.commons.math.linear.EigenDecomposition : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.EigenDecomposition__org.apache.commons.math.linear.RealMatrix_getV<>>
	CONSUME 
		org.apache.commons.math.linear.EigenDecomposition : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.EigenDecomposition__org.apache.commons.math.linear.RealMatrix_getVT<>>
	CONSUME 
		org.apache.commons.math.linear.EigenDecomposition : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.EigenDecomposition__org.apache.commons.math.linear.RealVector_getEigenvector<int>>
	CONSUME 
		org.apache.commons.math.linear.EigenDecomposition : 1,

		int : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.EigenDecompositionImpl$Solver__boolean_isNonSingular<>>
	CONSUME 
		org.apache.commons.math.linear.EigenDecompositionImpl$Solver : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <org.apache.commons.math.linear.EigenDecompositionImpl$Solver__double[]_solve<double[]>>
	CONSUME 
		org.apache.commons.math.linear.EigenDecompositionImpl$Solver : 1,

		double[] : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.linear.EigenDecompositionImpl$Solver__org.apache.commons.math.linear.RealMatrix_getInverse<>>
	CONSUME 
		org.apache.commons.math.linear.EigenDecompositionImpl$Solver : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.EigenDecompositionImpl$Solver__org.apache.commons.math.linear.RealMatrix_solve<org.apache.commons.math.linear.RealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.EigenDecompositionImpl$Solver : 1,

		org.apache.commons.math.linear.RealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.EigenDecompositionImpl$Solver__org.apache.commons.math.linear.RealVector_solve<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.EigenDecompositionImpl$Solver : 1,

		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.EigenDecompositionImpl__double_getDeterminant<>>
	CONSUME 
		org.apache.commons.math.linear.EigenDecompositionImpl : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.EigenDecompositionImpl__double_getImagEigenvalue<int>>
	CONSUME 
		org.apache.commons.math.linear.EigenDecompositionImpl : 1,

		int : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.EigenDecompositionImpl__double_getRealEigenvalue<int>>
	CONSUME 
		org.apache.commons.math.linear.EigenDecompositionImpl : 1,

		int : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.EigenDecompositionImpl__double[]_getImagEigenvalues<>>
	CONSUME 
		org.apache.commons.math.linear.EigenDecompositionImpl : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.linear.EigenDecompositionImpl__double[]_getRealEigenvalues<>>
	CONSUME 
		org.apache.commons.math.linear.EigenDecompositionImpl : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.linear.EigenDecompositionImpl__org.apache.commons.math.linear.DecompositionSolver_getSolver<>>
	CONSUME 
		org.apache.commons.math.linear.EigenDecompositionImpl : 1;
	PRODUCE 
		org.apache.commons.math.linear.DecompositionSolver : 1;
TRANSITION <org.apache.commons.math.linear.EigenDecompositionImpl__org.apache.commons.math.linear.RealMatrix_getD<>>
	CONSUME 
		org.apache.commons.math.linear.EigenDecompositionImpl : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.EigenDecompositionImpl__org.apache.commons.math.linear.RealMatrix_getV<>>
	CONSUME 
		org.apache.commons.math.linear.EigenDecompositionImpl : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.EigenDecompositionImpl__org.apache.commons.math.linear.RealMatrix_getVT<>>
	CONSUME 
		org.apache.commons.math.linear.EigenDecompositionImpl : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.EigenDecompositionImpl__org.apache.commons.math.linear.RealVector_getEigenvector<int>>
	CONSUME 
		org.apache.commons.math.linear.EigenDecompositionImpl : 1,

		int : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.EigenDecompositionImpl__void_<init><double[].double[].double>>
	CONSUME 
		double[] : 2,

		double : 1;
	PRODUCE 
		org.apache.commons.math.linear.EigenDecompositionImpl : 1;
TRANSITION <org.apache.commons.math.linear.EigenDecompositionImpl__void_<init><org.apache.commons.math.linear.RealMatrix.double>>
	CONSUME 
		double : 1,

		org.apache.commons.math.linear.RealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.EigenDecompositionImpl : 1;
TRANSITION <org.apache.commons.math.linear.FieldDecompositionSolver__boolean_isNonSingular<>>
	CONSUME 
		org.apache.commons.math.linear.FieldDecompositionSolver : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <org.apache.commons.math.linear.FieldDecompositionSolver__org.apache.commons.math.FieldElement[]_solve<org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1,

		org.apache.commons.math.linear.FieldDecompositionSolver : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement[] : 1;
TRANSITION <org.apache.commons.math.linear.FieldDecompositionSolver__org.apache.commons.math.linear.FieldMatrix_getInverse<>>
	CONSUME 
		org.apache.commons.math.linear.FieldDecompositionSolver : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.FieldDecompositionSolver__org.apache.commons.math.linear.FieldMatrix_solve<org.apache.commons.math.linear.FieldMatrix>>
	CONSUME 
		org.apache.commons.math.linear.FieldDecompositionSolver : 1,

		org.apache.commons.math.linear.FieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.FieldDecompositionSolver__org.apache.commons.math.linear.FieldVector_solve<org.apache.commons.math.linear.FieldVector>>
	CONSUME 
		org.apache.commons.math.linear.FieldDecompositionSolver : 1,

		org.apache.commons.math.linear.FieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.FieldLUDecomposition__int[]_getPivot<>>
	CONSUME 
		org.apache.commons.math.linear.FieldLUDecomposition : 1;
	PRODUCE 
		int[] : 1;
TRANSITION <org.apache.commons.math.linear.FieldLUDecomposition__org.apache.commons.math.FieldElement_getDeterminant<>>
	CONSUME 
		org.apache.commons.math.linear.FieldLUDecomposition : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement : 1;
TRANSITION <org.apache.commons.math.linear.FieldLUDecomposition__org.apache.commons.math.linear.FieldDecompositionSolver_getSolver<>>
	CONSUME 
		org.apache.commons.math.linear.FieldLUDecomposition : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldDecompositionSolver : 1;
TRANSITION <org.apache.commons.math.linear.FieldLUDecomposition__org.apache.commons.math.linear.FieldMatrix_getL<>>
	CONSUME 
		org.apache.commons.math.linear.FieldLUDecomposition : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.FieldLUDecomposition__org.apache.commons.math.linear.FieldMatrix_getP<>>
	CONSUME 
		org.apache.commons.math.linear.FieldLUDecomposition : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.FieldLUDecomposition__org.apache.commons.math.linear.FieldMatrix_getU<>>
	CONSUME 
		org.apache.commons.math.linear.FieldLUDecomposition : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver__boolean_isNonSingular<>>
	CONSUME 
		org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver__org.apache.commons.math.FieldElement[]_solve<org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1,

		org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement[] : 1;
TRANSITION <org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver__org.apache.commons.math.linear.ArrayFieldVector_solve<org.apache.commons.math.linear.ArrayFieldVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayFieldVector : 1,

		org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver : 1;
	PRODUCE 
		org.apache.commons.math.linear.ArrayFieldVector : 1;
TRANSITION <org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver__org.apache.commons.math.linear.FieldMatrix_getInverse<>>
	CONSUME 
		org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver__org.apache.commons.math.linear.FieldMatrix_solve<org.apache.commons.math.linear.FieldMatrix>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrix : 1,

		org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver__org.apache.commons.math.linear.FieldVector_solve<org.apache.commons.math.linear.FieldVector>>
	CONSUME 
		org.apache.commons.math.linear.FieldVector : 1,

		org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.FieldLUDecompositionImpl__int[]_getPivot<>>
	CONSUME 
		org.apache.commons.math.linear.FieldLUDecompositionImpl : 1;
	PRODUCE 
		int[] : 1;
TRANSITION <org.apache.commons.math.linear.FieldLUDecompositionImpl__org.apache.commons.math.FieldElement_getDeterminant<>>
	CONSUME 
		org.apache.commons.math.linear.FieldLUDecompositionImpl : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement : 1;
TRANSITION <org.apache.commons.math.linear.FieldLUDecompositionImpl__org.apache.commons.math.linear.FieldDecompositionSolver_getSolver<>>
	CONSUME 
		org.apache.commons.math.linear.FieldLUDecompositionImpl : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldDecompositionSolver : 1;
TRANSITION <org.apache.commons.math.linear.FieldLUDecompositionImpl__org.apache.commons.math.linear.FieldMatrix_getL<>>
	CONSUME 
		org.apache.commons.math.linear.FieldLUDecompositionImpl : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.FieldLUDecompositionImpl__org.apache.commons.math.linear.FieldMatrix_getP<>>
	CONSUME 
		org.apache.commons.math.linear.FieldLUDecompositionImpl : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.FieldLUDecompositionImpl__org.apache.commons.math.linear.FieldMatrix_getU<>>
	CONSUME 
		org.apache.commons.math.linear.FieldLUDecompositionImpl : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.FieldLUDecompositionImpl__void_<init><org.apache.commons.math.linear.FieldMatrix>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldLUDecompositionImpl : 1;
TRANSITION <org.apache.commons.math.linear.FieldMatrix__org.apache.commons.math.Field_getField<>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.Field : 1;
TRANSITION <org.apache.commons.math.linear.FieldMatrix__org.apache.commons.math.FieldElement_getEntry<int.int>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrix : 1,

		int : 2;
	PRODUCE 
		org.apache.commons.math.FieldElement : 1;
TRANSITION <org.apache.commons.math.linear.FieldMatrix__org.apache.commons.math.FieldElement_getTrace<>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement : 1;
TRANSITION <org.apache.commons.math.linear.FieldMatrix__org.apache.commons.math.FieldElement_walkInColumnOrder<org.apache.commons.math.linear.FieldMatrixChangingVisitor>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrixChangingVisitor : 1,

		org.apache.commons.math.linear.FieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement : 1;
TRANSITION <org.apache.commons.math.linear.FieldMatrix__org.apache.commons.math.FieldElement_walkInColumnOrder<org.apache.commons.math.linear.FieldMatrixPreservingVisitor>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrixPreservingVisitor : 1,

		org.apache.commons.math.linear.FieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement : 1;
TRANSITION <org.apache.commons.math.linear.FieldMatrix__org.apache.commons.math.FieldElement_walkInOptimizedOrder<org.apache.commons.math.linear.FieldMatrixChangingVisitor>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrixChangingVisitor : 1,

		org.apache.commons.math.linear.FieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement : 1;
TRANSITION <org.apache.commons.math.linear.FieldMatrix__org.apache.commons.math.FieldElement_walkInOptimizedOrder<org.apache.commons.math.linear.FieldMatrixPreservingVisitor>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrixPreservingVisitor : 1,

		org.apache.commons.math.linear.FieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement : 1;
TRANSITION <org.apache.commons.math.linear.FieldMatrix__org.apache.commons.math.FieldElement_walkInRowOrder<org.apache.commons.math.linear.FieldMatrixChangingVisitor>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrixChangingVisitor : 1,

		org.apache.commons.math.linear.FieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement : 1;
TRANSITION <org.apache.commons.math.linear.FieldMatrix__org.apache.commons.math.FieldElement_walkInRowOrder<org.apache.commons.math.linear.FieldMatrixPreservingVisitor>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrixPreservingVisitor : 1,

		org.apache.commons.math.linear.FieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement : 1;
TRANSITION <org.apache.commons.math.linear.FieldMatrix__org.apache.commons.math.FieldElement[]_getColumn<int>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrix : 1,

		int : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement[] : 1;
TRANSITION <org.apache.commons.math.linear.FieldMatrix__org.apache.commons.math.FieldElement[]_getRow<int>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrix : 1,

		int : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement[] : 1;
TRANSITION <org.apache.commons.math.linear.FieldMatrix__org.apache.commons.math.FieldElement[]_operate<org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1,

		org.apache.commons.math.linear.FieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement[] : 1;
TRANSITION <org.apache.commons.math.linear.FieldMatrix__org.apache.commons.math.FieldElement[]_preMultiply<org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1,

		org.apache.commons.math.linear.FieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement[] : 1;
TRANSITION <org.apache.commons.math.linear.FieldMatrix__org.apache.commons.math.FieldElement[][]_getData<>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement[][] : 1;
TRANSITION <org.apache.commons.math.linear.FieldMatrix__org.apache.commons.math.linear.FieldMatrix_add<org.apache.commons.math.linear.FieldMatrix>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrix : 2;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.FieldMatrix__org.apache.commons.math.linear.FieldMatrix_copy<>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.FieldMatrix__org.apache.commons.math.linear.FieldMatrix_createMatrix<int.int>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrix : 1,

		int : 2;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.FieldMatrix__org.apache.commons.math.linear.FieldMatrix_getColumnMatrix<int>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrix : 1,

		int : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.FieldMatrix__org.apache.commons.math.linear.FieldMatrix_getRowMatrix<int>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrix : 1,

		int : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.FieldMatrix__org.apache.commons.math.linear.FieldMatrix_getSubMatrix<int.int.int.int>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrix : 1,

		int : 4;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.FieldMatrix__org.apache.commons.math.linear.FieldMatrix_getSubMatrix<int[].int[]>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrix : 1,

		int[] : 2;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.FieldMatrix__org.apache.commons.math.linear.FieldMatrix_multiply<org.apache.commons.math.linear.FieldMatrix>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrix : 2;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.FieldMatrix__org.apache.commons.math.linear.FieldMatrix_preMultiply<org.apache.commons.math.linear.FieldMatrix>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrix : 2;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.FieldMatrix__org.apache.commons.math.linear.FieldMatrix_scalarAdd<org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.FieldElement : 1,

		org.apache.commons.math.linear.FieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.FieldMatrix__org.apache.commons.math.linear.FieldMatrix_scalarMultiply<org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.FieldElement : 1,

		org.apache.commons.math.linear.FieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.FieldMatrix__org.apache.commons.math.linear.FieldMatrix_subtract<org.apache.commons.math.linear.FieldMatrix>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrix : 2;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.FieldMatrix__org.apache.commons.math.linear.FieldMatrix_transpose<>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.FieldMatrix__org.apache.commons.math.linear.FieldVector_getColumnVector<int>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrix : 1,

		int : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.FieldMatrix__org.apache.commons.math.linear.FieldVector_getRowVector<int>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrix : 1,

		int : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.FieldMatrix__org.apache.commons.math.linear.FieldVector_operate<org.apache.commons.math.linear.FieldVector>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrix : 1,

		org.apache.commons.math.linear.FieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.FieldMatrix__org.apache.commons.math.linear.FieldVector_preMultiply<org.apache.commons.math.linear.FieldVector>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrix : 1,

		org.apache.commons.math.linear.FieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.FieldMatrix__void_addToEntry<int.int.org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.FieldElement : 1,

		org.apache.commons.math.linear.FieldMatrix : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.FieldMatrix__void_copySubMatrix<int[].int[].org.apache.commons.math.FieldElement[][]>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrix : 1,

		int[] : 2,

		org.apache.commons.math.FieldElement[][] : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.FieldMatrix__void_multiplyEntry<int.int.org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.FieldElement : 1,

		org.apache.commons.math.linear.FieldMatrix : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.FieldMatrix__void_setColumn<int.org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1,

		org.apache.commons.math.linear.FieldMatrix : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.FieldMatrix__void_setColumnMatrix<int.org.apache.commons.math.linear.FieldMatrix>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrix : 2,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.FieldMatrix__void_setColumnVector<int.org.apache.commons.math.linear.FieldVector>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrix : 1,

		org.apache.commons.math.linear.FieldVector : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.FieldMatrix__void_setEntry<int.int.org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.FieldElement : 1,

		org.apache.commons.math.linear.FieldMatrix : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.FieldMatrix__void_setRow<int.org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1,

		org.apache.commons.math.linear.FieldMatrix : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.FieldMatrix__void_setRowMatrix<int.org.apache.commons.math.linear.FieldMatrix>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrix : 2,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.FieldMatrix__void_setRowVector<int.org.apache.commons.math.linear.FieldVector>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrix : 1,

		org.apache.commons.math.linear.FieldVector : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.FieldMatrix__void_setSubMatrix<org.apache.commons.math.FieldElement[][].int.int>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrix : 1,

		org.apache.commons.math.FieldElement[][] : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.FieldMatrixChangingVisitor__org.apache.commons.math.FieldElement_end<>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrixChangingVisitor : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement : 1;
TRANSITION <org.apache.commons.math.linear.FieldMatrixChangingVisitor__org.apache.commons.math.FieldElement_visit<int.int.org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrixChangingVisitor : 1,

		org.apache.commons.math.FieldElement : 1,

		int : 2;
	PRODUCE 
		org.apache.commons.math.FieldElement : 1;
TRANSITION <org.apache.commons.math.linear.FieldMatrixPreservingVisitor__org.apache.commons.math.FieldElement_end<>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrixPreservingVisitor : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement : 1;
TRANSITION <org.apache.commons.math.linear.FieldMatrixPreservingVisitor__void_visit<int.int.org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrixPreservingVisitor : 1,

		org.apache.commons.math.FieldElement : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.FieldVector__int_getDimension<>>
	CONSUME 
		org.apache.commons.math.linear.FieldVector : 1;
	PRODUCE 
		int : 1;
TRANSITION <org.apache.commons.math.linear.FieldVector__org.apache.commons.math.Field_getField<>>
	CONSUME 
		org.apache.commons.math.linear.FieldVector : 1;
	PRODUCE 
		org.apache.commons.math.Field : 1;
TRANSITION <org.apache.commons.math.linear.FieldVector__org.apache.commons.math.FieldElement_dotProduct<org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1,

		org.apache.commons.math.linear.FieldVector : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement : 1;
TRANSITION <org.apache.commons.math.linear.FieldVector__org.apache.commons.math.FieldElement_dotProduct<org.apache.commons.math.linear.FieldVector>>
	CONSUME 
		org.apache.commons.math.linear.FieldVector : 2;
	PRODUCE 
		org.apache.commons.math.FieldElement : 1;
TRANSITION <org.apache.commons.math.linear.FieldVector__org.apache.commons.math.FieldElement_getEntry<int>>
	CONSUME 
		org.apache.commons.math.linear.FieldVector : 1,

		int : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement : 1;
TRANSITION <org.apache.commons.math.linear.FieldVector__org.apache.commons.math.FieldElement[]_getData<>>
	CONSUME 
		org.apache.commons.math.linear.FieldVector : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement[] : 1;
TRANSITION <org.apache.commons.math.linear.FieldVector__org.apache.commons.math.FieldElement[]_toArray<>>
	CONSUME 
		org.apache.commons.math.linear.FieldVector : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement[] : 1;
TRANSITION <org.apache.commons.math.linear.FieldVector__org.apache.commons.math.linear.FieldMatrix_outerProduct<org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1,

		org.apache.commons.math.linear.FieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.FieldVector__org.apache.commons.math.linear.FieldMatrix_outerProduct<org.apache.commons.math.linear.FieldVector>>
	CONSUME 
		org.apache.commons.math.linear.FieldVector : 2;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.FieldVector__org.apache.commons.math.linear.FieldVector_add<org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1,

		org.apache.commons.math.linear.FieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.FieldVector__org.apache.commons.math.linear.FieldVector_add<org.apache.commons.math.linear.FieldVector>>
	CONSUME 
		org.apache.commons.math.linear.FieldVector : 2;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.FieldVector__org.apache.commons.math.linear.FieldVector_append<org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.FieldElement : 1,

		org.apache.commons.math.linear.FieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.FieldVector__org.apache.commons.math.linear.FieldVector_append<org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1,

		org.apache.commons.math.linear.FieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.FieldVector__org.apache.commons.math.linear.FieldVector_append<org.apache.commons.math.linear.FieldVector>>
	CONSUME 
		org.apache.commons.math.linear.FieldVector : 2;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.FieldVector__org.apache.commons.math.linear.FieldVector_copy<>>
	CONSUME 
		org.apache.commons.math.linear.FieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.FieldVector__org.apache.commons.math.linear.FieldVector_ebeDivide<org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1,

		org.apache.commons.math.linear.FieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.FieldVector__org.apache.commons.math.linear.FieldVector_ebeDivide<org.apache.commons.math.linear.FieldVector>>
	CONSUME 
		org.apache.commons.math.linear.FieldVector : 2;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.FieldVector__org.apache.commons.math.linear.FieldVector_ebeMultiply<org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1,

		org.apache.commons.math.linear.FieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.FieldVector__org.apache.commons.math.linear.FieldVector_ebeMultiply<org.apache.commons.math.linear.FieldVector>>
	CONSUME 
		org.apache.commons.math.linear.FieldVector : 2;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.FieldVector__org.apache.commons.math.linear.FieldVector_getSubVector<int.int>>
	CONSUME 
		org.apache.commons.math.linear.FieldVector : 1,

		int : 2;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.FieldVector__org.apache.commons.math.linear.FieldVector_mapAdd<org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.FieldElement : 1,

		org.apache.commons.math.linear.FieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.FieldVector__org.apache.commons.math.linear.FieldVector_mapAddToSelf<org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.FieldElement : 1,

		org.apache.commons.math.linear.FieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.FieldVector__org.apache.commons.math.linear.FieldVector_mapDivide<org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.FieldElement : 1,

		org.apache.commons.math.linear.FieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.FieldVector__org.apache.commons.math.linear.FieldVector_mapDivideToSelf<org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.FieldElement : 1,

		org.apache.commons.math.linear.FieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.FieldVector__org.apache.commons.math.linear.FieldVector_mapInv<>>
	CONSUME 
		org.apache.commons.math.linear.FieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.FieldVector__org.apache.commons.math.linear.FieldVector_mapInvToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.FieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.FieldVector__org.apache.commons.math.linear.FieldVector_mapMultiply<org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.FieldElement : 1,

		org.apache.commons.math.linear.FieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.FieldVector__org.apache.commons.math.linear.FieldVector_mapMultiplyToSelf<org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.FieldElement : 1,

		org.apache.commons.math.linear.FieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.FieldVector__org.apache.commons.math.linear.FieldVector_mapSubtract<org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.FieldElement : 1,

		org.apache.commons.math.linear.FieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.FieldVector__org.apache.commons.math.linear.FieldVector_mapSubtractToSelf<org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.FieldElement : 1,

		org.apache.commons.math.linear.FieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.FieldVector__org.apache.commons.math.linear.FieldVector_projection<org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1,

		org.apache.commons.math.linear.FieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.FieldVector__org.apache.commons.math.linear.FieldVector_projection<org.apache.commons.math.linear.FieldVector>>
	CONSUME 
		org.apache.commons.math.linear.FieldVector : 2;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.FieldVector__org.apache.commons.math.linear.FieldVector_subtract<org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1,

		org.apache.commons.math.linear.FieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.FieldVector__org.apache.commons.math.linear.FieldVector_subtract<org.apache.commons.math.linear.FieldVector>>
	CONSUME 
		org.apache.commons.math.linear.FieldVector : 2;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.FieldVector__void_set<org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.FieldElement : 1,

		org.apache.commons.math.linear.FieldVector : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.FieldVector__void_setEntry<int.org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.FieldElement : 1,

		org.apache.commons.math.linear.FieldVector : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.FieldVector__void_setSubVector<int.org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1,

		org.apache.commons.math.linear.FieldVector : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.FieldVector__void_setSubVector<int.org.apache.commons.math.linear.FieldVector>>
	CONSUME 
		org.apache.commons.math.linear.FieldVector : 2,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.InvalidMatrixException__void_<init><java.lang.String.java.lang.Object[]>>
	CONSUME 
		java.lang.Object[] : 1,

		java.lang.String : 1;
	PRODUCE 
		org.apache.commons.math.linear.InvalidMatrixException : 1;
TRANSITION <org.apache.commons.math.linear.InvalidMatrixException__void_<init><java.lang.Throwable>>
	CONSUME 
		java.lang.Throwable : 1;
	PRODUCE 
		org.apache.commons.math.linear.InvalidMatrixException : 1;
TRANSITION <org.apache.commons.math.linear.InvalidMatrixException__void_<init><org.apache.commons.math.exception.util.Localizable.java.lang.Object[]>>
	CONSUME 
		org.apache.commons.math.exception.util.Localizable : 1,

		java.lang.Object[] : 1;
	PRODUCE 
		org.apache.commons.math.linear.InvalidMatrixException : 1;
TRANSITION <org.apache.commons.math.linear.LUDecomposition__double_getDeterminant<>>
	CONSUME 
		org.apache.commons.math.linear.LUDecomposition : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.LUDecomposition__int[]_getPivot<>>
	CONSUME 
		org.apache.commons.math.linear.LUDecomposition : 1;
	PRODUCE 
		int[] : 1;
TRANSITION <org.apache.commons.math.linear.LUDecomposition__org.apache.commons.math.linear.DecompositionSolver_getSolver<>>
	CONSUME 
		org.apache.commons.math.linear.LUDecomposition : 1;
	PRODUCE 
		org.apache.commons.math.linear.DecompositionSolver : 1;
TRANSITION <org.apache.commons.math.linear.LUDecomposition__org.apache.commons.math.linear.RealMatrix_getL<>>
	CONSUME 
		org.apache.commons.math.linear.LUDecomposition : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.LUDecomposition__org.apache.commons.math.linear.RealMatrix_getP<>>
	CONSUME 
		org.apache.commons.math.linear.LUDecomposition : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.LUDecomposition__org.apache.commons.math.linear.RealMatrix_getU<>>
	CONSUME 
		org.apache.commons.math.linear.LUDecomposition : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.LUDecompositionImpl$Solver__boolean_isNonSingular<>>
	CONSUME 
		org.apache.commons.math.linear.LUDecompositionImpl$Solver : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <org.apache.commons.math.linear.LUDecompositionImpl$Solver__double[]_solve<double[]>>
	CONSUME 
		org.apache.commons.math.linear.LUDecompositionImpl$Solver : 1,

		double[] : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.linear.LUDecompositionImpl$Solver__org.apache.commons.math.linear.ArrayRealVector_solve<org.apache.commons.math.linear.ArrayRealVector>>
	CONSUME 
		org.apache.commons.math.linear.LUDecompositionImpl$Solver : 1,

		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.ArrayRealVector : 1;
TRANSITION <org.apache.commons.math.linear.LUDecompositionImpl$Solver__org.apache.commons.math.linear.RealMatrix_getInverse<>>
	CONSUME 
		org.apache.commons.math.linear.LUDecompositionImpl$Solver : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.LUDecompositionImpl$Solver__org.apache.commons.math.linear.RealMatrix_solve<org.apache.commons.math.linear.RealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.LUDecompositionImpl$Solver : 1,

		org.apache.commons.math.linear.RealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.LUDecompositionImpl$Solver__org.apache.commons.math.linear.RealVector_solve<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.LUDecompositionImpl$Solver : 1,

		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.LUDecompositionImpl__double_getDeterminant<>>
	CONSUME 
		org.apache.commons.math.linear.LUDecompositionImpl : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.LUDecompositionImpl__int[]_getPivot<>>
	CONSUME 
		org.apache.commons.math.linear.LUDecompositionImpl : 1;
	PRODUCE 
		int[] : 1;
TRANSITION <org.apache.commons.math.linear.LUDecompositionImpl__org.apache.commons.math.linear.DecompositionSolver_getSolver<>>
	CONSUME 
		org.apache.commons.math.linear.LUDecompositionImpl : 1;
	PRODUCE 
		org.apache.commons.math.linear.DecompositionSolver : 1;
TRANSITION <org.apache.commons.math.linear.LUDecompositionImpl__org.apache.commons.math.linear.RealMatrix_getL<>>
	CONSUME 
		org.apache.commons.math.linear.LUDecompositionImpl : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.LUDecompositionImpl__org.apache.commons.math.linear.RealMatrix_getP<>>
	CONSUME 
		org.apache.commons.math.linear.LUDecompositionImpl : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.LUDecompositionImpl__org.apache.commons.math.linear.RealMatrix_getU<>>
	CONSUME 
		org.apache.commons.math.linear.LUDecompositionImpl : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.LUDecompositionImpl__void_<init><org.apache.commons.math.linear.RealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.LUDecompositionImpl : 1;
TRANSITION <org.apache.commons.math.linear.LUDecompositionImpl__void_<init><org.apache.commons.math.linear.RealMatrix.double>>
	CONSUME 
		double : 1,

		org.apache.commons.math.linear.RealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.LUDecompositionImpl : 1;
TRANSITION <org.apache.commons.math.linear.MatrixIndexException__void_<init><java.lang.String.java.lang.Object[]>>
	CONSUME 
		java.lang.Object[] : 1,

		java.lang.String : 1;
	PRODUCE 
		org.apache.commons.math.linear.MatrixIndexException : 1;
TRANSITION <org.apache.commons.math.linear.MatrixIndexException__void_<init><org.apache.commons.math.exception.util.Localizable.java.lang.Object[]>>
	CONSUME 
		org.apache.commons.math.exception.util.Localizable : 1,

		java.lang.Object[] : 1;
	PRODUCE 
		org.apache.commons.math.linear.MatrixIndexException : 1;
TRANSITION <org.apache.commons.math.linear.MatrixUtils$BigFractionMatrixConverter__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		org.apache.commons.math.linear.MatrixUtils$BigFractionMatrixConverter : 1;
TRANSITION <org.apache.commons.math.linear.MatrixUtils$BigFractionMatrixConverter__void_visit<int.int.org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.FieldElement : 1,

		org.apache.commons.math.linear.MatrixUtils$BigFractionMatrixConverter : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.MatrixUtils$BigFractionMatrixConverter__void_visit<int.int.org.apache.commons.math.fraction.BigFraction>>
	CONSUME 
		org.apache.commons.math.fraction.BigFraction : 1,

		org.apache.commons.math.linear.MatrixUtils$BigFractionMatrixConverter : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.MatrixUtils$FractionMatrixConverter__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		org.apache.commons.math.linear.MatrixUtils$FractionMatrixConverter : 1;
TRANSITION <org.apache.commons.math.linear.MatrixUtils$FractionMatrixConverter__void_visit<int.int.org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.FieldElement : 1,

		org.apache.commons.math.linear.MatrixUtils$FractionMatrixConverter : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.MatrixUtils$FractionMatrixConverter__void_visit<int.int.org.apache.commons.math.fraction.Fraction>>
	CONSUME 
		org.apache.commons.math.fraction.Fraction : 1,

		org.apache.commons.math.linear.MatrixUtils$FractionMatrixConverter : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.MatrixUtils__org.apache.commons.math.linear.Array2DRowRealMatrix_bigFractionMatrixToRealMatrix<org.apache.commons.math.linear.FieldMatrix>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.Array2DRowRealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.MatrixUtils__org.apache.commons.math.linear.Array2DRowRealMatrix_fractionMatrixToRealMatrix<org.apache.commons.math.linear.FieldMatrix>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.Array2DRowRealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.MatrixUtils__org.apache.commons.math.linear.BigMatrix_createBigIdentityMatrix<int>>
	CONSUME 
		int : 1;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrix : 1;
TRANSITION <org.apache.commons.math.linear.MatrixUtils__org.apache.commons.math.linear.BigMatrix_createBigMatrix<double[][]>>
	CONSUME 
		double[][] : 1;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrix : 1;
TRANSITION <org.apache.commons.math.linear.MatrixUtils__org.apache.commons.math.linear.BigMatrix_createBigMatrix<java.lang.String[][]>>
	CONSUME 
		java.lang.String[][] : 1;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrix : 1;
TRANSITION <org.apache.commons.math.linear.MatrixUtils__org.apache.commons.math.linear.BigMatrix_createBigMatrix<java.math.BigDecimal[][]>>
	CONSUME 
		java.math.BigDecimal[][] : 1;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrix : 1;
TRANSITION <org.apache.commons.math.linear.MatrixUtils__org.apache.commons.math.linear.BigMatrix_createBigMatrix<java.math.BigDecimal[][].boolean>>
	CONSUME 
		boolean : 1,

		java.math.BigDecimal[][] : 1;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrix : 1;
TRANSITION <org.apache.commons.math.linear.MatrixUtils__org.apache.commons.math.linear.BigMatrix_createColumnBigMatrix<double[]>>
	CONSUME 
		double[] : 1;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrix : 1;
TRANSITION <org.apache.commons.math.linear.MatrixUtils__org.apache.commons.math.linear.BigMatrix_createColumnBigMatrix<java.lang.String[]>>
	CONSUME 
		java.lang.String[] : 1;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrix : 1;
TRANSITION <org.apache.commons.math.linear.MatrixUtils__org.apache.commons.math.linear.BigMatrix_createColumnBigMatrix<java.math.BigDecimal[]>>
	CONSUME 
		java.math.BigDecimal[] : 1;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrix : 1;
TRANSITION <org.apache.commons.math.linear.MatrixUtils__org.apache.commons.math.linear.BigMatrix_createRowBigMatrix<double[]>>
	CONSUME 
		double[] : 1;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrix : 1;
TRANSITION <org.apache.commons.math.linear.MatrixUtils__org.apache.commons.math.linear.BigMatrix_createRowBigMatrix<java.lang.String[]>>
	CONSUME 
		java.lang.String[] : 1;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrix : 1;
TRANSITION <org.apache.commons.math.linear.MatrixUtils__org.apache.commons.math.linear.BigMatrix_createRowBigMatrix<java.math.BigDecimal[]>>
	CONSUME 
		java.math.BigDecimal[] : 1;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrix : 1;
TRANSITION <org.apache.commons.math.linear.MatrixUtils__org.apache.commons.math.linear.FieldMatrix_createColumnFieldMatrix<org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.MatrixUtils__org.apache.commons.math.linear.FieldMatrix_createFieldDiagonalMatrix<org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.MatrixUtils__org.apache.commons.math.linear.FieldMatrix_createFieldIdentityMatrix<org.apache.commons.math.Field.int>>
	CONSUME 
		org.apache.commons.math.Field : 1,

		int : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.MatrixUtils__org.apache.commons.math.linear.FieldMatrix_createFieldMatrix<org.apache.commons.math.Field.int.int>>
	CONSUME 
		org.apache.commons.math.Field : 1,

		int : 2;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.MatrixUtils__org.apache.commons.math.linear.FieldMatrix_createFieldMatrix<org.apache.commons.math.FieldElement[][]>>
	CONSUME 
		org.apache.commons.math.FieldElement[][] : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.MatrixUtils__org.apache.commons.math.linear.FieldMatrix_createRowFieldMatrix<org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.MatrixUtils__org.apache.commons.math.linear.FieldVector_createFieldVector<org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.MatrixUtils__org.apache.commons.math.linear.RealMatrix_createColumnRealMatrix<double[]>>
	CONSUME 
		double[] : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.MatrixUtils__org.apache.commons.math.linear.RealMatrix_createRealDiagonalMatrix<double[]>>
	CONSUME 
		double[] : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.MatrixUtils__org.apache.commons.math.linear.RealMatrix_createRealIdentityMatrix<int>>
	CONSUME 
		int : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.MatrixUtils__org.apache.commons.math.linear.RealMatrix_createRealMatrix<double[][]>>
	CONSUME 
		double[][] : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.MatrixUtils__org.apache.commons.math.linear.RealMatrix_createRealMatrix<int.int>>
	CONSUME 
		int : 2;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.MatrixUtils__org.apache.commons.math.linear.RealMatrix_createRowRealMatrix<double[]>>
	CONSUME 
		double[] : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.MatrixUtils__org.apache.commons.math.linear.RealVector_createRealVector<double[]>>
	CONSUME 
		double[] : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.MatrixUtils__void_checkAdditionCompatible<org.apache.commons.math.linear.AnyMatrix.org.apache.commons.math.linear.AnyMatrix>>
	CONSUME 
		org.apache.commons.math.linear.AnyMatrix : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.MatrixUtils__void_checkColumnIndex<org.apache.commons.math.linear.AnyMatrix.int>>
	CONSUME 
		org.apache.commons.math.linear.AnyMatrix : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.MatrixUtils__void_checkMultiplicationCompatible<org.apache.commons.math.linear.AnyMatrix.org.apache.commons.math.linear.AnyMatrix>>
	CONSUME 
		org.apache.commons.math.linear.AnyMatrix : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.MatrixUtils__void_checkRowIndex<org.apache.commons.math.linear.AnyMatrix.int>>
	CONSUME 
		org.apache.commons.math.linear.AnyMatrix : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.MatrixUtils__void_checkSubMatrixIndex<org.apache.commons.math.linear.AnyMatrix.int[].int[]>>
	CONSUME 
		org.apache.commons.math.linear.AnyMatrix : 1,

		int[] : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.MatrixUtils__void_checkSubtractionCompatible<org.apache.commons.math.linear.AnyMatrix.org.apache.commons.math.linear.AnyMatrix>>
	CONSUME 
		org.apache.commons.math.linear.AnyMatrix : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.MatrixUtils__void_deserializeRealMatrix<java.lang.Object.java.lang.String.java.io.ObjectInputStream>>
	CONSUME 
		java.io.ObjectInputStream : 1,

		java.lang.Object : 1,

		java.lang.String : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.MatrixUtils__void_deserializeRealVector<java.lang.Object.java.lang.String.java.io.ObjectInputStream>>
	CONSUME 
		java.io.ObjectInputStream : 1,

		java.lang.Object : 1,

		java.lang.String : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.MatrixUtils__void_serializeRealMatrix<org.apache.commons.math.linear.RealMatrix.java.io.ObjectOutputStream>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1,

		java.io.ObjectOutputStream : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.MatrixUtils__void_serializeRealVector<org.apache.commons.math.linear.RealVector.java.io.ObjectOutputStream>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1,

		java.io.ObjectOutputStream : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.MatrixVisitorException__void_<init><java.lang.String.java.lang.Object[]>>
	CONSUME 
		java.lang.Object[] : 1,

		java.lang.String : 1;
	PRODUCE 
		org.apache.commons.math.linear.MatrixVisitorException : 1;
TRANSITION <org.apache.commons.math.linear.MatrixVisitorException__void_<init><org.apache.commons.math.exception.util.Localizable.java.lang.Object[]>>
	CONSUME 
		org.apache.commons.math.exception.util.Localizable : 1,

		java.lang.Object[] : 1;
	PRODUCE 
		org.apache.commons.math.linear.MatrixVisitorException : 1;
TRANSITION <org.apache.commons.math.linear.NonSquareMatrixException__void_<init><int.int>>
	CONSUME 
		int : 2;
	PRODUCE 
		org.apache.commons.math.linear.NonSquareMatrixException : 1;
TRANSITION <org.apache.commons.math.linear.NotPositiveDefiniteMatrixException__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		org.apache.commons.math.linear.NotPositiveDefiniteMatrixException : 1;
TRANSITION <org.apache.commons.math.linear.NotSymmetricMatrixException__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		org.apache.commons.math.linear.NotSymmetricMatrixException : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealMatrix__double_getEntry<int.int>>
	CONSUME 
		org.apache.commons.math.linear.OpenMapRealMatrix : 1,

		int : 2;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealMatrix__int_getColumnDimension<>>
	CONSUME 
		org.apache.commons.math.linear.OpenMapRealMatrix : 1;
	PRODUCE 
		int : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealMatrix__int_getRowDimension<>>
	CONSUME 
		org.apache.commons.math.linear.OpenMapRealMatrix : 1;
	PRODUCE 
		int : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealMatrix__org.apache.commons.math.linear.OpenMapRealMatrix_add<org.apache.commons.math.linear.OpenMapRealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.OpenMapRealMatrix : 2;
	PRODUCE 
		org.apache.commons.math.linear.OpenMapRealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealMatrix__org.apache.commons.math.linear.OpenMapRealMatrix_add<org.apache.commons.math.linear.RealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1,

		org.apache.commons.math.linear.OpenMapRealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.OpenMapRealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealMatrix__org.apache.commons.math.linear.OpenMapRealMatrix_copy<>>
	CONSUME 
		org.apache.commons.math.linear.OpenMapRealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.OpenMapRealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealMatrix__org.apache.commons.math.linear.OpenMapRealMatrix_createMatrix<int.int>>
	CONSUME 
		org.apache.commons.math.linear.OpenMapRealMatrix : 1,

		int : 2;
	PRODUCE 
		org.apache.commons.math.linear.OpenMapRealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealMatrix__org.apache.commons.math.linear.OpenMapRealMatrix_multiply<org.apache.commons.math.linear.OpenMapRealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.OpenMapRealMatrix : 2;
	PRODUCE 
		org.apache.commons.math.linear.OpenMapRealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealMatrix__org.apache.commons.math.linear.OpenMapRealMatrix_subtract<org.apache.commons.math.linear.OpenMapRealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.OpenMapRealMatrix : 2;
	PRODUCE 
		org.apache.commons.math.linear.OpenMapRealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealMatrix__org.apache.commons.math.linear.OpenMapRealMatrix_subtract<org.apache.commons.math.linear.RealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1,

		org.apache.commons.math.linear.OpenMapRealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.OpenMapRealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealMatrix__org.apache.commons.math.linear.RealMatrix_add<org.apache.commons.math.linear.RealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1,

		org.apache.commons.math.linear.OpenMapRealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealMatrix__org.apache.commons.math.linear.RealMatrix_copy<>>
	CONSUME 
		org.apache.commons.math.linear.OpenMapRealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealMatrix__org.apache.commons.math.linear.RealMatrix_createMatrix<int.int>>
	CONSUME 
		org.apache.commons.math.linear.OpenMapRealMatrix : 1,

		int : 2;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealMatrix__org.apache.commons.math.linear.RealMatrix_multiply<org.apache.commons.math.linear.RealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1,

		org.apache.commons.math.linear.OpenMapRealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealMatrix__org.apache.commons.math.linear.RealMatrix_subtract<org.apache.commons.math.linear.RealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1,

		org.apache.commons.math.linear.OpenMapRealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealMatrix__void_<init><int.int>>
	CONSUME 
		int : 2;
	PRODUCE 
		org.apache.commons.math.linear.OpenMapRealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealMatrix__void_<init><org.apache.commons.math.linear.OpenMapRealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.OpenMapRealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.OpenMapRealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealMatrix__void_addToEntry<int.int.double>>
	CONSUME 
		double : 1,

		org.apache.commons.math.linear.OpenMapRealMatrix : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealMatrix__void_multiplyEntry<int.int.double>>
	CONSUME 
		double : 1,

		org.apache.commons.math.linear.OpenMapRealMatrix : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealMatrix__void_setEntry<int.int.double>>
	CONSUME 
		double : 1,

		org.apache.commons.math.linear.OpenMapRealMatrix : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry__double_getValue<>>
	CONSUME 
		org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry__int_getIndex<>>
	CONSUME 
		org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry : 1;
	PRODUCE 
		int : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry__void_setValue<double>>
	CONSUME 
		double : 1,

		org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__boolean_equals<java.lang.Object>>
	CONSUME 
		java.lang.Object : 1,

		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__boolean_isInfinite<>>
	CONSUME 
		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__boolean_isNaN<>>
	CONSUME 
		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__double_dotProduct<org.apache.commons.math.linear.OpenMapRealVector>>
	CONSUME 
		org.apache.commons.math.linear.OpenMapRealVector : 2;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__double_dotProduct<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1,

		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__double_getDistance<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__double_getDistance<org.apache.commons.math.linear.OpenMapRealVector>>
	CONSUME 
		org.apache.commons.math.linear.OpenMapRealVector : 2;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__double_getDistance<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1,

		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__double_getEntry<int>>
	CONSUME 
		org.apache.commons.math.linear.OpenMapRealVector : 1,

		int : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__double_getL1Distance<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__double_getL1Distance<org.apache.commons.math.linear.OpenMapRealVector>>
	CONSUME 
		org.apache.commons.math.linear.OpenMapRealVector : 2;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__double_getL1Distance<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1,

		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__double_getLInfDistance<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__double_getLInfDistance<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1,

		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__double_getSparcity<>>
	CONSUME 
		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__double_getSparsity<>>
	CONSUME 
		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__double[]_getData<>>
	CONSUME 
		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__double[]_toArray<>>
	CONSUME 
		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__int_getDimension<>>
	CONSUME 
		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		int : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__org.apache.commons.math.linear.AbstractRealVector_copy<>>
	CONSUME 
		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.AbstractRealVector : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__org.apache.commons.math.linear.OpenMapRealVector_add<org.apache.commons.math.linear.OpenMapRealVector>>
	CONSUME 
		org.apache.commons.math.linear.OpenMapRealVector : 2;
	PRODUCE 
		org.apache.commons.math.linear.OpenMapRealVector : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__org.apache.commons.math.linear.OpenMapRealVector_append<double>>
	CONSUME 
		double : 1,

		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.OpenMapRealVector : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__org.apache.commons.math.linear.OpenMapRealVector_append<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.OpenMapRealVector : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__org.apache.commons.math.linear.OpenMapRealVector_append<org.apache.commons.math.linear.OpenMapRealVector>>
	CONSUME 
		org.apache.commons.math.linear.OpenMapRealVector : 2;
	PRODUCE 
		org.apache.commons.math.linear.OpenMapRealVector : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__org.apache.commons.math.linear.OpenMapRealVector_append<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1,

		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.OpenMapRealVector : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__org.apache.commons.math.linear.OpenMapRealVector_copy<>>
	CONSUME 
		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.OpenMapRealVector : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__org.apache.commons.math.linear.OpenMapRealVector_ebeDivide<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.OpenMapRealVector : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__org.apache.commons.math.linear.OpenMapRealVector_ebeDivide<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1,

		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.OpenMapRealVector : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__org.apache.commons.math.linear.OpenMapRealVector_ebeMultiply<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.OpenMapRealVector : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__org.apache.commons.math.linear.OpenMapRealVector_ebeMultiply<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1,

		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.OpenMapRealVector : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__org.apache.commons.math.linear.OpenMapRealVector_getSubVector<int.int>>
	CONSUME 
		org.apache.commons.math.linear.OpenMapRealVector : 1,

		int : 2;
	PRODUCE 
		org.apache.commons.math.linear.OpenMapRealVector : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__org.apache.commons.math.linear.OpenMapRealVector_mapAdd<double>>
	CONSUME 
		double : 1,

		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.OpenMapRealVector : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__org.apache.commons.math.linear.OpenMapRealVector_mapAddToSelf<double>>
	CONSUME 
		double : 1,

		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.OpenMapRealVector : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__org.apache.commons.math.linear.OpenMapRealVector_projection<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.OpenMapRealVector : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__org.apache.commons.math.linear.OpenMapRealVector_subtract<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.OpenMapRealVector : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__org.apache.commons.math.linear.OpenMapRealVector_subtract<org.apache.commons.math.linear.OpenMapRealVector>>
	CONSUME 
		org.apache.commons.math.linear.OpenMapRealVector : 2;
	PRODUCE 
		org.apache.commons.math.linear.OpenMapRealVector : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__org.apache.commons.math.linear.OpenMapRealVector_subtract<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1,

		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.OpenMapRealVector : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__org.apache.commons.math.linear.OpenMapRealVector_unitVector<>>
	CONSUME 
		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.OpenMapRealVector : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__org.apache.commons.math.linear.RealMatrix_outerProduct<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__org.apache.commons.math.linear.RealVector_add<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1,

		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__org.apache.commons.math.linear.RealVector_append<double>>
	CONSUME 
		double : 1,

		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__org.apache.commons.math.linear.RealVector_append<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__org.apache.commons.math.linear.RealVector_append<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1,

		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__org.apache.commons.math.linear.RealVector_copy<>>
	CONSUME 
		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__org.apache.commons.math.linear.RealVector_ebeDivide<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__org.apache.commons.math.linear.RealVector_ebeDivide<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1,

		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__org.apache.commons.math.linear.RealVector_ebeMultiply<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__org.apache.commons.math.linear.RealVector_ebeMultiply<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1,

		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__org.apache.commons.math.linear.RealVector_getSubVector<int.int>>
	CONSUME 
		org.apache.commons.math.linear.OpenMapRealVector : 1,

		int : 2;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__org.apache.commons.math.linear.RealVector_mapAdd<double>>
	CONSUME 
		double : 1,

		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__org.apache.commons.math.linear.RealVector_mapAddToSelf<double>>
	CONSUME 
		double : 1,

		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__org.apache.commons.math.linear.RealVector_projection<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__org.apache.commons.math.linear.RealVector_projection<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1,

		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__org.apache.commons.math.linear.RealVector_subtract<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__org.apache.commons.math.linear.RealVector_subtract<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1,

		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__org.apache.commons.math.linear.RealVector_unitVector<>>
	CONSUME 
		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		org.apache.commons.math.linear.OpenMapRealVector : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__void_<init><double[]>>
	CONSUME 
		double[] : 1;
	PRODUCE 
		org.apache.commons.math.linear.OpenMapRealVector : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__void_<init><double[].double>>
	CONSUME 
		double[] : 1,

		double : 1;
	PRODUCE 
		org.apache.commons.math.linear.OpenMapRealVector : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__void_<init><int>>
	CONSUME 
		int : 1;
	PRODUCE 
		org.apache.commons.math.linear.OpenMapRealVector : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__void_<init><int.double>>
	CONSUME 
		double : 1,

		int : 1;
	PRODUCE 
		org.apache.commons.math.linear.OpenMapRealVector : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__void_<init><int.int>>
	CONSUME 
		int : 2;
	PRODUCE 
		org.apache.commons.math.linear.OpenMapRealVector : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__void_<init><int.int.double>>
	CONSUME 
		double : 1,

		int : 2;
	PRODUCE 
		org.apache.commons.math.linear.OpenMapRealVector : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__void_<init><java.lang.Double[]>>
	CONSUME 
		java.lang.Double[] : 1;
	PRODUCE 
		org.apache.commons.math.linear.OpenMapRealVector : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__void_<init><java.lang.Double[].double>>
	CONSUME 
		java.lang.Double[] : 1,

		double : 1;
	PRODUCE 
		org.apache.commons.math.linear.OpenMapRealVector : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__void_<init><org.apache.commons.math.linear.OpenMapRealVector>>
	CONSUME 
		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.OpenMapRealVector : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__void_<init><org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.OpenMapRealVector : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__void_set<double>>
	CONSUME 
		double : 1,

		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__void_setEntry<int.double>>
	CONSUME 
		double : 1,

		org.apache.commons.math.linear.OpenMapRealVector : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__void_setSubVector<int.double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.OpenMapRealVector : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__void_setSubVector<int.org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1,

		org.apache.commons.math.linear.OpenMapRealVector : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.OpenMapRealVector__void_unitize<>>
	CONSUME 
		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.QRDecomposition__org.apache.commons.math.linear.DecompositionSolver_getSolver<>>
	CONSUME 
		org.apache.commons.math.linear.QRDecomposition : 1;
	PRODUCE 
		org.apache.commons.math.linear.DecompositionSolver : 1;
TRANSITION <org.apache.commons.math.linear.QRDecomposition__org.apache.commons.math.linear.RealMatrix_getH<>>
	CONSUME 
		org.apache.commons.math.linear.QRDecomposition : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.QRDecomposition__org.apache.commons.math.linear.RealMatrix_getQ<>>
	CONSUME 
		org.apache.commons.math.linear.QRDecomposition : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.QRDecomposition__org.apache.commons.math.linear.RealMatrix_getQT<>>
	CONSUME 
		org.apache.commons.math.linear.QRDecomposition : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.QRDecomposition__org.apache.commons.math.linear.RealMatrix_getR<>>
	CONSUME 
		org.apache.commons.math.linear.QRDecomposition : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.QRDecompositionImpl$Solver__boolean_isNonSingular<>>
	CONSUME 
		org.apache.commons.math.linear.QRDecompositionImpl$Solver : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <org.apache.commons.math.linear.QRDecompositionImpl$Solver__double[]_solve<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.QRDecompositionImpl$Solver : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.linear.QRDecompositionImpl$Solver__org.apache.commons.math.linear.ArrayRealVector_solve<org.apache.commons.math.linear.ArrayRealVector>>
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1,

		org.apache.commons.math.linear.QRDecompositionImpl$Solver : 1;
	PRODUCE 
		org.apache.commons.math.linear.ArrayRealVector : 1;
TRANSITION <org.apache.commons.math.linear.QRDecompositionImpl$Solver__org.apache.commons.math.linear.RealMatrix_getInverse<>>
	CONSUME 
		org.apache.commons.math.linear.QRDecompositionImpl$Solver : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.QRDecompositionImpl$Solver__org.apache.commons.math.linear.RealMatrix_solve<org.apache.commons.math.linear.RealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1,

		org.apache.commons.math.linear.QRDecompositionImpl$Solver : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.QRDecompositionImpl$Solver__org.apache.commons.math.linear.RealVector_solve<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1,

		org.apache.commons.math.linear.QRDecompositionImpl$Solver : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.QRDecompositionImpl__org.apache.commons.math.linear.DecompositionSolver_getSolver<>>
	CONSUME 
		org.apache.commons.math.linear.QRDecompositionImpl : 1;
	PRODUCE 
		org.apache.commons.math.linear.DecompositionSolver : 1;
TRANSITION <org.apache.commons.math.linear.QRDecompositionImpl__org.apache.commons.math.linear.RealMatrix_getH<>>
	CONSUME 
		org.apache.commons.math.linear.QRDecompositionImpl : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.QRDecompositionImpl__org.apache.commons.math.linear.RealMatrix_getQ<>>
	CONSUME 
		org.apache.commons.math.linear.QRDecompositionImpl : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.QRDecompositionImpl__org.apache.commons.math.linear.RealMatrix_getQT<>>
	CONSUME 
		org.apache.commons.math.linear.QRDecompositionImpl : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.QRDecompositionImpl__org.apache.commons.math.linear.RealMatrix_getR<>>
	CONSUME 
		org.apache.commons.math.linear.QRDecompositionImpl : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.QRDecompositionImpl__void_<init><org.apache.commons.math.linear.RealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.QRDecompositionImpl : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__boolean_isSingular<>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__double_getDeterminant<>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__double_getEntry<int.int>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1,

		int : 2;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__double_getFrobeniusNorm<>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__double_getNorm<>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__double_getTrace<>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__double_walkInColumnOrder<org.apache.commons.math.linear.RealMatrixChangingVisitor>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrixChangingVisitor : 1,

		org.apache.commons.math.linear.RealMatrix : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__double_walkInColumnOrder<org.apache.commons.math.linear.RealMatrixPreservingVisitor>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1,

		org.apache.commons.math.linear.RealMatrixPreservingVisitor : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__double_walkInOptimizedOrder<org.apache.commons.math.linear.RealMatrixChangingVisitor>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrixChangingVisitor : 1,

		org.apache.commons.math.linear.RealMatrix : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__double_walkInOptimizedOrder<org.apache.commons.math.linear.RealMatrixPreservingVisitor>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1,

		org.apache.commons.math.linear.RealMatrixPreservingVisitor : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__double_walkInRowOrder<org.apache.commons.math.linear.RealMatrixChangingVisitor>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrixChangingVisitor : 1,

		org.apache.commons.math.linear.RealMatrix : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__double_walkInRowOrder<org.apache.commons.math.linear.RealMatrixPreservingVisitor>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1,

		org.apache.commons.math.linear.RealMatrixPreservingVisitor : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__double[]_getColumn<int>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1,

		int : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__double[]_getRow<int>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1,

		int : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__double[]_operate<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.RealMatrix : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__double[]_preMultiply<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.RealMatrix : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__double[]_solve<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.RealMatrix : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__double[][]_getData<>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1;
	PRODUCE 
		double[][] : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__org.apache.commons.math.linear.RealMatrix_add<org.apache.commons.math.linear.RealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 2;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__org.apache.commons.math.linear.RealMatrix_copy<>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__org.apache.commons.math.linear.RealMatrix_createMatrix<int.int>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1,

		int : 2;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__org.apache.commons.math.linear.RealMatrix_getColumnMatrix<int>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1,

		int : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__org.apache.commons.math.linear.RealMatrix_getRowMatrix<int>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1,

		int : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__org.apache.commons.math.linear.RealMatrix_getSubMatrix<int.int.int.int>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1,

		int : 4;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__org.apache.commons.math.linear.RealMatrix_getSubMatrix<int[].int[]>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1,

		int[] : 2;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__org.apache.commons.math.linear.RealMatrix_inverse<>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__org.apache.commons.math.linear.RealMatrix_multiply<org.apache.commons.math.linear.RealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 2;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__org.apache.commons.math.linear.RealMatrix_preMultiply<org.apache.commons.math.linear.RealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 2;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__org.apache.commons.math.linear.RealMatrix_scalarAdd<double>>
	CONSUME 
		double : 1,

		org.apache.commons.math.linear.RealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__org.apache.commons.math.linear.RealMatrix_scalarMultiply<double>>
	CONSUME 
		double : 1,

		org.apache.commons.math.linear.RealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__org.apache.commons.math.linear.RealMatrix_solve<org.apache.commons.math.linear.RealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 2;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__org.apache.commons.math.linear.RealMatrix_subtract<org.apache.commons.math.linear.RealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 2;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__org.apache.commons.math.linear.RealMatrix_transpose<>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__org.apache.commons.math.linear.RealVector_getColumnVector<int>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1,

		int : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__org.apache.commons.math.linear.RealVector_getRowVector<int>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1,

		int : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__org.apache.commons.math.linear.RealVector_operate<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1,

		org.apache.commons.math.linear.RealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__org.apache.commons.math.linear.RealVector_preMultiply<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1,

		org.apache.commons.math.linear.RealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__void_addToEntry<int.int.double>>
	CONSUME 
		double : 1,

		org.apache.commons.math.linear.RealMatrix : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__void_copySubMatrix<int[].int[].double[][]>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1,

		double[][] : 1,

		int[] : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__void_multiplyEntry<int.int.double>>
	CONSUME 
		double : 1,

		org.apache.commons.math.linear.RealMatrix : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__void_setColumn<int.double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.RealMatrix : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__void_setColumnMatrix<int.org.apache.commons.math.linear.RealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 2,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__void_setColumnVector<int.org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1,

		org.apache.commons.math.linear.RealMatrix : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__void_setEntry<int.int.double>>
	CONSUME 
		double : 1,

		org.apache.commons.math.linear.RealMatrix : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__void_setRow<int.double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.RealMatrix : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__void_setRowMatrix<int.org.apache.commons.math.linear.RealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 2,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__void_setRowVector<int.org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1,

		org.apache.commons.math.linear.RealMatrix : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrix__void_setSubMatrix<double[][].int.int>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1,

		double[][] : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrixChangingVisitor__double_end<>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrixChangingVisitor : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrixChangingVisitor__double_visit<int.int.double>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrixChangingVisitor : 1,

		double : 1,

		int : 2;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrixImpl__double_getEntry<int.int>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrixImpl : 1,

		int : 2;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrixImpl__double_walkInColumnOrder<org.apache.commons.math.linear.RealMatrixChangingVisitor>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrixChangingVisitor : 1,

		org.apache.commons.math.linear.RealMatrixImpl : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrixImpl__double_walkInColumnOrder<org.apache.commons.math.linear.RealMatrixPreservingVisitor>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrixImpl : 1,

		org.apache.commons.math.linear.RealMatrixPreservingVisitor : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrixImpl__double_walkInRowOrder<org.apache.commons.math.linear.RealMatrixChangingVisitor>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrixChangingVisitor : 1,

		org.apache.commons.math.linear.RealMatrixImpl : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrixImpl__double_walkInRowOrder<org.apache.commons.math.linear.RealMatrixPreservingVisitor>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrixImpl : 1,

		org.apache.commons.math.linear.RealMatrixPreservingVisitor : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrixImpl__double[]_operate<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.RealMatrixImpl : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrixImpl__double[]_preMultiply<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.RealMatrixImpl : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrixImpl__double[][]_getData<>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrixImpl : 1;
	PRODUCE 
		double[][] : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrixImpl__double[][]_getDataRef<>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrixImpl : 1;
	PRODUCE 
		double[][] : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrixImpl__int_getColumnDimension<>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrixImpl : 1;
	PRODUCE 
		int : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrixImpl__int_getRowDimension<>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrixImpl : 1;
	PRODUCE 
		int : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrixImpl__org.apache.commons.math.linear.RealMatrix_add<org.apache.commons.math.linear.RealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrixImpl : 1,

		org.apache.commons.math.linear.RealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrixImpl__org.apache.commons.math.linear.RealMatrix_copy<>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrixImpl : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrixImpl__org.apache.commons.math.linear.RealMatrix_createMatrix<int.int>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrixImpl : 1,

		int : 2;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrixImpl__org.apache.commons.math.linear.RealMatrix_multiply<org.apache.commons.math.linear.RealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrixImpl : 1,

		org.apache.commons.math.linear.RealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrixImpl__org.apache.commons.math.linear.RealMatrix_subtract<org.apache.commons.math.linear.RealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrixImpl : 1,

		org.apache.commons.math.linear.RealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrixImpl__org.apache.commons.math.linear.RealMatrixImpl_add<org.apache.commons.math.linear.RealMatrixImpl>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrixImpl : 2;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrixImpl : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrixImpl__org.apache.commons.math.linear.RealMatrixImpl_multiply<org.apache.commons.math.linear.RealMatrixImpl>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrixImpl : 2;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrixImpl : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrixImpl__org.apache.commons.math.linear.RealMatrixImpl_subtract<org.apache.commons.math.linear.RealMatrixImpl>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrixImpl : 2;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrixImpl : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrixImpl__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrixImpl : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrixImpl__void_<init><double[]>>
	CONSUME 
		double[] : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrixImpl : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrixImpl__void_<init><double[][]>>
	CONSUME 
		double[][] : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrixImpl : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrixImpl__void_<init><double[][].boolean>>
	CONSUME 
		boolean : 1,

		double[][] : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrixImpl : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrixImpl__void_<init><int.int>>
	CONSUME 
		int : 2;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrixImpl : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrixImpl__void_addToEntry<int.int.double>>
	CONSUME 
		double : 1,

		org.apache.commons.math.linear.RealMatrixImpl : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrixImpl__void_multiplyEntry<int.int.double>>
	CONSUME 
		double : 1,

		org.apache.commons.math.linear.RealMatrixImpl : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrixImpl__void_setEntry<int.int.double>>
	CONSUME 
		double : 1,

		org.apache.commons.math.linear.RealMatrixImpl : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrixImpl__void_setSubMatrix<double[][].int.int>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrixImpl : 1,

		double[][] : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrixPreservingVisitor__double_end<>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrixPreservingVisitor : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.RealMatrixPreservingVisitor__void_visit<int.int.double>>
	CONSUME 
		double : 1,

		org.apache.commons.math.linear.RealMatrixPreservingVisitor : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.RealVector$Entry__double_getValue<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector$Entry : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.RealVector$Entry__int_getIndex<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector$Entry : 1;
	PRODUCE 
		int : 1;
TRANSITION <org.apache.commons.math.linear.RealVector$Entry__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector$Entry : 1;
TRANSITION <org.apache.commons.math.linear.RealVector$Entry__void_setIndex<int>>
	CONSUME 
		org.apache.commons.math.linear.RealVector$Entry : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.RealVector$Entry__void_setValue<double>>
	CONSUME 
		double : 1,

		org.apache.commons.math.linear.RealVector$Entry : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__boolean_isInfinite<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__boolean_isNaN<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__double_dotProduct<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__double_dotProduct<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 2;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__double_getDistance<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__double_getDistance<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 2;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__double_getEntry<int>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1,

		int : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__double_getL1Distance<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__double_getL1Distance<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 2;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__double_getL1Norm<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__double_getLInfDistance<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__double_getLInfDistance<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 2;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__double_getLInfNorm<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__double_getNorm<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__double[]_getData<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__double[]_toArray<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__int_getDimension<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		int : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealMatrix_outerProduct<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealMatrix_outerProduct<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 2;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_add<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_add<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 2;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_append<double>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1,

		double : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_append<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_append<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 2;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_copy<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_ebeDivide<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_ebeDivide<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 2;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_ebeMultiply<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_ebeMultiply<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 2;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_getSubVector<int.int>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1,

		int : 2;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_map<org.apache.commons.math.analysis.UnivariateRealFunction>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1,

		org.apache.commons.math.analysis.UnivariateRealFunction : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapAbs<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapAbsToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapAcos<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapAcosToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapAdd<double>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1,

		double : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapAddToSelf<double>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1,

		double : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapAsin<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapAsinToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapAtan<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapAtanToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapCbrt<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapCbrtToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapCeil<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapCeilToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapCos<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapCosToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapCosh<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapCoshToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapDivide<double>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1,

		double : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapDivideToSelf<double>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1,

		double : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapExp<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapExpToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapExpm1<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapExpm1ToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapFloor<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapFloorToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapInv<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapInvToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapLog<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapLog10<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapLog10ToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapLog1p<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapLog1pToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapLogToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapMultiply<double>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1,

		double : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapMultiplyToSelf<double>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1,

		double : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapPow<double>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1,

		double : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapPowToSelf<double>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1,

		double : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapRint<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapRintToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapSignum<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapSignumToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapSin<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapSinToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapSinh<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapSinhToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapSqrt<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapSqrtToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapSubtract<double>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1,

		double : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapSubtractToSelf<double>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1,

		double : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapTan<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapTanToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapTanh<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapTanhToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapToSelf<org.apache.commons.math.analysis.UnivariateRealFunction>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1,

		org.apache.commons.math.analysis.UnivariateRealFunction : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapUlp<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_mapUlpToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_projection<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_projection<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 2;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_subtract<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_subtract<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 2;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__org.apache.commons.math.linear.RealVector_unitVector<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__void_set<double>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1,

		double : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__void_setEntry<int.double>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1,

		double : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__void_setSubVector<int.double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.RealVector : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__void_setSubVector<int.org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 2,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.RealVector__void_unitize<>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.RealVectorFormat__java.lang.Object_parseObject<java.lang.String.java.text.ParsePosition>>
	CONSUME 
		java.text.ParsePosition : 1,

		java.lang.String : 1,

		org.apache.commons.math.linear.RealVectorFormat : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION <org.apache.commons.math.linear.RealVectorFormat__java.lang.String_formatRealVector<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		java.lang.String : 1;
TRANSITION <org.apache.commons.math.linear.RealVectorFormat__java.lang.String_getPrefix<>>
	CONSUME 
		org.apache.commons.math.linear.RealVectorFormat : 1;
	PRODUCE 
		java.lang.String : 1;
TRANSITION <org.apache.commons.math.linear.RealVectorFormat__java.lang.String_getSeparator<>>
	CONSUME 
		org.apache.commons.math.linear.RealVectorFormat : 1;
	PRODUCE 
		java.lang.String : 1;
TRANSITION <org.apache.commons.math.linear.RealVectorFormat__java.lang.String_getSuffix<>>
	CONSUME 
		org.apache.commons.math.linear.RealVectorFormat : 1;
	PRODUCE 
		java.lang.String : 1;
TRANSITION <org.apache.commons.math.linear.RealVectorFormat__java.lang.StringBuffer_format<java.lang.Object.java.lang.StringBuffer.java.text.FieldPosition>>
	CONSUME 
		java.text.FieldPosition : 1,

		java.lang.StringBuffer : 1,

		java.lang.Object : 1,

		org.apache.commons.math.linear.RealVectorFormat : 1;
	PRODUCE 
		java.lang.StringBuffer : 1;
TRANSITION <org.apache.commons.math.linear.RealVectorFormat__java.lang.StringBuffer_format<org.apache.commons.math.linear.RealVector.java.lang.StringBuffer.java.text.FieldPosition>>
	CONSUME 
		java.text.FieldPosition : 1,

		org.apache.commons.math.linear.RealVector : 1,

		java.lang.StringBuffer : 1,

		org.apache.commons.math.linear.RealVectorFormat : 1;
	PRODUCE 
		java.lang.StringBuffer : 1;
TRANSITION <org.apache.commons.math.linear.RealVectorFormat__java.text.NumberFormat_getFormat<>>
	CONSUME 
		org.apache.commons.math.linear.RealVectorFormat : 1;
	PRODUCE 
		java.text.NumberFormat : 1;
TRANSITION <org.apache.commons.math.linear.RealVectorFormat__java.util.Locale[]_getAvailableLocales<>>
	CONSUME 
		void : 1;
	PRODUCE 
		java.util.Locale[] : 1;
TRANSITION <org.apache.commons.math.linear.RealVectorFormat__org.apache.commons.math.linear.ArrayRealVector_parse<java.lang.String>>
	CONSUME 
		java.lang.String : 1,

		org.apache.commons.math.linear.RealVectorFormat : 1;
	PRODUCE 
		org.apache.commons.math.linear.ArrayRealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVectorFormat__org.apache.commons.math.linear.ArrayRealVector_parse<java.lang.String.java.text.ParsePosition>>
	CONSUME 
		java.text.ParsePosition : 1,

		java.lang.String : 1,

		org.apache.commons.math.linear.RealVectorFormat : 1;
	PRODUCE 
		org.apache.commons.math.linear.ArrayRealVector : 1;
TRANSITION <org.apache.commons.math.linear.RealVectorFormat__org.apache.commons.math.linear.RealVectorFormat_getInstance<>>
	CONSUME 
		void : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVectorFormat : 1;
TRANSITION <org.apache.commons.math.linear.RealVectorFormat__org.apache.commons.math.linear.RealVectorFormat_getInstance<java.util.Locale>>
	CONSUME 
		java.util.Locale : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVectorFormat : 1;
TRANSITION <org.apache.commons.math.linear.RealVectorFormat__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVectorFormat : 1;
TRANSITION <org.apache.commons.math.linear.RealVectorFormat__void_<init><java.lang.String.java.lang.String.java.lang.String>>
	CONSUME 
		java.lang.String : 3;
	PRODUCE 
		org.apache.commons.math.linear.RealVectorFormat : 1;
TRANSITION <org.apache.commons.math.linear.RealVectorFormat__void_<init><java.lang.String.java.lang.String.java.lang.String.java.text.NumberFormat>>
	CONSUME 
		java.lang.String : 3,

		java.text.NumberFormat : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVectorFormat : 1;
TRANSITION <org.apache.commons.math.linear.RealVectorFormat__void_<init><java.text.NumberFormat>>
	CONSUME 
		java.text.NumberFormat : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVectorFormat : 1;
TRANSITION <org.apache.commons.math.linear.SingularMatrixException__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		org.apache.commons.math.linear.SingularMatrixException : 1;
TRANSITION <org.apache.commons.math.linear.SingularValueDecomposition__double_getConditionNumber<>>
	CONSUME 
		org.apache.commons.math.linear.SingularValueDecomposition : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.SingularValueDecomposition__double_getNorm<>>
	CONSUME 
		org.apache.commons.math.linear.SingularValueDecomposition : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.SingularValueDecomposition__double[]_getSingularValues<>>
	CONSUME 
		org.apache.commons.math.linear.SingularValueDecomposition : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.linear.SingularValueDecomposition__int_getRank<>>
	CONSUME 
		org.apache.commons.math.linear.SingularValueDecomposition : 1;
	PRODUCE 
		int : 1;
TRANSITION <org.apache.commons.math.linear.SingularValueDecomposition__org.apache.commons.math.linear.DecompositionSolver_getSolver<>>
	CONSUME 
		org.apache.commons.math.linear.SingularValueDecomposition : 1;
	PRODUCE 
		org.apache.commons.math.linear.DecompositionSolver : 1;
TRANSITION <org.apache.commons.math.linear.SingularValueDecomposition__org.apache.commons.math.linear.RealMatrix_getCovariance<double>>
	CONSUME 
		double : 1,

		org.apache.commons.math.linear.SingularValueDecomposition : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.SingularValueDecomposition__org.apache.commons.math.linear.RealMatrix_getS<>>
	CONSUME 
		org.apache.commons.math.linear.SingularValueDecomposition : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.SingularValueDecomposition__org.apache.commons.math.linear.RealMatrix_getU<>>
	CONSUME 
		org.apache.commons.math.linear.SingularValueDecomposition : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.SingularValueDecomposition__org.apache.commons.math.linear.RealMatrix_getUT<>>
	CONSUME 
		org.apache.commons.math.linear.SingularValueDecomposition : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.SingularValueDecomposition__org.apache.commons.math.linear.RealMatrix_getV<>>
	CONSUME 
		org.apache.commons.math.linear.SingularValueDecomposition : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.SingularValueDecomposition__org.apache.commons.math.linear.RealMatrix_getVT<>>
	CONSUME 
		org.apache.commons.math.linear.SingularValueDecomposition : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.SingularValueDecompositionImpl$1__void_visit<int.int.double>>
	CONSUME 
		double : 1,

		org.apache.commons.math.linear.SingularValueDecompositionImpl$1 : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver__boolean_isNonSingular<>>
	CONSUME 
		org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver__double[]_solve<double[]>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver__org.apache.commons.math.linear.RealMatrix_getInverse<>>
	CONSUME 
		org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver__org.apache.commons.math.linear.RealMatrix_solve<org.apache.commons.math.linear.RealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1,

		org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver__org.apache.commons.math.linear.RealVector_solve<org.apache.commons.math.linear.RealVector>>
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1,

		org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 1;
TRANSITION <org.apache.commons.math.linear.SingularValueDecompositionImpl__double_getConditionNumber<>>
	CONSUME 
		org.apache.commons.math.linear.SingularValueDecompositionImpl : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.SingularValueDecompositionImpl__double_getNorm<>>
	CONSUME 
		org.apache.commons.math.linear.SingularValueDecompositionImpl : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.linear.SingularValueDecompositionImpl__double[]_getSingularValues<>>
	CONSUME 
		org.apache.commons.math.linear.SingularValueDecompositionImpl : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.linear.SingularValueDecompositionImpl__int_getRank<>>
	CONSUME 
		org.apache.commons.math.linear.SingularValueDecompositionImpl : 1;
	PRODUCE 
		int : 1;
TRANSITION <org.apache.commons.math.linear.SingularValueDecompositionImpl__org.apache.commons.math.linear.DecompositionSolver_getSolver<>>
	CONSUME 
		org.apache.commons.math.linear.SingularValueDecompositionImpl : 1;
	PRODUCE 
		org.apache.commons.math.linear.DecompositionSolver : 1;
TRANSITION <org.apache.commons.math.linear.SingularValueDecompositionImpl__org.apache.commons.math.linear.RealMatrix_getCovariance<double>>
	CONSUME 
		org.apache.commons.math.linear.SingularValueDecompositionImpl : 1,

		double : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.SingularValueDecompositionImpl__org.apache.commons.math.linear.RealMatrix_getS<>>
	CONSUME 
		org.apache.commons.math.linear.SingularValueDecompositionImpl : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.SingularValueDecompositionImpl__org.apache.commons.math.linear.RealMatrix_getU<>>
	CONSUME 
		org.apache.commons.math.linear.SingularValueDecompositionImpl : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.SingularValueDecompositionImpl__org.apache.commons.math.linear.RealMatrix_getUT<>>
	CONSUME 
		org.apache.commons.math.linear.SingularValueDecompositionImpl : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.SingularValueDecompositionImpl__org.apache.commons.math.linear.RealMatrix_getV<>>
	CONSUME 
		org.apache.commons.math.linear.SingularValueDecompositionImpl : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.SingularValueDecompositionImpl__org.apache.commons.math.linear.RealMatrix_getVT<>>
	CONSUME 
		org.apache.commons.math.linear.SingularValueDecompositionImpl : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.SingularValueDecompositionImpl__void_<init><org.apache.commons.math.linear.RealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.SingularValueDecompositionImpl : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldMatrix__int_getColumnDimension<>>
	CONSUME 
		org.apache.commons.math.linear.SparseFieldMatrix : 1;
	PRODUCE 
		int : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldMatrix__int_getRowDimension<>>
	CONSUME 
		org.apache.commons.math.linear.SparseFieldMatrix : 1;
	PRODUCE 
		int : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldMatrix__org.apache.commons.math.FieldElement_getEntry<int.int>>
	CONSUME 
		org.apache.commons.math.linear.SparseFieldMatrix : 1,

		int : 2;
	PRODUCE 
		org.apache.commons.math.FieldElement : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldMatrix__org.apache.commons.math.linear.FieldMatrix_copy<>>
	CONSUME 
		org.apache.commons.math.linear.SparseFieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldMatrix__org.apache.commons.math.linear.FieldMatrix_createMatrix<int.int>>
	CONSUME 
		org.apache.commons.math.linear.SparseFieldMatrix : 1,

		int : 2;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldMatrix__void_<init><org.apache.commons.math.Field>>
	CONSUME 
		org.apache.commons.math.Field : 1;
	PRODUCE 
		org.apache.commons.math.linear.SparseFieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldMatrix__void_<init><org.apache.commons.math.Field.int.int>>
	CONSUME 
		org.apache.commons.math.Field : 1,

		int : 2;
	PRODUCE 
		org.apache.commons.math.linear.SparseFieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldMatrix__void_<init><org.apache.commons.math.linear.FieldMatrix>>
	CONSUME 
		org.apache.commons.math.linear.FieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.SparseFieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldMatrix__void_<init><org.apache.commons.math.linear.SparseFieldMatrix>>
	CONSUME 
		org.apache.commons.math.linear.SparseFieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.SparseFieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldMatrix__void_addToEntry<int.int.org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.FieldElement : 1,

		org.apache.commons.math.linear.SparseFieldMatrix : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldMatrix__void_multiplyEntry<int.int.org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.FieldElement : 1,

		org.apache.commons.math.linear.SparseFieldMatrix : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldMatrix__void_setEntry<int.int.org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.FieldElement : 1,

		org.apache.commons.math.linear.SparseFieldMatrix : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__boolean_equals<java.lang.Object>>
	CONSUME 
		org.apache.commons.math.linear.SparseFieldVector : 1,

		java.lang.Object : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__int_getDimension<>>
	CONSUME 
		org.apache.commons.math.linear.SparseFieldVector : 1;
	PRODUCE 
		int : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__org.apache.commons.math.Field_getField<>>
	CONSUME 
		org.apache.commons.math.linear.SparseFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.Field : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__org.apache.commons.math.FieldElement_dotProduct<org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1,

		org.apache.commons.math.linear.SparseFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__org.apache.commons.math.FieldElement_dotProduct<org.apache.commons.math.linear.FieldVector>>
	CONSUME 
		org.apache.commons.math.linear.FieldVector : 1,

		org.apache.commons.math.linear.SparseFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__org.apache.commons.math.FieldElement_getEntry<int>>
	CONSUME 
		org.apache.commons.math.linear.SparseFieldVector : 1,

		int : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__org.apache.commons.math.FieldElement[]_getData<>>
	CONSUME 
		org.apache.commons.math.linear.SparseFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement[] : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__org.apache.commons.math.FieldElement[]_toArray<>>
	CONSUME 
		org.apache.commons.math.linear.SparseFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement[] : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__org.apache.commons.math.linear.FieldMatrix_outerProduct<org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1,

		org.apache.commons.math.linear.SparseFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__org.apache.commons.math.linear.FieldMatrix_outerProduct<org.apache.commons.math.linear.FieldVector>>
	CONSUME 
		org.apache.commons.math.linear.FieldVector : 1,

		org.apache.commons.math.linear.SparseFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__org.apache.commons.math.linear.FieldMatrix_outerProduct<org.apache.commons.math.linear.SparseFieldVector>>
	CONSUME 
		org.apache.commons.math.linear.SparseFieldVector : 2;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__org.apache.commons.math.linear.FieldVector_add<org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1,

		org.apache.commons.math.linear.SparseFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__org.apache.commons.math.linear.FieldVector_add<org.apache.commons.math.linear.FieldVector>>
	CONSUME 
		org.apache.commons.math.linear.FieldVector : 1,

		org.apache.commons.math.linear.SparseFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__org.apache.commons.math.linear.FieldVector_add<org.apache.commons.math.linear.SparseFieldVector>>
	CONSUME 
		org.apache.commons.math.linear.SparseFieldVector : 2;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__org.apache.commons.math.linear.FieldVector_append<org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.FieldElement : 1,

		org.apache.commons.math.linear.SparseFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__org.apache.commons.math.linear.FieldVector_append<org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1,

		org.apache.commons.math.linear.SparseFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__org.apache.commons.math.linear.FieldVector_append<org.apache.commons.math.linear.FieldVector>>
	CONSUME 
		org.apache.commons.math.linear.FieldVector : 1,

		org.apache.commons.math.linear.SparseFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__org.apache.commons.math.linear.FieldVector_append<org.apache.commons.math.linear.SparseFieldVector>>
	CONSUME 
		org.apache.commons.math.linear.SparseFieldVector : 2;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__org.apache.commons.math.linear.FieldVector_copy<>>
	CONSUME 
		org.apache.commons.math.linear.SparseFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__org.apache.commons.math.linear.FieldVector_ebeDivide<org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1,

		org.apache.commons.math.linear.SparseFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__org.apache.commons.math.linear.FieldVector_ebeDivide<org.apache.commons.math.linear.FieldVector>>
	CONSUME 
		org.apache.commons.math.linear.FieldVector : 1,

		org.apache.commons.math.linear.SparseFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__org.apache.commons.math.linear.FieldVector_ebeMultiply<org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1,

		org.apache.commons.math.linear.SparseFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__org.apache.commons.math.linear.FieldVector_ebeMultiply<org.apache.commons.math.linear.FieldVector>>
	CONSUME 
		org.apache.commons.math.linear.FieldVector : 1,

		org.apache.commons.math.linear.SparseFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__org.apache.commons.math.linear.FieldVector_getSubVector<int.int>>
	CONSUME 
		org.apache.commons.math.linear.SparseFieldVector : 1,

		int : 2;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__org.apache.commons.math.linear.FieldVector_mapAdd<org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.FieldElement : 1,

		org.apache.commons.math.linear.SparseFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__org.apache.commons.math.linear.FieldVector_mapAddToSelf<org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.FieldElement : 1,

		org.apache.commons.math.linear.SparseFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__org.apache.commons.math.linear.FieldVector_mapDivide<org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.FieldElement : 1,

		org.apache.commons.math.linear.SparseFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__org.apache.commons.math.linear.FieldVector_mapDivideToSelf<org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.FieldElement : 1,

		org.apache.commons.math.linear.SparseFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__org.apache.commons.math.linear.FieldVector_mapInv<>>
	CONSUME 
		org.apache.commons.math.linear.SparseFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__org.apache.commons.math.linear.FieldVector_mapInvToSelf<>>
	CONSUME 
		org.apache.commons.math.linear.SparseFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__org.apache.commons.math.linear.FieldVector_mapMultiply<org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.FieldElement : 1,

		org.apache.commons.math.linear.SparseFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__org.apache.commons.math.linear.FieldVector_mapMultiplyToSelf<org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.FieldElement : 1,

		org.apache.commons.math.linear.SparseFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__org.apache.commons.math.linear.FieldVector_mapSubtract<org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.FieldElement : 1,

		org.apache.commons.math.linear.SparseFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__org.apache.commons.math.linear.FieldVector_mapSubtractToSelf<org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.FieldElement : 1,

		org.apache.commons.math.linear.SparseFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__org.apache.commons.math.linear.FieldVector_projection<org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1,

		org.apache.commons.math.linear.SparseFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__org.apache.commons.math.linear.FieldVector_projection<org.apache.commons.math.linear.FieldVector>>
	CONSUME 
		org.apache.commons.math.linear.FieldVector : 1,

		org.apache.commons.math.linear.SparseFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__org.apache.commons.math.linear.FieldVector_subtract<org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1,

		org.apache.commons.math.linear.SparseFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__org.apache.commons.math.linear.FieldVector_subtract<org.apache.commons.math.linear.FieldVector>>
	CONSUME 
		org.apache.commons.math.linear.FieldVector : 1,

		org.apache.commons.math.linear.SparseFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__org.apache.commons.math.linear.SparseFieldVector_subtract<org.apache.commons.math.linear.SparseFieldVector>>
	CONSUME 
		org.apache.commons.math.linear.SparseFieldVector : 2;
	PRODUCE 
		org.apache.commons.math.linear.SparseFieldVector : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__void_<init><org.apache.commons.math.Field>>
	CONSUME 
		org.apache.commons.math.Field : 1;
	PRODUCE 
		org.apache.commons.math.linear.SparseFieldVector : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__void_<init><org.apache.commons.math.Field.int>>
	CONSUME 
		org.apache.commons.math.Field : 1,

		int : 1;
	PRODUCE 
		org.apache.commons.math.linear.SparseFieldVector : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__void_<init><org.apache.commons.math.Field.int.int>>
	CONSUME 
		org.apache.commons.math.Field : 1,

		int : 2;
	PRODUCE 
		org.apache.commons.math.linear.SparseFieldVector : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__void_<init><org.apache.commons.math.Field.org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.Field : 1,

		org.apache.commons.math.FieldElement[] : 1;
	PRODUCE 
		org.apache.commons.math.linear.SparseFieldVector : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__void_<init><org.apache.commons.math.linear.SparseFieldVector>>
	CONSUME 
		org.apache.commons.math.linear.SparseFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.SparseFieldVector : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__void_set<org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.FieldElement : 1,

		org.apache.commons.math.linear.SparseFieldVector : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__void_setEntry<int.org.apache.commons.math.FieldElement>>
	CONSUME 
		org.apache.commons.math.FieldElement : 1,

		org.apache.commons.math.linear.SparseFieldVector : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__void_setSubVector<int.org.apache.commons.math.FieldElement[]>>
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1,

		org.apache.commons.math.linear.SparseFieldVector : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.SparseFieldVector__void_setSubVector<int.org.apache.commons.math.linear.FieldVector>>
	CONSUME 
		org.apache.commons.math.linear.FieldVector : 1,

		org.apache.commons.math.linear.SparseFieldVector : 1,

		int : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.linear.TriDiagonalTransformer__org.apache.commons.math.linear.RealMatrix_getQ<>>
	CONSUME 
		org.apache.commons.math.linear.TriDiagonalTransformer : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.TriDiagonalTransformer__org.apache.commons.math.linear.RealMatrix_getQT<>>
	CONSUME 
		org.apache.commons.math.linear.TriDiagonalTransformer : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.TriDiagonalTransformer__org.apache.commons.math.linear.RealMatrix_getT<>>
	CONSUME 
		org.apache.commons.math.linear.TriDiagonalTransformer : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.linear.TriDiagonalTransformer__void_<init><org.apache.commons.math.linear.RealMatrix>>
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.TriDiagonalTransformer : 1;
TRANSITION <org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression__boolean_isNoIntercept<>>
	CONSUME 
		org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression : 1;
	PRODUCE 
		boolean : 1;
TRANSITION <org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression__double_estimateErrorVariance<>>
	CONSUME 
		org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression__double_estimateRegressandVariance<>>
	CONSUME 
		org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression__double_estimateRegressionStandardError<>>
	CONSUME 
		org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression__double[]_estimateRegressionParameters<>>
	CONSUME 
		org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression__double[]_estimateRegressionParametersStandardErrors<>>
	CONSUME 
		org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression__double[]_estimateResiduals<>>
	CONSUME 
		org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression__double[][]_estimateRegressionParametersVariance<>>
	CONSUME 
		org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression : 1;
	PRODUCE 
		double[][] : 1;
TRANSITION <org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression : 1;
TRANSITION <org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression__void_newSampleData<double[].int.int>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression__void_setNoIntercept<boolean>>
	CONSUME 
		boolean : 1,

		org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.stat.regression.GLSMultipleLinearRegression__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		org.apache.commons.math.stat.regression.GLSMultipleLinearRegression : 1;
TRANSITION <org.apache.commons.math.stat.regression.GLSMultipleLinearRegression__void_newSampleData<double[].double[][].double[][]>>
	CONSUME 
		double[] : 1,

		double[][] : 2,

		org.apache.commons.math.stat.regression.GLSMultipleLinearRegression : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.stat.regression.MultipleLinearRegression__double_estimateRegressandVariance<>>
	CONSUME 
		org.apache.commons.math.stat.regression.MultipleLinearRegression : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.stat.regression.MultipleLinearRegression__double[]_estimateRegressionParameters<>>
	CONSUME 
		org.apache.commons.math.stat.regression.MultipleLinearRegression : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.stat.regression.MultipleLinearRegression__double[]_estimateRegressionParametersStandardErrors<>>
	CONSUME 
		org.apache.commons.math.stat.regression.MultipleLinearRegression : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.stat.regression.MultipleLinearRegression__double[]_estimateResiduals<>>
	CONSUME 
		org.apache.commons.math.stat.regression.MultipleLinearRegression : 1;
	PRODUCE 
		double[] : 1;
TRANSITION <org.apache.commons.math.stat.regression.MultipleLinearRegression__double[][]_estimateRegressionParametersVariance<>>
	CONSUME 
		org.apache.commons.math.stat.regression.MultipleLinearRegression : 1;
	PRODUCE 
		double[][] : 1;
TRANSITION <org.apache.commons.math.stat.regression.OLSMultipleLinearRegression__double_calculateAdjustedRSquared<>>
	CONSUME 
		org.apache.commons.math.stat.regression.OLSMultipleLinearRegression : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.stat.regression.OLSMultipleLinearRegression__double_calculateRSquared<>>
	CONSUME 
		org.apache.commons.math.stat.regression.OLSMultipleLinearRegression : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.stat.regression.OLSMultipleLinearRegression__double_calculateResidualSumOfSquares<>>
	CONSUME 
		org.apache.commons.math.stat.regression.OLSMultipleLinearRegression : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.stat.regression.OLSMultipleLinearRegression__double_calculateTotalSumOfSquares<>>
	CONSUME 
		org.apache.commons.math.stat.regression.OLSMultipleLinearRegression : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.stat.regression.OLSMultipleLinearRegression__org.apache.commons.math.linear.RealMatrix_calculateHat<>>
	CONSUME 
		org.apache.commons.math.stat.regression.OLSMultipleLinearRegression : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 1;
TRANSITION <org.apache.commons.math.stat.regression.OLSMultipleLinearRegression__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		org.apache.commons.math.stat.regression.OLSMultipleLinearRegression : 1;
TRANSITION <org.apache.commons.math.stat.regression.OLSMultipleLinearRegression__void_newSampleData<double[].double[][]>>
	CONSUME 
		double[] : 1,

		double[][] : 1,

		org.apache.commons.math.stat.regression.OLSMultipleLinearRegression : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.stat.regression.OLSMultipleLinearRegression__void_newSampleData<double[].int.int>>
	CONSUME 
		double[] : 1,

		org.apache.commons.math.stat.regression.OLSMultipleLinearRegression : 1,

		int : 2;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.stat.regression.SimpleRegression__double_getIntercept<>>
	CONSUME 
		org.apache.commons.math.stat.regression.SimpleRegression : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.stat.regression.SimpleRegression__double_getInterceptStdErr<>>
	CONSUME 
		org.apache.commons.math.stat.regression.SimpleRegression : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.stat.regression.SimpleRegression__double_getMeanSquareError<>>
	CONSUME 
		org.apache.commons.math.stat.regression.SimpleRegression : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.stat.regression.SimpleRegression__double_getR<>>
	CONSUME 
		org.apache.commons.math.stat.regression.SimpleRegression : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.stat.regression.SimpleRegression__double_getRSquare<>>
	CONSUME 
		org.apache.commons.math.stat.regression.SimpleRegression : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.stat.regression.SimpleRegression__double_getRegressionSumSquares<>>
	CONSUME 
		org.apache.commons.math.stat.regression.SimpleRegression : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.stat.regression.SimpleRegression__double_getSignificance<>>
	CONSUME 
		org.apache.commons.math.stat.regression.SimpleRegression : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.stat.regression.SimpleRegression__double_getSlope<>>
	CONSUME 
		org.apache.commons.math.stat.regression.SimpleRegression : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.stat.regression.SimpleRegression__double_getSlopeConfidenceInterval<>>
	CONSUME 
		org.apache.commons.math.stat.regression.SimpleRegression : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.stat.regression.SimpleRegression__double_getSlopeConfidenceInterval<double>>
	CONSUME 
		double : 1,

		org.apache.commons.math.stat.regression.SimpleRegression : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.stat.regression.SimpleRegression__double_getSlopeStdErr<>>
	CONSUME 
		org.apache.commons.math.stat.regression.SimpleRegression : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.stat.regression.SimpleRegression__double_getSumOfCrossProducts<>>
	CONSUME 
		org.apache.commons.math.stat.regression.SimpleRegression : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.stat.regression.SimpleRegression__double_getSumSquaredErrors<>>
	CONSUME 
		org.apache.commons.math.stat.regression.SimpleRegression : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.stat.regression.SimpleRegression__double_getTotalSumSquares<>>
	CONSUME 
		org.apache.commons.math.stat.regression.SimpleRegression : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.stat.regression.SimpleRegression__double_getXSumSquares<>>
	CONSUME 
		org.apache.commons.math.stat.regression.SimpleRegression : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.stat.regression.SimpleRegression__double_predict<double>>
	CONSUME 
		double : 1,

		org.apache.commons.math.stat.regression.SimpleRegression : 1;
	PRODUCE 
		double : 1;
TRANSITION <org.apache.commons.math.stat.regression.SimpleRegression__long_getN<>>
	CONSUME 
		org.apache.commons.math.stat.regression.SimpleRegression : 1;
	PRODUCE 
		long : 1;
TRANSITION <org.apache.commons.math.stat.regression.SimpleRegression__void_<init><>>
	CONSUME 
		void : 1;
	PRODUCE 
		org.apache.commons.math.stat.regression.SimpleRegression : 1;
TRANSITION <org.apache.commons.math.stat.regression.SimpleRegression__void_<init><int>>
	CONSUME 
		int : 1;
	PRODUCE 
		org.apache.commons.math.stat.regression.SimpleRegression : 1;
TRANSITION <org.apache.commons.math.stat.regression.SimpleRegression__void_<init><org.apache.commons.math.distribution.TDistribution>>
	CONSUME 
		org.apache.commons.math.distribution.TDistribution : 1;
	PRODUCE 
		org.apache.commons.math.stat.regression.SimpleRegression : 1;
TRANSITION <org.apache.commons.math.stat.regression.SimpleRegression__void_addData<double.double>>
	CONSUME 
		double : 2,

		org.apache.commons.math.stat.regression.SimpleRegression : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.stat.regression.SimpleRegression__void_addData<double[][]>>
	CONSUME 
		org.apache.commons.math.stat.regression.SimpleRegression : 1,

		double[][] : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.stat.regression.SimpleRegression__void_clear<>>
	CONSUME 
		org.apache.commons.math.stat.regression.SimpleRegression : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.stat.regression.SimpleRegression__void_removeData<double.double>>
	CONSUME 
		double : 2,

		org.apache.commons.math.stat.regression.SimpleRegression : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.stat.regression.SimpleRegression__void_removeData<double[][]>>
	CONSUME 
		org.apache.commons.math.stat.regression.SimpleRegression : 1,

		double[][] : 1;
	PRODUCE 
		void : 1;
TRANSITION <org.apache.commons.math.stat.regression.SimpleRegression__void_setDistribution<org.apache.commons.math.distribution.TDistribution>>
	CONSUME 
		org.apache.commons.math.distribution.TDistribution : 1,

		org.apache.commons.math.stat.regression.SimpleRegression : 1;
	PRODUCE 
		void : 1;
TRANSITION _upper0
	CONSUME 
		java.awt.geom.Ellipse2D : 1;
	PRODUCE 
		java.awt.Shape : 1;
TRANSITION _upper1
	CONSUME 
		java.awt.geom.Rectangle2D : 1;
	PRODUCE 
		java.awt.Shape : 1;
TRANSITION _upper10
	CONSUME 
		org.apache.commons.math.linear.SingularValueDecompositionImpl : 1;
	PRODUCE 
		org.apache.commons.math.linear.SingularValueDecomposition : 1;
TRANSITION _upper2
	CONSUME 
		org.joda.time.LocalDate : 1;
	PRODUCE 
		org.joda.time.ReadablePartial : 1;
TRANSITION _upper3
	CONSUME 
		org.joda.time.DateTime : 1;
	PRODUCE 
		org.joda.time.ReadableInstant : 1;
TRANSITION _upper4
	CONSUME 
		org.w3c.dom.Element : 1;
	PRODUCE 
		org.w3c.dom.Node : 1;
TRANSITION _upper5
	CONSUME 
		org.jsoup.nodes.Document : 1;
	PRODUCE 
		org.jsoup.nodes.Element : 1;
TRANSITION _upper6
	CONSUME 
		java.io.StringReader : 1;
	PRODUCE 
		java.io.Reader : 1;
TRANSITION _upper7
	CONSUME 
		org.joda.time.DateTime : 1;
	PRODUCE 
		org.joda.time.base.AbstractDateTime : 1;
TRANSITION _upper8
	CONSUME 
		org.w3c.dom.Document : 1;
	PRODUCE 
		java.lang.Object : 1;
TRANSITION _upper9
	CONSUME 
		org.joda.time.DateTime$Property : 1;
	PRODUCE 
		org.joda.time.field.AbstractReadableInstantFieldProperty : 1;
TRANSITION sypet_clone_boolean
	CONSUME 
		boolean : 1;
	PRODUCE 
		boolean : 2;
TRANSITION sypet_clone_cern.colt.matrix.DoubleMatrix2D
	CONSUME 
		cern.colt.matrix.DoubleMatrix2D : 1;
	PRODUCE 
		cern.colt.matrix.DoubleMatrix2D : 2;
TRANSITION sypet_clone_cern.colt.matrix.linalg.SingularValueDecomposition
	CONSUME 
		cern.colt.matrix.linalg.SingularValueDecomposition : 1;
	PRODUCE 
		cern.colt.matrix.linalg.SingularValueDecomposition : 2;
TRANSITION sypet_clone_cern.jet.random.engine.RandomEngine
	CONSUME 
		cern.jet.random.engine.RandomEngine : 1;
	PRODUCE 
		cern.jet.random.engine.RandomEngine : 2;
TRANSITION sypet_clone_com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction
	CONSUME 
		com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction : 1;
	PRODUCE 
		com.opengamma.analytics.financial.model.volatility.smile.fitting.interpolation.WeightingFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.Axis
	CONSUME 
		com.opengamma.analytics.math.Axis : 1;
	PRODUCE 
		com.opengamma.analytics.math.Axis : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.Axis[]
	CONSUME 
		com.opengamma.analytics.math.Axis[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.Axis[] : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.ComplexMathUtils
	CONSUME 
		com.opengamma.analytics.math.ComplexMathUtils : 1;
	PRODUCE 
		com.opengamma.analytics.math.ComplexMathUtils : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.MathException
	CONSUME 
		com.opengamma.analytics.math.MathException : 1;
	PRODUCE 
		com.opengamma.analytics.math.MathException : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.Plane
	CONSUME 
		com.opengamma.analytics.math.Plane : 1;
	PRODUCE 
		com.opengamma.analytics.math.Plane : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.Plane[]
	CONSUME 
		com.opengamma.analytics.math.Plane[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.Plane[] : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.TrigonometricFunctionUtils
	CONSUME 
		com.opengamma.analytics.math.TrigonometricFunctionUtils : 1;
	PRODUCE 
		com.opengamma.analytics.math.TrigonometricFunctionUtils : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.cube.ConstantCubeAdditiveShiftFunction
	CONSUME 
		com.opengamma.analytics.math.cube.ConstantCubeAdditiveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.ConstantCubeAdditiveShiftFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.cube.ConstantCubeMultiplicativeShiftFunction
	CONSUME 
		com.opengamma.analytics.math.cube.ConstantCubeMultiplicativeShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.ConstantCubeMultiplicativeShiftFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.cube.ConstantDoublesCube
	CONSUME 
		com.opengamma.analytics.math.cube.ConstantDoublesCube : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.ConstantDoublesCube : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.cube.Cube
	CONSUME 
		com.opengamma.analytics.math.cube.Cube : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.Cube : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.cube.CubeShiftFunction
	CONSUME 
		com.opengamma.analytics.math.cube.CubeShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.CubeShiftFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.cube.CubeShiftFunctionFactory
	CONSUME 
		com.opengamma.analytics.math.cube.CubeShiftFunctionFactory : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.CubeShiftFunctionFactory : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.cube.CubeSliceFunction
	CONSUME 
		com.opengamma.analytics.math.cube.CubeSliceFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.CubeSliceFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.cube.DoublesCube
	CONSUME 
		com.opengamma.analytics.math.cube.DoublesCube : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.DoublesCube : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.cube.FunctionalCubeAdditiveShiftFunction
	CONSUME 
		com.opengamma.analytics.math.cube.FunctionalCubeAdditiveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.FunctionalCubeAdditiveShiftFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.cube.FunctionalCubeAdditiveShiftFunction$1
	CONSUME 
		com.opengamma.analytics.math.cube.FunctionalCubeAdditiveShiftFunction$1 : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.FunctionalCubeAdditiveShiftFunction$1 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.cube.FunctionalCubeMultiplicativeShiftFunction
	CONSUME 
		com.opengamma.analytics.math.cube.FunctionalCubeMultiplicativeShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.FunctionalCubeMultiplicativeShiftFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.cube.FunctionalCubeMultiplicativeShiftFunction$1
	CONSUME 
		com.opengamma.analytics.math.cube.FunctionalCubeMultiplicativeShiftFunction$1 : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.FunctionalCubeMultiplicativeShiftFunction$1 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.cube.FunctionalDoublesCube
	CONSUME 
		com.opengamma.analytics.math.cube.FunctionalDoublesCube : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.FunctionalDoublesCube : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction
	CONSUME 
		com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.InterpolatedCubeAdditiveShiftFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.cube.InterpolatedCubeMultiplicativeShiftFunction
	CONSUME 
		com.opengamma.analytics.math.cube.InterpolatedCubeMultiplicativeShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.InterpolatedCubeMultiplicativeShiftFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.cube.InterpolatedDoublesCube
	CONSUME 
		com.opengamma.analytics.math.cube.InterpolatedDoublesCube : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.InterpolatedDoublesCube : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction
	CONSUME 
		com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.InterpolatedFromSurfacesCubeAdditiveShiftFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube
	CONSUME 
		com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.InterpolatedFromSurfacesDoublesCube : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.cube.NodalCube
	CONSUME 
		com.opengamma.analytics.math.cube.NodalCube : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.NodalCube : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.cube.NodalCubeAdditiveShiftFunction
	CONSUME 
		com.opengamma.analytics.math.cube.NodalCubeAdditiveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.NodalCubeAdditiveShiftFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.cube.NodalCubeMultiplicativeShiftFunction
	CONSUME 
		com.opengamma.analytics.math.cube.NodalCubeMultiplicativeShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.NodalCubeMultiplicativeShiftFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.cube.NodalDoublesCube
	CONSUME 
		com.opengamma.analytics.math.cube.NodalDoublesCube : 1;
	PRODUCE 
		com.opengamma.analytics.math.cube.NodalDoublesCube : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.curve.AddCurveSpreadFunction
	CONSUME 
		com.opengamma.analytics.math.curve.AddCurveSpreadFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.AddCurveSpreadFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.curve.AddCurveSpreadFunction$1
	CONSUME 
		com.opengamma.analytics.math.curve.AddCurveSpreadFunction$1 : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.AddCurveSpreadFunction$1 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.curve.ArraysDoublesCurve
	CONSUME 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.curve.ArraysDoublesCurve$Meta
	CONSUME 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve$Meta : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ArraysDoublesCurve$Meta : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.curve.ConstantCurveShiftFunction
	CONSUME 
		com.opengamma.analytics.math.curve.ConstantCurveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ConstantCurveShiftFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.curve.ConstantDoublesCurve
	CONSUME 
		com.opengamma.analytics.math.curve.ConstantDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ConstantDoublesCurve : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.curve.ConstantDoublesCurve$Meta
	CONSUME 
		com.opengamma.analytics.math.curve.ConstantDoublesCurve$Meta : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ConstantDoublesCurve$Meta : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.curve.Curve
	CONSUME 
		com.opengamma.analytics.math.curve.Curve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.curve.Curve$1
	CONSUME 
		com.opengamma.analytics.math.curve.Curve$1 : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve$1 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.curve.Curve$Meta
	CONSUME 
		com.opengamma.analytics.math.curve.Curve$Meta : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve$Meta : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.curve.CurveShiftFunction
	CONSUME 
		com.opengamma.analytics.math.curve.CurveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.CurveShiftFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.curve.CurveShiftFunctionFactory
	CONSUME 
		com.opengamma.analytics.math.curve.CurveShiftFunctionFactory : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.CurveShiftFunctionFactory : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.curve.CurveSpreadFunction
	CONSUME 
		com.opengamma.analytics.math.curve.CurveSpreadFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.CurveSpreadFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.curve.Curve[]
	CONSUME 
		com.opengamma.analytics.math.curve.Curve[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.Curve[] : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.curve.DivideCurveSpreadFunction
	CONSUME 
		com.opengamma.analytics.math.curve.DivideCurveSpreadFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.DivideCurveSpreadFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.curve.DivideCurveSpreadFunction$1
	CONSUME 
		com.opengamma.analytics.math.curve.DivideCurveSpreadFunction$1 : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.DivideCurveSpreadFunction$1 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.curve.DoublesCurve
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.DoublesCurve : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.curve.DoublesCurve$Meta
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurve$Meta : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.DoublesCurve$Meta : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor$Meta
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor$Meta : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.DoublesCurveInterpolatedAnchor$Meta : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel$Meta
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel$Meta : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.DoublesCurveNelsonSiegel$Meta : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.curve.DoublesCurve[]
	CONSUME 
		com.opengamma.analytics.math.curve.DoublesCurve[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.DoublesCurve[] : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction
	CONSUME 
		com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction$1
	CONSUME 
		com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction$1 : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.FunctionalCurveShiftFunction$1 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.curve.FunctionalDoublesCurve
	CONSUME 
		com.opengamma.analytics.math.curve.FunctionalDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.FunctionalDoublesCurve : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.curve.FunctionalDoublesCurve$Meta
	CONSUME 
		com.opengamma.analytics.math.curve.FunctionalDoublesCurve$Meta : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.FunctionalDoublesCurve$Meta : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.curve.InterpolatedCurveBuildingFunction
	CONSUME 
		com.opengamma.analytics.math.curve.InterpolatedCurveBuildingFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedCurveBuildingFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction
	CONSUME 
		com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedCurveShiftFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.curve.InterpolatedDoublesCurve
	CONSUME 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.curve.InterpolatedDoublesCurve$Meta
	CONSUME 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve$Meta : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.InterpolatedDoublesCurve$Meta : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.curve.MultiplyCurveSpreadFunction
	CONSUME 
		com.opengamma.analytics.math.curve.MultiplyCurveSpreadFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.MultiplyCurveSpreadFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.curve.MultiplyCurveSpreadFunction$1
	CONSUME 
		com.opengamma.analytics.math.curve.MultiplyCurveSpreadFunction$1 : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.MultiplyCurveSpreadFunction$1 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.curve.NodalDoublesCurve
	CONSUME 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalDoublesCurve : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.curve.NodalDoublesCurve$Meta
	CONSUME 
		com.opengamma.analytics.math.curve.NodalDoublesCurve$Meta : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalDoublesCurve$Meta : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.curve.NodalObjectsCurve
	CONSUME 
		com.opengamma.analytics.math.curve.NodalObjectsCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalObjectsCurve : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.curve.NodalObjectsCurve$Meta
	CONSUME 
		com.opengamma.analytics.math.curve.NodalObjectsCurve$Meta : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalObjectsCurve$Meta : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.curve.NodalTenorDoubleCurve
	CONSUME 
		com.opengamma.analytics.math.curve.NodalTenorDoubleCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalTenorDoubleCurve : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.curve.NodalTenorDoubleCurve$Meta
	CONSUME 
		com.opengamma.analytics.math.curve.NodalTenorDoubleCurve$Meta : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.NodalTenorDoubleCurve$Meta : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.curve.ObjectsCurve
	CONSUME 
		com.opengamma.analytics.math.curve.ObjectsCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ObjectsCurve : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.curve.ObjectsCurve$Meta
	CONSUME 
		com.opengamma.analytics.math.curve.ObjectsCurve$Meta : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.ObjectsCurve$Meta : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.curve.SpreadCurveShiftFunction
	CONSUME 
		com.opengamma.analytics.math.curve.SpreadCurveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.SpreadCurveShiftFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.curve.SpreadDoublesCurve
	CONSUME 
		com.opengamma.analytics.math.curve.SpreadDoublesCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.SpreadDoublesCurve : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.curve.SpreadDoublesCurve$Meta
	CONSUME 
		com.opengamma.analytics.math.curve.SpreadDoublesCurve$Meta : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.SpreadDoublesCurve$Meta : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.curve.SubtractCurveSpreadFunction
	CONSUME 
		com.opengamma.analytics.math.curve.SubtractCurveSpreadFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.SubtractCurveSpreadFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.curve.SubtractCurveSpreadFunction$1
	CONSUME 
		com.opengamma.analytics.math.curve.SubtractCurveSpreadFunction$1 : 1;
	PRODUCE 
		com.opengamma.analytics.math.curve.SubtractCurveSpreadFunction$1 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.differentiation.Differentiator
	CONSUME 
		com.opengamma.analytics.math.differentiation.Differentiator : 1;
	PRODUCE 
		com.opengamma.analytics.math.differentiation.Differentiator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.differentiation.FiniteDifferenceType
	CONSUME 
		com.opengamma.analytics.math.differentiation.FiniteDifferenceType : 1;
	PRODUCE 
		com.opengamma.analytics.math.differentiation.FiniteDifferenceType : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.differentiation.FiniteDifferenceType[]
	CONSUME 
		com.opengamma.analytics.math.differentiation.FiniteDifferenceType[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.differentiation.FiniteDifferenceType[] : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.differentiation.MatrixFieldFirstOrderDifferentiator
	CONSUME 
		com.opengamma.analytics.math.differentiation.MatrixFieldFirstOrderDifferentiator : 1;
	PRODUCE 
		com.opengamma.analytics.math.differentiation.MatrixFieldFirstOrderDifferentiator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.differentiation.MatrixFieldFirstOrderDifferentiator$1
	CONSUME 
		com.opengamma.analytics.math.differentiation.MatrixFieldFirstOrderDifferentiator$1 : 1;
	PRODUCE 
		com.opengamma.analytics.math.differentiation.MatrixFieldFirstOrderDifferentiator$1 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.differentiation.MatrixFieldFirstOrderDifferentiator$2
	CONSUME 
		com.opengamma.analytics.math.differentiation.MatrixFieldFirstOrderDifferentiator$2 : 1;
	PRODUCE 
		com.opengamma.analytics.math.differentiation.MatrixFieldFirstOrderDifferentiator$2 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.differentiation.ScalarFieldFirstOrderDifferentiator
	CONSUME 
		com.opengamma.analytics.math.differentiation.ScalarFieldFirstOrderDifferentiator : 1;
	PRODUCE 
		com.opengamma.analytics.math.differentiation.ScalarFieldFirstOrderDifferentiator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.differentiation.ScalarFieldFirstOrderDifferentiator$1
	CONSUME 
		com.opengamma.analytics.math.differentiation.ScalarFieldFirstOrderDifferentiator$1 : 1;
	PRODUCE 
		com.opengamma.analytics.math.differentiation.ScalarFieldFirstOrderDifferentiator$1 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.differentiation.ScalarFieldFirstOrderDifferentiator$2
	CONSUME 
		com.opengamma.analytics.math.differentiation.ScalarFieldFirstOrderDifferentiator$2 : 1;
	PRODUCE 
		com.opengamma.analytics.math.differentiation.ScalarFieldFirstOrderDifferentiator$2 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.differentiation.ScalarFieldFirstOrderDifferentiator$3
	CONSUME 
		com.opengamma.analytics.math.differentiation.ScalarFieldFirstOrderDifferentiator$3 : 1;
	PRODUCE 
		com.opengamma.analytics.math.differentiation.ScalarFieldFirstOrderDifferentiator$3 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.differentiation.ScalarFieldFirstOrderDifferentiator$4
	CONSUME 
		com.opengamma.analytics.math.differentiation.ScalarFieldFirstOrderDifferentiator$4 : 1;
	PRODUCE 
		com.opengamma.analytics.math.differentiation.ScalarFieldFirstOrderDifferentiator$4 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator
	CONSUME 
		com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator : 1;
	PRODUCE 
		com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator$1
	CONSUME 
		com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator$1 : 1;
	PRODUCE 
		com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator$1 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator$2
	CONSUME 
		com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator$2 : 1;
	PRODUCE 
		com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator$2 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator$3
	CONSUME 
		com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator$3 : 1;
	PRODUCE 
		com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator$3 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator$4
	CONSUME 
		com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator$4 : 1;
	PRODUCE 
		com.opengamma.analytics.math.differentiation.ScalarFirstOrderDifferentiator$4 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator
	CONSUME 
		com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator : 1;
	PRODUCE 
		com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator$1
	CONSUME 
		com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator$1 : 1;
	PRODUCE 
		com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator$1 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator$2
	CONSUME 
		com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator$2 : 1;
	PRODUCE 
		com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator$2 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator$3
	CONSUME 
		com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator$3 : 1;
	PRODUCE 
		com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator$3 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator$4
	CONSUME 
		com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator$4 : 1;
	PRODUCE 
		com.opengamma.analytics.math.differentiation.VectorFieldFirstOrderDifferentiator$4 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator
	CONSUME 
		com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator : 1;
	PRODUCE 
		com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator$1
	CONSUME 
		com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator$1 : 1;
	PRODUCE 
		com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator$1 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator$2
	CONSUME 
		com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator$2 : 1;
	PRODUCE 
		com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator$2 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator$3
	CONSUME 
		com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator$3 : 1;
	PRODUCE 
		com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator$3 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator$4
	CONSUME 
		com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator$4 : 1;
	PRODUCE 
		com.opengamma.analytics.math.differentiation.VectorFieldSecondOrderDifferentiator$4 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.fft.JTransformsWrapper
	CONSUME 
		com.opengamma.analytics.math.fft.JTransformsWrapper : 1;
	PRODUCE 
		com.opengamma.analytics.math.fft.JTransformsWrapper : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.ConcatenatedVectorFunction
	CONSUME 
		com.opengamma.analytics.math.function.ConcatenatedVectorFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.ConcatenatedVectorFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.DoubleFunction1D
	CONSUME 
		com.opengamma.analytics.math.function.DoubleFunction1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.DoubleFunction1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.DoubleFunction1D$1
	CONSUME 
		com.opengamma.analytics.math.function.DoubleFunction1D$1 : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.DoubleFunction1D$1 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.DoubleFunction1D$10
	CONSUME 
		com.opengamma.analytics.math.function.DoubleFunction1D$10 : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.DoubleFunction1D$10 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.DoubleFunction1D$11
	CONSUME 
		com.opengamma.analytics.math.function.DoubleFunction1D$11 : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.DoubleFunction1D$11 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.DoubleFunction1D$12
	CONSUME 
		com.opengamma.analytics.math.function.DoubleFunction1D$12 : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.DoubleFunction1D$12 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.DoubleFunction1D$2
	CONSUME 
		com.opengamma.analytics.math.function.DoubleFunction1D$2 : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.DoubleFunction1D$2 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.DoubleFunction1D$3
	CONSUME 
		com.opengamma.analytics.math.function.DoubleFunction1D$3 : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.DoubleFunction1D$3 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.DoubleFunction1D$4
	CONSUME 
		com.opengamma.analytics.math.function.DoubleFunction1D$4 : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.DoubleFunction1D$4 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.DoubleFunction1D$5
	CONSUME 
		com.opengamma.analytics.math.function.DoubleFunction1D$5 : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.DoubleFunction1D$5 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.DoubleFunction1D$6
	CONSUME 
		com.opengamma.analytics.math.function.DoubleFunction1D$6 : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.DoubleFunction1D$6 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.DoubleFunction1D$7
	CONSUME 
		com.opengamma.analytics.math.function.DoubleFunction1D$7 : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.DoubleFunction1D$7 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.DoubleFunction1D$8
	CONSUME 
		com.opengamma.analytics.math.function.DoubleFunction1D$8 : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.DoubleFunction1D$8 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.DoubleFunction1D$9
	CONSUME 
		com.opengamma.analytics.math.function.DoubleFunction1D$9 : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.DoubleFunction1D$9 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.DoubleFunction1D[]
	CONSUME 
		com.opengamma.analytics.math.function.DoubleFunction1D[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.DoubleFunction1D[] : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.DoublesVectorFunctionProvider
	CONSUME 
		com.opengamma.analytics.math.function.DoublesVectorFunctionProvider : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.DoublesVectorFunctionProvider : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.Function
	CONSUME 
		com.opengamma.analytics.math.function.Function : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.Function : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.Function1D
	CONSUME 
		com.opengamma.analytics.math.function.Function1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.Function1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.Function2D
	CONSUME 
		com.opengamma.analytics.math.function.Function2D : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.Function2D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.FunctionND
	CONSUME 
		com.opengamma.analytics.math.function.FunctionND : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.FunctionND : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.InterpolatedCurveVectorFunction
	CONSUME 
		com.opengamma.analytics.math.function.InterpolatedCurveVectorFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.InterpolatedCurveVectorFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.InterpolatedVectorFunctionProvider
	CONSUME 
		com.opengamma.analytics.math.function.InterpolatedVectorFunctionProvider : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.InterpolatedVectorFunctionProvider : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.ParameterizedCurve
	CONSUME 
		com.opengamma.analytics.math.function.ParameterizedCurve : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.ParameterizedCurve : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.ParameterizedCurve$1
	CONSUME 
		com.opengamma.analytics.math.function.ParameterizedCurve$1 : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.ParameterizedCurve$1 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.ParameterizedCurveVectorFunction
	CONSUME 
		com.opengamma.analytics.math.function.ParameterizedCurveVectorFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.ParameterizedCurveVectorFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.ParameterizedCurveVectorFunctionProvider
	CONSUME 
		com.opengamma.analytics.math.function.ParameterizedCurveVectorFunctionProvider : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.ParameterizedCurveVectorFunctionProvider : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.ParameterizedFunction
	CONSUME 
		com.opengamma.analytics.math.function.ParameterizedFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.ParameterizedFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.ParameterizedFunction$1
	CONSUME 
		com.opengamma.analytics.math.function.ParameterizedFunction$1 : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.ParameterizedFunction$1 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.ParameterizedFunction$2
	CONSUME 
		com.opengamma.analytics.math.function.ParameterizedFunction$2 : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.ParameterizedFunction$2 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.ParameterizedSurface
	CONSUME 
		com.opengamma.analytics.math.function.ParameterizedSurface : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.ParameterizedSurface : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.ParameterizedSurface$1
	CONSUME 
		com.opengamma.analytics.math.function.ParameterizedSurface$1 : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.ParameterizedSurface$1 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D
	CONSUME 
		com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.PiecewisePolynomialFunction1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.PiecewisePolynomialFunction2D
	CONSUME 
		com.opengamma.analytics.math.function.PiecewisePolynomialFunction2D : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.PiecewisePolynomialFunction2D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.PiecewisePolynomialWithSensitivityFunction1D
	CONSUME 
		com.opengamma.analytics.math.function.PiecewisePolynomialWithSensitivityFunction1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.PiecewisePolynomialWithSensitivityFunction1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.RealPolynomialFunction1D
	CONSUME 
		com.opengamma.analytics.math.function.RealPolynomialFunction1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.RealPolynomialFunction1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.VectorFunction
	CONSUME 
		com.opengamma.analytics.math.function.VectorFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.VectorFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.VectorFunctionProvider
	CONSUME 
		com.opengamma.analytics.math.function.VectorFunctionProvider : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.VectorFunctionProvider : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.VectorFunction[]
	CONSUME 
		com.opengamma.analytics.math.function.VectorFunction[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.VectorFunction[] : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.special.ChebyshevPolynomialOfFirstKindFunction
	CONSUME 
		com.opengamma.analytics.math.function.special.ChebyshevPolynomialOfFirstKindFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.special.ChebyshevPolynomialOfFirstKindFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.special.DiracDeltaFunction
	CONSUME 
		com.opengamma.analytics.math.function.special.DiracDeltaFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.special.DiracDeltaFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.special.DoubleRampFunction
	CONSUME 
		com.opengamma.analytics.math.function.special.DoubleRampFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.special.DoubleRampFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.special.GammaFunction
	CONSUME 
		com.opengamma.analytics.math.function.special.GammaFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.special.GammaFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.special.HeavisideFunction
	CONSUME 
		com.opengamma.analytics.math.function.special.HeavisideFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.special.HeavisideFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.special.HermitePolynomialFunction
	CONSUME 
		com.opengamma.analytics.math.function.special.HermitePolynomialFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.special.HermitePolynomialFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.special.HermitePolynomialFunction$1
	CONSUME 
		com.opengamma.analytics.math.function.special.HermitePolynomialFunction$1 : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.special.HermitePolynomialFunction$1 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.special.IncompleteBetaFunction
	CONSUME 
		com.opengamma.analytics.math.function.special.IncompleteBetaFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.special.IncompleteBetaFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.special.IncompleteGammaFunction
	CONSUME 
		com.opengamma.analytics.math.function.special.IncompleteGammaFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.special.IncompleteGammaFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.special.InverseIncompleteBetaFunction
	CONSUME 
		com.opengamma.analytics.math.function.special.InverseIncompleteBetaFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.special.InverseIncompleteBetaFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.special.InverseIncompleteGammaFunction
	CONSUME 
		com.opengamma.analytics.math.function.special.InverseIncompleteGammaFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.special.InverseIncompleteGammaFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.special.JacobiPolynomialFunction
	CONSUME 
		com.opengamma.analytics.math.function.special.JacobiPolynomialFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.special.JacobiPolynomialFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.special.KroneckerDeltaFunction
	CONSUME 
		com.opengamma.analytics.math.function.special.KroneckerDeltaFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.special.KroneckerDeltaFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.special.LaguerrePolynomialFunction
	CONSUME 
		com.opengamma.analytics.math.function.special.LaguerrePolynomialFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.special.LaguerrePolynomialFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.special.LegendrePolynomialFunction
	CONSUME 
		com.opengamma.analytics.math.function.special.LegendrePolynomialFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.special.LegendrePolynomialFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.special.NaturalLogGammaFunction
	CONSUME 
		com.opengamma.analytics.math.function.special.NaturalLogGammaFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.special.NaturalLogGammaFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.special.OrthogonalPolynomialFunctionGenerator
	CONSUME 
		com.opengamma.analytics.math.function.special.OrthogonalPolynomialFunctionGenerator : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.special.OrthogonalPolynomialFunctionGenerator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.special.OrthonormalHermitePolynomialFunction
	CONSUME 
		com.opengamma.analytics.math.function.special.OrthonormalHermitePolynomialFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.special.OrthonormalHermitePolynomialFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.function.special.TopHatFunction
	CONSUME 
		com.opengamma.analytics.math.function.special.TopHatFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.function.special.TopHatFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D
	CONSUME 
		com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.AdaptiveCompositeIntegrator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.integration.ExtendedTrapezoidIntegrator1D
	CONSUME 
		com.opengamma.analytics.math.integration.ExtendedTrapezoidIntegrator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.ExtendedTrapezoidIntegrator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.integration.GaussHermiteQuadratureIntegrator1D
	CONSUME 
		com.opengamma.analytics.math.integration.GaussHermiteQuadratureIntegrator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.GaussHermiteQuadratureIntegrator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.integration.GaussHermiteQuadratureIntegrator1D$1
	CONSUME 
		com.opengamma.analytics.math.integration.GaussHermiteQuadratureIntegrator1D$1 : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.GaussHermiteQuadratureIntegrator1D$1 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.integration.GaussHermiteWeightAndAbscissaFunction
	CONSUME 
		com.opengamma.analytics.math.integration.GaussHermiteWeightAndAbscissaFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.GaussHermiteWeightAndAbscissaFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.integration.GaussJacobiQuadratureIntegrator1D
	CONSUME 
		com.opengamma.analytics.math.integration.GaussJacobiQuadratureIntegrator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.GaussJacobiQuadratureIntegrator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.integration.GaussJacobiQuadratureIntegrator1D$1
	CONSUME 
		com.opengamma.analytics.math.integration.GaussJacobiQuadratureIntegrator1D$1 : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.GaussJacobiQuadratureIntegrator1D$1 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.integration.GaussJacobiWeightAndAbscissaFunction
	CONSUME 
		com.opengamma.analytics.math.integration.GaussJacobiWeightAndAbscissaFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.GaussJacobiWeightAndAbscissaFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.integration.GaussLaguerreQuadratureIntegrator1D
	CONSUME 
		com.opengamma.analytics.math.integration.GaussLaguerreQuadratureIntegrator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.GaussLaguerreQuadratureIntegrator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.integration.GaussLaguerreQuadratureIntegrator1D$1
	CONSUME 
		com.opengamma.analytics.math.integration.GaussLaguerreQuadratureIntegrator1D$1 : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.GaussLaguerreQuadratureIntegrator1D$1 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.integration.GaussLaguerreWeightAndAbscissaFunction
	CONSUME 
		com.opengamma.analytics.math.integration.GaussLaguerreWeightAndAbscissaFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.GaussLaguerreWeightAndAbscissaFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.integration.GaussLegendreQuadratureIntegrator1D
	CONSUME 
		com.opengamma.analytics.math.integration.GaussLegendreQuadratureIntegrator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.GaussLegendreQuadratureIntegrator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.integration.GaussLegendreQuadratureIntegrator1D$1
	CONSUME 
		com.opengamma.analytics.math.integration.GaussLegendreQuadratureIntegrator1D$1 : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.GaussLegendreQuadratureIntegrator1D$1 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.integration.GaussLegendreWeightAndAbscissaFunction
	CONSUME 
		com.opengamma.analytics.math.integration.GaussLegendreWeightAndAbscissaFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.GaussLegendreWeightAndAbscissaFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.integration.GaussianQuadratureData
	CONSUME 
		com.opengamma.analytics.math.integration.GaussianQuadratureData : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.GaussianQuadratureData : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.integration.GaussianQuadratureIntegrator1D
	CONSUME 
		com.opengamma.analytics.math.integration.GaussianQuadratureIntegrator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.GaussianQuadratureIntegrator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.integration.Integrator
	CONSUME 
		com.opengamma.analytics.math.integration.Integrator : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.Integrator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.integration.Integrator1D
	CONSUME 
		com.opengamma.analytics.math.integration.Integrator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.Integrator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.integration.Integrator2D
	CONSUME 
		com.opengamma.analytics.math.integration.Integrator2D : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.Integrator2D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.integration.IntegratorRepeated2D
	CONSUME 
		com.opengamma.analytics.math.integration.IntegratorRepeated2D : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.IntegratorRepeated2D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.integration.IntegratorRepeated2D$1
	CONSUME 
		com.opengamma.analytics.math.integration.IntegratorRepeated2D$1 : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.IntegratorRepeated2D$1 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.integration.IntegratorRepeated2D$1$1
	CONSUME 
		com.opengamma.analytics.math.integration.IntegratorRepeated2D$1$1 : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.IntegratorRepeated2D$1$1 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.integration.QuadratureWeightAndAbscissaFunction
	CONSUME 
		com.opengamma.analytics.math.integration.QuadratureWeightAndAbscissaFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.QuadratureWeightAndAbscissaFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.integration.RombergIntegrator1D
	CONSUME 
		com.opengamma.analytics.math.integration.RombergIntegrator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.RombergIntegrator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.integration.RungeKuttaIntegrator1D
	CONSUME 
		com.opengamma.analytics.math.integration.RungeKuttaIntegrator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.RungeKuttaIntegrator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.integration.SimpsonIntegrator1D
	CONSUME 
		com.opengamma.analytics.math.integration.SimpsonIntegrator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.integration.SimpsonIntegrator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D
	CONSUME 
		com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.BarycentricRationalFunctionInterpolator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.BasisFunctionAggregation
	CONSUME 
		com.opengamma.analytics.math.interpolation.BasisFunctionAggregation : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.BasisFunctionAggregation : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.BasisFunctionGenerator
	CONSUME 
		com.opengamma.analytics.math.interpolation.BasisFunctionGenerator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.BasisFunctionGenerator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$1
	CONSUME 
		com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$1 : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$1 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$2
	CONSUME 
		com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$2 : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$2 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$3
	CONSUME 
		com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$3 : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$3 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$4
	CONSUME 
		com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$4 : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.BasisFunctionGenerator$4 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.BasisFunctionKnots
	CONSUME 
		com.opengamma.analytics.math.interpolation.BasisFunctionKnots : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.BasisFunctionKnots : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.BasisFunctionKnots[]
	CONSUME 
		com.opengamma.analytics.math.interpolation.BasisFunctionKnots[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.BasisFunctionKnots[] : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.BicubicSplineInterpolator
	CONSUME 
		com.opengamma.analytics.math.interpolation.BicubicSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.BicubicSplineInterpolator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.BilinearSplineInterpolator
	CONSUME 
		com.opengamma.analytics.math.interpolation.BilinearSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.BilinearSplineInterpolator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.ClampedCubicSplineInterpolator1D
	CONSUME 
		com.opengamma.analytics.math.interpolation.ClampedCubicSplineInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.ClampedCubicSplineInterpolator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolator
	CONSUME 
		com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.CombinedInterpolatorExtrapolator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.ConstrainedCubicSplineInterpolator
	CONSUME 
		com.opengamma.analytics.math.interpolation.ConstrainedCubicSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.ConstrainedCubicSplineInterpolator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.ConstrainedCubicSplineInterpolator1D
	CONSUME 
		com.opengamma.analytics.math.interpolation.ConstrainedCubicSplineInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.ConstrainedCubicSplineInterpolator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.CubicSplineClampedSolver
	CONSUME 
		com.opengamma.analytics.math.interpolation.CubicSplineClampedSolver : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.CubicSplineClampedSolver : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.CubicSplineInterpolator
	CONSUME 
		com.opengamma.analytics.math.interpolation.CubicSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.CubicSplineInterpolator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.CubicSplineNakSolver
	CONSUME 
		com.opengamma.analytics.math.interpolation.CubicSplineNakSolver : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.CubicSplineNakSolver : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.CubicSplineNaturalSolver
	CONSUME 
		com.opengamma.analytics.math.interpolation.CubicSplineNaturalSolver : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.CubicSplineNaturalSolver : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.CubicSplineSolver
	CONSUME 
		com.opengamma.analytics.math.interpolation.CubicSplineSolver : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.CubicSplineSolver : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.DistanceCalculator
	CONSUME 
		com.opengamma.analytics.math.interpolation.DistanceCalculator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.DistanceCalculator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.DoubleQuadraticInterpolator1D
	CONSUME 
		com.opengamma.analytics.math.interpolation.DoubleQuadraticInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.DoubleQuadraticInterpolator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.ExponentialExtrapolator1D
	CONSUME 
		com.opengamma.analytics.math.interpolation.ExponentialExtrapolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.ExponentialExtrapolator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.ExponentialInterpolator1D
	CONSUME 
		com.opengamma.analytics.math.interpolation.ExponentialInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.ExponentialInterpolator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.FlatExtrapolator1D
	CONSUME 
		com.opengamma.analytics.math.interpolation.FlatExtrapolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.FlatExtrapolator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.GaussianRadialBasisFunction
	CONSUME 
		com.opengamma.analytics.math.interpolation.GaussianRadialBasisFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.GaussianRadialBasisFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.GridInterpolator2D
	CONSUME 
		com.opengamma.analytics.math.interpolation.GridInterpolator2D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.GridInterpolator2D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.HermiteCoefficientsProvider
	CONSUME 
		com.opengamma.analytics.math.interpolation.HermiteCoefficientsProvider : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.HermiteCoefficientsProvider : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.IntegratedLinearInterpolator
	CONSUME 
		com.opengamma.analytics.math.interpolation.IntegratedLinearInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.IntegratedLinearInterpolator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.Interpolator
	CONSUME 
		com.opengamma.analytics.math.interpolation.Interpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.Interpolator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.Interpolator1D
	CONSUME 
		com.opengamma.analytics.math.interpolation.Interpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.Interpolator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.Interpolator1D$1
	CONSUME 
		com.opengamma.analytics.math.interpolation.Interpolator1D$1 : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.Interpolator1D$1 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.Interpolator1D$2
	CONSUME 
		com.opengamma.analytics.math.interpolation.Interpolator1D$2 : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.Interpolator1D$2 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.Interpolator1D$3
	CONSUME 
		com.opengamma.analytics.math.interpolation.Interpolator1D$3 : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.Interpolator1D$3 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.Interpolator2D
	CONSUME 
		com.opengamma.analytics.math.interpolation.Interpolator2D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.Interpolator2D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.InterpolatorND
	CONSUME 
		com.opengamma.analytics.math.interpolation.InterpolatorND : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.InterpolatorND : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.InverseMultiquadraticRadialBasisFunction
	CONSUME 
		com.opengamma.analytics.math.interpolation.InverseMultiquadraticRadialBasisFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.InverseMultiquadraticRadialBasisFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.KrigingInterpolatorND
	CONSUME 
		com.opengamma.analytics.math.interpolation.KrigingInterpolatorND : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.KrigingInterpolatorND : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.LinearExtrapolator1D
	CONSUME 
		com.opengamma.analytics.math.interpolation.LinearExtrapolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.LinearExtrapolator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.LinearInterpolator
	CONSUME 
		com.opengamma.analytics.math.interpolation.LinearInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.LinearInterpolator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.LinearInterpolator1D
	CONSUME 
		com.opengamma.analytics.math.interpolation.LinearInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.LinearInterpolator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.LogClampedCubicSplineInterpolator1D
	CONSUME 
		com.opengamma.analytics.math.interpolation.LogClampedCubicSplineInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.LogClampedCubicSplineInterpolator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.LogCubicSplineNaturalSolver
	CONSUME 
		com.opengamma.analytics.math.interpolation.LogCubicSplineNaturalSolver : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.LogCubicSplineNaturalSolver : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.LogLinearExtrapolator1D
	CONSUME 
		com.opengamma.analytics.math.interpolation.LogLinearExtrapolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.LogLinearExtrapolator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.LogLinearInterpolator1D
	CONSUME 
		com.opengamma.analytics.math.interpolation.LogLinearInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.LogLinearInterpolator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D
	CONSUME 
		com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D$1
	CONSUME 
		com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D$1 : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.LogLinearWithSeasonalitiesInterpolator1D$1 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.LogNaturalCubicInterpolator1D
	CONSUME 
		com.opengamma.analytics.math.interpolation.LogNaturalCubicInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.LogNaturalCubicInterpolator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.LogNaturalCubicMonotonicityPreservingInterpolator1D
	CONSUME 
		com.opengamma.analytics.math.interpolation.LogNaturalCubicMonotonicityPreservingInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.LogNaturalCubicMonotonicityPreservingInterpolator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.LogNaturalSplineHelper
	CONSUME 
		com.opengamma.analytics.math.interpolation.LogNaturalSplineHelper : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.LogNaturalSplineHelper : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.LogNotAKnotCubicSplineInterpolator1D
	CONSUME 
		com.opengamma.analytics.math.interpolation.LogNotAKnotCubicSplineInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.LogNotAKnotCubicSplineInterpolator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.MeshgridInterpolator2D
	CONSUME 
		com.opengamma.analytics.math.interpolation.MeshgridInterpolator2D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.MeshgridInterpolator2D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator
	CONSUME 
		com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D
	CONSUME 
		com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.MonotoneConvexSplineInterpolator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.MonotonicIncreasingInterpolator1D
	CONSUME 
		com.opengamma.analytics.math.interpolation.MonotonicIncreasingInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.MonotonicIncreasingInterpolator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator
	CONSUME 
		com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator1D
	CONSUME 
		com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.MonotonicityPreservingCubicSplineInterpolator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.MonotonicityPreservingQuinticSplineInterpolator
	CONSUME 
		com.opengamma.analytics.math.interpolation.MonotonicityPreservingQuinticSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.MonotonicityPreservingQuinticSplineInterpolator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.MonotonicityPreservingQuinticSplineInterpolator1D
	CONSUME 
		com.opengamma.analytics.math.interpolation.MonotonicityPreservingQuinticSplineInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.MonotonicityPreservingQuinticSplineInterpolator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.MultiquadraticRadialBasisFunction
	CONSUME 
		com.opengamma.analytics.math.interpolation.MultiquadraticRadialBasisFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.MultiquadraticRadialBasisFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.NaturalCubicSplineInterpolator1D
	CONSUME 
		com.opengamma.analytics.math.interpolation.NaturalCubicSplineInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.NaturalCubicSplineInterpolator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.NaturalSplineInterpolator
	CONSUME 
		com.opengamma.analytics.math.interpolation.NaturalSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.NaturalSplineInterpolator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.NaturalSplineInterpolator1D
	CONSUME 
		com.opengamma.analytics.math.interpolation.NaturalSplineInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.NaturalSplineInterpolator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator
	CONSUME 
		com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator1D
	CONSUME 
		com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.NonnegativityPreservingCubicSplineInterpolator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.NonnegativityPreservingQuinticSplineInterpolator
	CONSUME 
		com.opengamma.analytics.math.interpolation.NonnegativityPreservingQuinticSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.NonnegativityPreservingQuinticSplineInterpolator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.NonnegativityPreservingQuinticSplineInterpolator1D
	CONSUME 
		com.opengamma.analytics.math.interpolation.NonnegativityPreservingQuinticSplineInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.NonnegativityPreservingQuinticSplineInterpolator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.NotAKnotCubicSplineInterpolator1D
	CONSUME 
		com.opengamma.analytics.math.interpolation.NotAKnotCubicSplineInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.NotAKnotCubicSplineInterpolator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D
	CONSUME 
		com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PCHIPInterpolator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.PCHIPYieldCurveInterpolator1D
	CONSUME 
		com.opengamma.analytics.math.interpolation.PCHIPYieldCurveInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PCHIPYieldCurveInterpolator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.PSplineFitter
	CONSUME 
		com.opengamma.analytics.math.interpolation.PSplineFitter : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PSplineFitter : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.PenaltyMatrixGenerator
	CONSUME 
		com.opengamma.analytics.math.interpolation.PenaltyMatrixGenerator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PenaltyMatrixGenerator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.PiecewiseCubicHermiteSplineInterpolator
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewiseCubicHermiteSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewiseCubicHermiteSplineInterpolator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.PiecewiseCubicHermiteSplineInterpolatorWithSensitivity
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewiseCubicHermiteSplineInterpolatorWithSensitivity : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewiseCubicHermiteSplineInterpolatorWithSensitivity : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.PiecewiseCubicHermiteSplineInterpolatorWithSensitivity$SlopeFinderResults
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewiseCubicHermiteSplineInterpolatorWithSensitivity$SlopeFinderResults : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewiseCubicHermiteSplineInterpolatorWithSensitivity$SlopeFinderResults : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator2D
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator2D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator2D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator[]
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialInterpolator[] : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult2D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult[]
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResult[] : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity
	CONSUME 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PiecewisePolynomialResultsWithSensitivity : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.PolynomialInterpolator1D
	CONSUME 
		com.opengamma.analytics.math.interpolation.PolynomialInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PolynomialInterpolator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitter
	CONSUME 
		com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitter : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitter : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult
	CONSUME 
		com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.PolynomialsLeastSquaresFitterResult : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator
	CONSUME 
		com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator1D
	CONSUME 
		com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.ProductPiecewisePolynomialInterpolator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D
	CONSUME 
		com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.ProductPolynomialExtrapolator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.QuadraticPolynomialLeftExtrapolator
	CONSUME 
		com.opengamma.analytics.math.interpolation.QuadraticPolynomialLeftExtrapolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.QuadraticPolynomialLeftExtrapolator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.QuadraticSplineInterpolator1D
	CONSUME 
		com.opengamma.analytics.math.interpolation.QuadraticSplineInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.QuadraticSplineInterpolator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.RadialBasisFunction
	CONSUME 
		com.opengamma.analytics.math.interpolation.RadialBasisFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.RadialBasisFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.RadialBasisFunctionInterpolatorND
	CONSUME 
		com.opengamma.analytics.math.interpolation.RadialBasisFunctionInterpolatorND : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.RadialBasisFunctionInterpolatorND : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.RationalFunctionInterpolator1D
	CONSUME 
		com.opengamma.analytics.math.interpolation.RationalFunctionInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.RationalFunctionInterpolator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.ReciprocalExtrapolator1D
	CONSUME 
		com.opengamma.analytics.math.interpolation.ReciprocalExtrapolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.ReciprocalExtrapolator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.ReciprocalExtrapolator1D$LinearlFunction1D
	CONSUME 
		com.opengamma.analytics.math.interpolation.ReciprocalExtrapolator1D$LinearlFunction1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.ReciprocalExtrapolator1D$LinearlFunction1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.SemiLocalCubicSplineInterpolator
	CONSUME 
		com.opengamma.analytics.math.interpolation.SemiLocalCubicSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.SemiLocalCubicSplineInterpolator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.SemiLocalCubicSplineInterpolator1D
	CONSUME 
		com.opengamma.analytics.math.interpolation.SemiLocalCubicSplineInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.SemiLocalCubicSplineInterpolator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.ShapePreservingCubicSplineInterpolator
	CONSUME 
		com.opengamma.analytics.math.interpolation.ShapePreservingCubicSplineInterpolator : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.ShapePreservingCubicSplineInterpolator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.ShapePreservingCubicSplineInterpolator1D
	CONSUME 
		com.opengamma.analytics.math.interpolation.ShapePreservingCubicSplineInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.ShapePreservingCubicSplineInterpolator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.ShepardInterpolatorND
	CONSUME 
		com.opengamma.analytics.math.interpolation.ShepardInterpolatorND : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.ShepardInterpolatorND : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.ShepardNormalizedRadialBasisFunction
	CONSUME 
		com.opengamma.analytics.math.interpolation.ShepardNormalizedRadialBasisFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.ShepardNormalizedRadialBasisFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.SquareLinearInterpolator1D
	CONSUME 
		com.opengamma.analytics.math.interpolation.SquareLinearInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.SquareLinearInterpolator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.StepInterpolator1D
	CONSUME 
		com.opengamma.analytics.math.interpolation.StepInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.StepInterpolator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.StepUpperInterpolator1D
	CONSUME 
		com.opengamma.analytics.math.interpolation.StepUpperInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.StepUpperInterpolator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.ThinPlateSplineRadialBasisFunction
	CONSUME 
		com.opengamma.analytics.math.interpolation.ThinPlateSplineRadialBasisFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.ThinPlateSplineRadialBasisFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.TimeSquareInterpolator1D
	CONSUME 
		com.opengamma.analytics.math.interpolation.TimeSquareInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.TimeSquareInterpolator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.TransformedInterpolator1D
	CONSUME 
		com.opengamma.analytics.math.interpolation.TransformedInterpolator1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.TransformedInterpolator1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.ArrayInterpolator1DDataBundle : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.InterpolationBoundedValues : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.data.Interpolator1DCubicSplineDataBundle
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DCubicSplineDataBundle : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DCubicSplineDataBundle : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundle : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundleBuilderFunction
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundleBuilderFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDataBundleBuilderFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DDoubleQuadraticDataBundle : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.data.Interpolator1DLogPiecewisePoynomialDataBundle
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DLogPiecewisePoynomialDataBundle : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DLogPiecewisePoynomialDataBundle : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.data.Interpolator1DMonotonicIncreasingDataBundle
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DMonotonicIncreasingDataBundle : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DMonotonicIncreasingDataBundle : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialDataBundle : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DPiecewisePoynomialWithExtraKnotsDataBundle : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator1DQuadraticSplineDataBundle : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.data.Interpolator2DDataBundle
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.Interpolator2DDataBundle : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.Interpolator2DDataBundle : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.InterpolatorNDDataBundle : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.data.KrigingInterpolatorDataBundle
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.KrigingInterpolatorDataBundle : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.KrigingInterpolatorDataBundle : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.data.KrigingInterpolatorDataBundle$1
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.KrigingInterpolatorDataBundle$1 : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.KrigingInterpolatorDataBundle$1 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.NavigableMapInterpolator1DDataBundle : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.interpolation.data.RadialBasisFunctionInterpolatorDataBundle
	CONSUME 
		com.opengamma.analytics.math.interpolation.data.RadialBasisFunctionInterpolatorDataBundle : 1;
	PRODUCE 
		com.opengamma.analytics.math.interpolation.data.RadialBasisFunctionInterpolatorDataBundle : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionCommons
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionCommons : 1;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionCommons : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionCommonsResult
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionCommonsResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionCommonsResult : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionOpenGamma
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionOpenGamma : 1;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionOpenGamma : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionOpenGammaResult
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionOpenGammaResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionOpenGammaResult : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionResult
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.CholeskyDecompositionResult : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.linearalgebra.Decomposition
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.Decomposition : 1;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.Decomposition : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.linearalgebra.DecompositionResult
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.DecompositionResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.DecompositionResult : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.linearalgebra.InverseTridiagonalMatrixCalculator
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.InverseTridiagonalMatrixCalculator : 1;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.InverseTridiagonalMatrixCalculator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.linearalgebra.LUDecompositionCommons
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.LUDecompositionCommons : 1;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.LUDecompositionCommons : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.linearalgebra.LUDecompositionCommonsResult
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.LUDecompositionCommonsResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.LUDecompositionCommonsResult : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.linearalgebra.LUDecompositionResult
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.LUDecompositionResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.LUDecompositionResult : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.linearalgebra.MatrixValidate
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.MatrixValidate : 1;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.MatrixValidate : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.linearalgebra.QRDecompositionCommons
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.QRDecompositionCommons : 1;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.QRDecompositionCommons : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.linearalgebra.QRDecompositionCommonsResult
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.QRDecompositionCommonsResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.QRDecompositionCommonsResult : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.linearalgebra.QRDecompositionResult
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.QRDecompositionResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.QRDecompositionResult : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.linearalgebra.SVDecompositionColt
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.SVDecompositionColt : 1;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.SVDecompositionColt : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.SVDecompositionColtResult : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.linearalgebra.SVDecompositionCommons
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.SVDecompositionCommons : 1;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.SVDecompositionCommons : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.linearalgebra.SVDecompositionCommonsResult
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.SVDecompositionCommonsResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.SVDecompositionCommonsResult : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.linearalgebra.SVDecompositionResult
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.SVDecompositionResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.SVDecompositionResult : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix : 1;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.TridiagonalMatrix : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.linearalgebra.TridiagonalSolver
	CONSUME 
		com.opengamma.analytics.math.linearalgebra.TridiagonalSolver : 1;
	PRODUCE 
		com.opengamma.analytics.math.linearalgebra.TridiagonalSolver : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.matrix.ColtMatrixAlgebra
	CONSUME 
		com.opengamma.analytics.math.matrix.ColtMatrixAlgebra : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.ColtMatrixAlgebra : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra
	CONSUME 
		com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.CommonsMatrixAlgebra : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.matrix.DoubleMatrix1D
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.matrix.DoubleMatrix1D[]
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix1D[] : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.matrix.DoubleMatrix2D
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.matrix.DoubleMatrix2D[]
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D[] : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.matrix.DoubleMatrix2D[][]
	CONSUME 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D[][] : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.DoubleMatrix2D[][] : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.matrix.IdentityMatrix
	CONSUME 
		com.opengamma.analytics.math.matrix.IdentityMatrix : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.IdentityMatrix : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.matrix.Matrix
	CONSUME 
		com.opengamma.analytics.math.matrix.Matrix : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.Matrix : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.matrix.MatrixAlgebra
	CONSUME 
		com.opengamma.analytics.math.matrix.MatrixAlgebra : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.MatrixAlgebra : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.matrix.OGMatrixAlgebra
	CONSUME 
		com.opengamma.analytics.math.matrix.OGMatrixAlgebra : 1;
	PRODUCE 
		com.opengamma.analytics.math.matrix.OGMatrixAlgebra : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.minimization.BrentMinimizer1D
	CONSUME 
		com.opengamma.analytics.math.minimization.BrentMinimizer1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.BrentMinimizer1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.minimization.BroydenFletcherGoldfarbShannoInverseHessianUpdate
	CONSUME 
		com.opengamma.analytics.math.minimization.BroydenFletcherGoldfarbShannoInverseHessianUpdate : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.BroydenFletcherGoldfarbShannoInverseHessianUpdate : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.minimization.ConjugateDirectionVectorMinimizer
	CONSUME 
		com.opengamma.analytics.math.minimization.ConjugateDirectionVectorMinimizer : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.ConjugateDirectionVectorMinimizer : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.minimization.ConjugateGradientVectorMinimizer
	CONSUME 
		com.opengamma.analytics.math.minimization.ConjugateGradientVectorMinimizer : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.ConjugateGradientVectorMinimizer : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.minimization.DavidonFletcherPowellInverseHessianUpdate
	CONSUME 
		com.opengamma.analytics.math.minimization.DavidonFletcherPowellInverseHessianUpdate : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.DavidonFletcherPowellInverseHessianUpdate : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.minimization.DoubleRangeLimitTransform
	CONSUME 
		com.opengamma.analytics.math.minimization.DoubleRangeLimitTransform : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.DoubleRangeLimitTransform : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.minimization.GoldenSectionMinimizer1D
	CONSUME 
		com.opengamma.analytics.math.minimization.GoldenSectionMinimizer1D : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.GoldenSectionMinimizer1D : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.minimization.LineSearch
	CONSUME 
		com.opengamma.analytics.math.minimization.LineSearch : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.LineSearch : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.minimization.LineSearch$LineSearchFunction
	CONSUME 
		com.opengamma.analytics.math.minimization.LineSearch$LineSearchFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.LineSearch$LineSearchFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.minimization.Minimizer
	CONSUME 
		com.opengamma.analytics.math.minimization.Minimizer : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.Minimizer : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.minimization.MinimizerWithGradient
	CONSUME 
		com.opengamma.analytics.math.minimization.MinimizerWithGradient : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.MinimizerWithGradient : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.minimization.MinimumBracketer
	CONSUME 
		com.opengamma.analytics.math.minimization.MinimumBracketer : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.MinimumBracketer : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.minimization.MultiDirectionalSimplexMinimizer
	CONSUME 
		com.opengamma.analytics.math.minimization.MultiDirectionalSimplexMinimizer : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.MultiDirectionalSimplexMinimizer : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.minimization.NelderMeadDownhillSimplexMinimizer
	CONSUME 
		com.opengamma.analytics.math.minimization.NelderMeadDownhillSimplexMinimizer : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.NelderMeadDownhillSimplexMinimizer : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.minimization.NonLinearParameterTransforms
	CONSUME 
		com.opengamma.analytics.math.minimization.NonLinearParameterTransforms : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.NonLinearParameterTransforms : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.minimization.NonLinearTransformFunction
	CONSUME 
		com.opengamma.analytics.math.minimization.NonLinearTransformFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.NonLinearTransformFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.minimization.NonLinearTransformFunction$1
	CONSUME 
		com.opengamma.analytics.math.minimization.NonLinearTransformFunction$1 : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.NonLinearTransformFunction$1 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.minimization.NonLinearTransformFunction$2
	CONSUME 
		com.opengamma.analytics.math.minimization.NonLinearTransformFunction$2 : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.NonLinearTransformFunction$2 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.minimization.NullTransform
	CONSUME 
		com.opengamma.analytics.math.minimization.NullTransform : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.NullTransform : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.minimization.ParabolicMinimumBracketer
	CONSUME 
		com.opengamma.analytics.math.minimization.ParabolicMinimumBracketer : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.ParabolicMinimumBracketer : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.minimization.ParameterLimitsTransform
	CONSUME 
		com.opengamma.analytics.math.minimization.ParameterLimitsTransform : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.ParameterLimitsTransform : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.minimization.ParameterLimitsTransform$LimitType
	CONSUME 
		com.opengamma.analytics.math.minimization.ParameterLimitsTransform$LimitType : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.ParameterLimitsTransform$LimitType : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.minimization.ParameterLimitsTransform$LimitType[]
	CONSUME 
		com.opengamma.analytics.math.minimization.ParameterLimitsTransform$LimitType[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.ParameterLimitsTransform$LimitType[] : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.minimization.ParameterLimitsTransform[]
	CONSUME 
		com.opengamma.analytics.math.minimization.ParameterLimitsTransform[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.ParameterLimitsTransform[] : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.minimization.PositiveOrZero
	CONSUME 
		com.opengamma.analytics.math.minimization.PositiveOrZero : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.PositiveOrZero : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.minimization.QuasiNewtonInverseHessianUpdate
	CONSUME 
		com.opengamma.analytics.math.minimization.QuasiNewtonInverseHessianUpdate : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.QuasiNewtonInverseHessianUpdate : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer
	CONSUME 
		com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle
	CONSUME 
		com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.QuasiNewtonVectorMinimizer$DataBundle : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.minimization.ScalarMinimizer
	CONSUME 
		com.opengamma.analytics.math.minimization.ScalarMinimizer : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.ScalarMinimizer : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.minimization.SingleRangeLimitTransform
	CONSUME 
		com.opengamma.analytics.math.minimization.SingleRangeLimitTransform : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.SingleRangeLimitTransform : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.minimization.SumToOne
	CONSUME 
		com.opengamma.analytics.math.minimization.SumToOne : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.SumToOne : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.minimization.UncoupledParameterTransforms
	CONSUME 
		com.opengamma.analytics.math.minimization.UncoupledParameterTransforms : 1;
	PRODUCE 
		com.opengamma.analytics.math.minimization.UncoupledParameterTransforms : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.number.ComplexNumber
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber : 1;
	PRODUCE 
		com.opengamma.analytics.math.number.ComplexNumber : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.number.ComplexNumber[]
	CONSUME 
		com.opengamma.analytics.math.number.ComplexNumber[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.number.ComplexNumber[] : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.performance.SimpleTimer
	CONSUME 
		com.opengamma.analytics.math.performance.SimpleTimer : 1;
	PRODUCE 
		com.opengamma.analytics.math.performance.SimpleTimer : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.random.NormalRandomNumberGenerator
	CONSUME 
		com.opengamma.analytics.math.random.NormalRandomNumberGenerator : 1;
	PRODUCE 
		com.opengamma.analytics.math.random.NormalRandomNumberGenerator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.random.RandomNumberGenerator
	CONSUME 
		com.opengamma.analytics.math.random.RandomNumberGenerator : 1;
	PRODUCE 
		com.opengamma.analytics.math.random.RandomNumberGenerator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.regression.GeneralizedLeastSquaresRegression
	CONSUME 
		com.opengamma.analytics.math.regression.GeneralizedLeastSquaresRegression : 1;
	PRODUCE 
		com.opengamma.analytics.math.regression.GeneralizedLeastSquaresRegression : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.regression.LeastSquaresRegression
	CONSUME 
		com.opengamma.analytics.math.regression.LeastSquaresRegression : 1;
	PRODUCE 
		com.opengamma.analytics.math.regression.LeastSquaresRegression : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.regression.LeastSquaresRegressionResult
	CONSUME 
		com.opengamma.analytics.math.regression.LeastSquaresRegressionResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.regression.LeastSquaresRegressionResult : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.regression.NamedVariableLeastSquaresRegressionResult
	CONSUME 
		com.opengamma.analytics.math.regression.NamedVariableLeastSquaresRegressionResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.regression.NamedVariableLeastSquaresRegressionResult : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.regression.OrdinaryLeastSquaresRegression
	CONSUME 
		com.opengamma.analytics.math.regression.OrdinaryLeastSquaresRegression : 1;
	PRODUCE 
		com.opengamma.analytics.math.regression.OrdinaryLeastSquaresRegression : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.regression.WeightedLeastSquaresRegression
	CONSUME 
		com.opengamma.analytics.math.regression.WeightedLeastSquaresRegression : 1;
	PRODUCE 
		com.opengamma.analytics.math.regression.WeightedLeastSquaresRegression : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.regression.WeightedLeastSquaresRegressionResult
	CONSUME 
		com.opengamma.analytics.math.regression.WeightedLeastSquaresRegressionResult : 1;
	PRODUCE 
		com.opengamma.analytics.math.regression.WeightedLeastSquaresRegressionResult : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.rootfinding.BisectionSingleRootFinder
	CONSUME 
		com.opengamma.analytics.math.rootfinding.BisectionSingleRootFinder : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.BisectionSingleRootFinder : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.rootfinding.BracketRoot
	CONSUME 
		com.opengamma.analytics.math.rootfinding.BracketRoot : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.BracketRoot : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.rootfinding.BrentSingleRootFinder
	CONSUME 
		com.opengamma.analytics.math.rootfinding.BrentSingleRootFinder : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.BrentSingleRootFinder : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.rootfinding.CubicRealRootFinder
	CONSUME 
		com.opengamma.analytics.math.rootfinding.CubicRealRootFinder : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.CubicRealRootFinder : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.rootfinding.CubicRootFinder
	CONSUME 
		com.opengamma.analytics.math.rootfinding.CubicRootFinder : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.CubicRootFinder : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.rootfinding.EigenvaluePolynomialRootFinder
	CONSUME 
		com.opengamma.analytics.math.rootfinding.EigenvaluePolynomialRootFinder : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.EigenvaluePolynomialRootFinder : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.rootfinding.LaguerrePolynomialRealRootFinder
	CONSUME 
		com.opengamma.analytics.math.rootfinding.LaguerrePolynomialRealRootFinder : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.LaguerrePolynomialRealRootFinder : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder
	CONSUME 
		com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.NewtonRaphsonSingleRootFinder : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.rootfinding.Polynomial1DRootFinder
	CONSUME 
		com.opengamma.analytics.math.rootfinding.Polynomial1DRootFinder : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.Polynomial1DRootFinder : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.rootfinding.QuadraticRealRootFinder
	CONSUME 
		com.opengamma.analytics.math.rootfinding.QuadraticRealRootFinder : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.QuadraticRealRootFinder : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.rootfinding.RealSingleRootFinder
	CONSUME 
		com.opengamma.analytics.math.rootfinding.RealSingleRootFinder : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.RealSingleRootFinder : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder
	CONSUME 
		com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.RidderSingleRootFinder : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.rootfinding.SingleRootFinder
	CONSUME 
		com.opengamma.analytics.math.rootfinding.SingleRootFinder : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.SingleRootFinder : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.rootfinding.VectorRootFinder
	CONSUME 
		com.opengamma.analytics.math.rootfinding.VectorRootFinder : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.VectorRootFinder : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.rootfinding.newton.BroydenMatrixUpdateFunction
	CONSUME 
		com.opengamma.analytics.math.rootfinding.newton.BroydenMatrixUpdateFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.newton.BroydenMatrixUpdateFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.rootfinding.newton.BroydenVectorRootFinder
	CONSUME 
		com.opengamma.analytics.math.rootfinding.newton.BroydenVectorRootFinder : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.newton.BroydenVectorRootFinder : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.rootfinding.newton.InverseJacobianDirectionFunction
	CONSUME 
		com.opengamma.analytics.math.rootfinding.newton.InverseJacobianDirectionFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.newton.InverseJacobianDirectionFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.rootfinding.newton.InverseJacobianEstimateInitializationFunction
	CONSUME 
		com.opengamma.analytics.math.rootfinding.newton.InverseJacobianEstimateInitializationFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.newton.InverseJacobianEstimateInitializationFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.rootfinding.newton.JacobianDirectionFunction
	CONSUME 
		com.opengamma.analytics.math.rootfinding.newton.JacobianDirectionFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.newton.JacobianDirectionFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.rootfinding.newton.JacobianEstimateInitializationFunction
	CONSUME 
		com.opengamma.analytics.math.rootfinding.newton.JacobianEstimateInitializationFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.newton.JacobianEstimateInitializationFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.rootfinding.newton.NewtonDefaultUpdateFunction
	CONSUME 
		com.opengamma.analytics.math.rootfinding.newton.NewtonDefaultUpdateFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.newton.NewtonDefaultUpdateFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.rootfinding.newton.NewtonDefaultVectorRootFinder
	CONSUME 
		com.opengamma.analytics.math.rootfinding.newton.NewtonDefaultVectorRootFinder : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.newton.NewtonDefaultVectorRootFinder : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.rootfinding.newton.NewtonRootFinderDirectionFunction
	CONSUME 
		com.opengamma.analytics.math.rootfinding.newton.NewtonRootFinderDirectionFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.newton.NewtonRootFinderDirectionFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.rootfinding.newton.NewtonRootFinderMatrixInitializationFunction
	CONSUME 
		com.opengamma.analytics.math.rootfinding.newton.NewtonRootFinderMatrixInitializationFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.newton.NewtonRootFinderMatrixInitializationFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder
	CONSUME 
		com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder$DataBundle
	CONSUME 
		com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder$DataBundle : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.newton.NewtonVectorRootFinder$DataBundle : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.rootfinding.newton.ShermanMorrisonMatrixUpdateFunction
	CONSUME 
		com.opengamma.analytics.math.rootfinding.newton.ShermanMorrisonMatrixUpdateFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.newton.ShermanMorrisonMatrixUpdateFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.rootfinding.newton.ShermanMorrisonVectorRootFinder
	CONSUME 
		com.opengamma.analytics.math.rootfinding.newton.ShermanMorrisonVectorRootFinder : 1;
	PRODUCE 
		com.opengamma.analytics.math.rootfinding.newton.ShermanMorrisonVectorRootFinder : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.ConfidenceInterval
	CONSUME 
		com.opengamma.analytics.math.statistics.ConfidenceInterval : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.ConfidenceInterval : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.descriptive.DiscreteQuantileMethod
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.DiscreteQuantileMethod : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.DiscreteQuantileMethod : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.descriptive.ExcelInterpolationQuantileMethod
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.ExcelInterpolationQuantileMethod : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.ExcelInterpolationQuantileMethod : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.descriptive.GeometricMeanCalculator
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.GeometricMeanCalculator : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.GeometricMeanCalculator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.descriptive.IndexAboveQuantileMethod
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.IndexAboveQuantileMethod : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.IndexAboveQuantileMethod : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.descriptive.InterpolationQuantileMethod
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.InterpolationQuantileMethod : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.InterpolationQuantileMethod : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.descriptive.LognormalFisherKurtosisFromVolatilityCalculator
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.LognormalFisherKurtosisFromVolatilityCalculator : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.LognormalFisherKurtosisFromVolatilityCalculator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.descriptive.LognormalPearsonKurtosisFromVolatilityCalculator
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.LognormalPearsonKurtosisFromVolatilityCalculator : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.LognormalPearsonKurtosisFromVolatilityCalculator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.descriptive.LognormalSkewnessFromVolatilityCalculator
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.LognormalSkewnessFromVolatilityCalculator : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.LognormalSkewnessFromVolatilityCalculator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.descriptive.MeanCalculator
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.MeanCalculator : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.MeanCalculator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.descriptive.MedianCalculator
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.MedianCalculator : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.MedianCalculator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.descriptive.MidwayInterpolationQuantileMethod
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.MidwayInterpolationQuantileMethod : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.MidwayInterpolationQuantileMethod : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.descriptive.ModeCalculator
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.ModeCalculator : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.ModeCalculator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.descriptive.NearestIndexQuantileMethod
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.NearestIndexQuantileMethod : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.NearestIndexQuantileMethod : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.descriptive.PartialMomentCalculator
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.PartialMomentCalculator : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.PartialMomentCalculator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.descriptive.PearsonFirstSkewnessCoefficientCalculator
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.PearsonFirstSkewnessCoefficientCalculator : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.PearsonFirstSkewnessCoefficientCalculator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.descriptive.PearsonSecondSkewnessCoefficientCalculator
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.PearsonSecondSkewnessCoefficientCalculator : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.PearsonSecondSkewnessCoefficientCalculator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.descriptive.PercentileCalculator
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.PercentileCalculator : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.PercentileCalculator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.descriptive.PopulationStandardDeviationCalculator
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.PopulationStandardDeviationCalculator : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.PopulationStandardDeviationCalculator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.descriptive.PopulationVarianceCalculator
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.PopulationVarianceCalculator : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.PopulationVarianceCalculator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.descriptive.QuantileCalculationMethod
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.QuantileCalculationMethod : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.QuantileCalculationMethod : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.descriptive.QuartileSkewnessCalculator
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.QuartileSkewnessCalculator : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.QuartileSkewnessCalculator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.descriptive.SampleCentralMomentCalculator
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.SampleCentralMomentCalculator : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.SampleCentralMomentCalculator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.descriptive.SampleCovarianceCalculator
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.SampleCovarianceCalculator : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.SampleCovarianceCalculator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.descriptive.SampleFisherKurtosisCalculator
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.SampleFisherKurtosisCalculator : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.SampleFisherKurtosisCalculator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.descriptive.SampleInterpolationQuantileMethod
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.SampleInterpolationQuantileMethod : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.SampleInterpolationQuantileMethod : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.descriptive.SampleMomentCalculator
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.SampleMomentCalculator : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.SampleMomentCalculator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.descriptive.SampleNormalizedCentralMomentCalculator
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.SampleNormalizedCentralMomentCalculator : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.SampleNormalizedCentralMomentCalculator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.descriptive.SamplePearsonKurtosisCalculator
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.SamplePearsonKurtosisCalculator : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.SamplePearsonKurtosisCalculator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.descriptive.SamplePlusOneInterpolationQuantileMethod
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.SamplePlusOneInterpolationQuantileMethod : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.SamplePlusOneInterpolationQuantileMethod : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.descriptive.SampleSkewnessCalculator
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.SampleSkewnessCalculator : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.SampleSkewnessCalculator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.descriptive.SampleStandardDeviationCalculator
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.SampleStandardDeviationCalculator : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.SampleStandardDeviationCalculator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.descriptive.SampleVarianceCalculator
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.SampleVarianceCalculator : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.SampleVarianceCalculator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.descriptive.SemiStandardDeviationCalculator
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.SemiStandardDeviationCalculator : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.SemiStandardDeviationCalculator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.descriptive.robust.InterquartileRangeCalculator
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.robust.InterquartileRangeCalculator : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.robust.InterquartileRangeCalculator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.descriptive.robust.SampleMedianAbsoluteDeviationCalculator
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.robust.SampleMedianAbsoluteDeviationCalculator : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.robust.SampleMedianAbsoluteDeviationCalculator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.descriptive.robust.TrimmedMeanCalculator
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.robust.TrimmedMeanCalculator : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.robust.TrimmedMeanCalculator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.descriptive.robust.WinsorizedMeanCalculator
	CONSUME 
		com.opengamma.analytics.math.statistics.descriptive.robust.WinsorizedMeanCalculator : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.descriptive.robust.WinsorizedMeanCalculator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.distribution.BivariateNormalDistribution
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.BivariateNormalDistribution : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.BivariateNormalDistribution : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.distribution.ChiSquareDistribution
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.ChiSquareDistribution : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.ChiSquareDistribution : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.distribution.GammaDistribution
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.GammaDistribution : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.GammaDistribution : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.GeneralizedExtremeValueDistribution : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.distribution.GeneralizedParetoDistribution
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.GeneralizedParetoDistribution : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.GeneralizedParetoDistribution : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.distribution.LaplaceDistribution
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.LaplaceDistribution : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.LaplaceDistribution : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.distribution.NonCentralChiSquaredDistribution
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.NonCentralChiSquaredDistribution : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.NonCentralChiSquaredDistribution : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.distribution.NormalDistribution
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.NormalDistribution : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.NormalDistribution : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.ProbabilityDistribution : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.distribution.StudentTDistribution
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.StudentTDistribution : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.StudentTDistribution : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.distribution.StudentTOneTailedCriticalValueCalculator
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.StudentTOneTailedCriticalValueCalculator : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.StudentTOneTailedCriticalValueCalculator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.distribution.StudentTTwoTailedCriticalValueCalculator
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.StudentTTwoTailedCriticalValueCalculator : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.StudentTTwoTailedCriticalValueCalculator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.distribution.fnlib.D1MACH
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.fnlib.D1MACH : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.fnlib.D1MACH : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.distribution.fnlib.DCSEVL
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.fnlib.DCSEVL : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.fnlib.DCSEVL : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.distribution.fnlib.DERF
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.fnlib.DERF : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.fnlib.DERF : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.distribution.fnlib.DERFC
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.fnlib.DERFC : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.fnlib.DERFC : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.distribution.fnlib.INITDS
	CONSUME 
		com.opengamma.analytics.math.statistics.distribution.fnlib.INITDS : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.distribution.fnlib.INITDS : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.estimation.ChiSquareDistributionMomentEstimator
	CONSUME 
		com.opengamma.analytics.math.statistics.estimation.ChiSquareDistributionMomentEstimator : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.estimation.ChiSquareDistributionMomentEstimator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.estimation.DistributionParameterEstimator
	CONSUME 
		com.opengamma.analytics.math.statistics.estimation.DistributionParameterEstimator : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.estimation.DistributionParameterEstimator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.estimation.GammaDistributionMomentEstimator
	CONSUME 
		com.opengamma.analytics.math.statistics.estimation.GammaDistributionMomentEstimator : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.estimation.GammaDistributionMomentEstimator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.estimation.GeneralizedParetoDistributionMomentEstimator
	CONSUME 
		com.opengamma.analytics.math.statistics.estimation.GeneralizedParetoDistributionMomentEstimator : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.estimation.GeneralizedParetoDistributionMomentEstimator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.estimation.GeneralizedParetoDistributionMomentEstimator$1
	CONSUME 
		com.opengamma.analytics.math.statistics.estimation.GeneralizedParetoDistributionMomentEstimator$1 : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.estimation.GeneralizedParetoDistributionMomentEstimator$1 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.estimation.LaplaceDistributionMaximumLikelihoodEstimator
	CONSUME 
		com.opengamma.analytics.math.statistics.estimation.LaplaceDistributionMaximumLikelihoodEstimator : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.estimation.LaplaceDistributionMaximumLikelihoodEstimator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.estimation.NormalDistributionMaximumLikelihoodEstimator
	CONSUME 
		com.opengamma.analytics.math.statistics.estimation.NormalDistributionMaximumLikelihoodEstimator : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.estimation.NormalDistributionMaximumLikelihoodEstimator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.estimation.NormalDistributionMomentEstimator
	CONSUME 
		com.opengamma.analytics.math.statistics.estimation.NormalDistributionMomentEstimator : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.estimation.NormalDistributionMomentEstimator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.estimation.StudentTDistributionMaximumLikelihoodEstimator
	CONSUME 
		com.opengamma.analytics.math.statistics.estimation.StudentTDistributionMaximumLikelihoodEstimator : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.estimation.StudentTDistributionMaximumLikelihoodEstimator : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.estimation.StudentTDistributionMaximumLikelihoodEstimator$1
	CONSUME 
		com.opengamma.analytics.math.statistics.estimation.StudentTDistributionMaximumLikelihoodEstimator$1 : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.estimation.StudentTDistributionMaximumLikelihoodEstimator$1 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.leastsquare.GeneralizedLeastSquare
	CONSUME 
		com.opengamma.analytics.math.statistics.leastsquare.GeneralizedLeastSquare : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.leastsquare.GeneralizedLeastSquare : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.leastsquare.GeneralizedLeastSquareResults
	CONSUME 
		com.opengamma.analytics.math.statistics.leastsquare.GeneralizedLeastSquareResults : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.leastsquare.GeneralizedLeastSquareResults : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResults
	CONSUME 
		com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResults : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResults : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform
	CONSUME 
		com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.leastsquare.LeastSquareResultsWithTransform : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.leastsquare.LeastSquareWithPenaltyResults
	CONSUME 
		com.opengamma.analytics.math.statistics.leastsquare.LeastSquareWithPenaltyResults : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.leastsquare.LeastSquareWithPenaltyResults : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare
	CONSUME 
		com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare$1
	CONSUME 
		com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare$1 : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare$1 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare$2
	CONSUME 
		com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare$2 : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare$2 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare$3
	CONSUME 
		com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare$3 : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare$3 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare$4
	CONSUME 
		com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare$4 : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquare$4 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquareWithPenalty
	CONSUME 
		com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquareWithPenalty : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquareWithPenalty : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquareWithPenalty$1
	CONSUME 
		com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquareWithPenalty$1 : 1;
	PRODUCE 
		com.opengamma.analytics.math.statistics.leastsquare.NonLinearLeastSquareWithPenalty$1 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.surface.ConstantDoublesSurface
	CONSUME 
		com.opengamma.analytics.math.surface.ConstantDoublesSurface : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.ConstantDoublesSurface : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.surface.ConstantSurfaceAdditiveShiftFunction
	CONSUME 
		com.opengamma.analytics.math.surface.ConstantSurfaceAdditiveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.ConstantSurfaceAdditiveShiftFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.surface.ConstantSurfaceMultiplicativeShiftFunction
	CONSUME 
		com.opengamma.analytics.math.surface.ConstantSurfaceMultiplicativeShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.ConstantSurfaceMultiplicativeShiftFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.surface.DoublesSurface
	CONSUME 
		com.opengamma.analytics.math.surface.DoublesSurface : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.DoublesSurface : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.surface.FunctionalDoublesSurface
	CONSUME 
		com.opengamma.analytics.math.surface.FunctionalDoublesSurface : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.FunctionalDoublesSurface : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.surface.FunctionalSurface
	CONSUME 
		com.opengamma.analytics.math.surface.FunctionalSurface : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.FunctionalSurface : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.surface.FunctionalSurfaceAdditiveShiftFunction
	CONSUME 
		com.opengamma.analytics.math.surface.FunctionalSurfaceAdditiveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.FunctionalSurfaceAdditiveShiftFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.surface.FunctionalSurfaceAdditiveShiftFunction$ShiftedFunction
	CONSUME 
		com.opengamma.analytics.math.surface.FunctionalSurfaceAdditiveShiftFunction$ShiftedFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.FunctionalSurfaceAdditiveShiftFunction$ShiftedFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction
	CONSUME 
		com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction$ShiftedFunction
	CONSUME 
		com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction$ShiftedFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.FunctionalSurfaceMultiplicativeShiftFunction$ShiftedFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.surface.InterpolatedDoublesSurface
	CONSUME 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedDoublesSurface : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface
	CONSUME 
		com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedFromCurvesDoublesSurface : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction
	CONSUME 
		com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedFromCurvesSurfaceAdditiveShiftFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction
	CONSUME 
		com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedSurfaceAdditiveShiftFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.surface.InterpolatedSurfaceMultiplicativeShiftFunction
	CONSUME 
		com.opengamma.analytics.math.surface.InterpolatedSurfaceMultiplicativeShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.InterpolatedSurfaceMultiplicativeShiftFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.surface.NodalDoublesSurface
	CONSUME 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalDoublesSurface : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.surface.NodalObjectsSurface
	CONSUME 
		com.opengamma.analytics.math.surface.NodalObjectsSurface : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalObjectsSurface : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.surface.NodalSurfaceAdditiveShiftFunction
	CONSUME 
		com.opengamma.analytics.math.surface.NodalSurfaceAdditiveShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalSurfaceAdditiveShiftFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.surface.NodalSurfaceMultiplicativeShiftFunction
	CONSUME 
		com.opengamma.analytics.math.surface.NodalSurfaceMultiplicativeShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.NodalSurfaceMultiplicativeShiftFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.surface.ObjectsSurface
	CONSUME 
		com.opengamma.analytics.math.surface.ObjectsSurface : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.ObjectsSurface : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.surface.Surface
	CONSUME 
		com.opengamma.analytics.math.surface.Surface : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.surface.SurfaceShiftFunction
	CONSUME 
		com.opengamma.analytics.math.surface.SurfaceShiftFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.SurfaceShiftFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.surface.SurfaceShiftFunctionFactory
	CONSUME 
		com.opengamma.analytics.math.surface.SurfaceShiftFunctionFactory : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.SurfaceShiftFunctionFactory : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.surface.SurfaceSliceFunction
	CONSUME 
		com.opengamma.analytics.math.surface.SurfaceSliceFunction : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.SurfaceSliceFunction : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.surface.Surface[]
	CONSUME 
		com.opengamma.analytics.math.surface.Surface[] : 1;
	PRODUCE 
		com.opengamma.analytics.math.surface.Surface[] : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper$1
	CONSUME 
		com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper$1 : 1;
	PRODUCE 
		com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper$1 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper$2
	CONSUME 
		com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper$2 : 1;
	PRODUCE 
		com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper$2 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper$3
	CONSUME 
		com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper$3 : 1;
	PRODUCE 
		com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper$3 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper$4
	CONSUME 
		com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper$4 : 1;
	PRODUCE 
		com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper$4 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper$5
	CONSUME 
		com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper$5 : 1;
	PRODUCE 
		com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper$5 : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.utilities.Diff
	CONSUME 
		com.opengamma.analytics.math.utilities.Diff : 1;
	PRODUCE 
		com.opengamma.analytics.math.utilities.Diff : 2;
TRANSITION sypet_clone_com.opengamma.analytics.math.utilities.Epsilon
	CONSUME 
		com.opengamma.analytics.math.utilities.Epsilon : 1;
	PRODUCE 
		com.opengamma.analytics.math.utilities.Epsilon : 2;
TRANSITION sypet_clone_com.opengamma.util.time.Tenor[]
	CONSUME 
		com.opengamma.util.time.Tenor[] : 1;
	PRODUCE 
		com.opengamma.util.time.Tenor[] : 2;
TRANSITION sypet_clone_com.opengamma.util.tuple.DoublesPair
	CONSUME 
		com.opengamma.util.tuple.DoublesPair : 1;
	PRODUCE 
		com.opengamma.util.tuple.DoublesPair : 2;
TRANSITION sypet_clone_com.opengamma.util.tuple.DoublesPair[]
	CONSUME 
		com.opengamma.util.tuple.DoublesPair[] : 1;
	PRODUCE 
		com.opengamma.util.tuple.DoublesPair[] : 2;
TRANSITION sypet_clone_com.opengamma.util.tuple.Pair
	CONSUME 
		com.opengamma.util.tuple.Pair : 1;
	PRODUCE 
		com.opengamma.util.tuple.Pair : 2;
TRANSITION sypet_clone_com.opengamma.util.tuple.Pair[]
	CONSUME 
		com.opengamma.util.tuple.Pair[] : 1;
	PRODUCE 
		com.opengamma.util.tuple.Pair[] : 2;
TRANSITION sypet_clone_com.opengamma.util.tuple.Triple
	CONSUME 
		com.opengamma.util.tuple.Triple : 1;
	PRODUCE 
		com.opengamma.util.tuple.Triple : 2;
TRANSITION sypet_clone_double
	CONSUME 
		double : 1;
	PRODUCE 
		double : 2;
TRANSITION sypet_clone_double[]
	CONSUME 
		double[] : 1;
	PRODUCE 
		double[] : 2;
TRANSITION sypet_clone_double[][]
	CONSUME 
		double[][] : 1;
	PRODUCE 
		double[][] : 2;
TRANSITION sypet_clone_float
	CONSUME 
		float : 1;
	PRODUCE 
		float : 2;
TRANSITION sypet_clone_float[]
	CONSUME 
		float[] : 1;
	PRODUCE 
		float[] : 2;
TRANSITION sypet_clone_int
	CONSUME 
		int : 1;
	PRODUCE 
		int : 2;
TRANSITION sypet_clone_int[]
	CONSUME 
		int[] : 1;
	PRODUCE 
		int[] : 2;
TRANSITION sypet_clone_java.awt.Shape
	CONSUME 
		java.awt.Shape : 1;
	PRODUCE 
		java.awt.Shape : 2;
TRANSITION sypet_clone_java.awt.geom.Ellipse2D
	CONSUME 
		java.awt.geom.Ellipse2D : 1;
	PRODUCE 
		java.awt.geom.Ellipse2D : 2;
TRANSITION sypet_clone_java.awt.geom.Rectangle2D
	CONSUME 
		java.awt.geom.Rectangle2D : 1;
	PRODUCE 
		java.awt.geom.Rectangle2D : 2;
TRANSITION sypet_clone_java.io.ObjectInputStream
	CONSUME 
		java.io.ObjectInputStream : 1;
	PRODUCE 
		java.io.ObjectInputStream : 2;
TRANSITION sypet_clone_java.io.ObjectOutputStream
	CONSUME 
		java.io.ObjectOutputStream : 1;
	PRODUCE 
		java.io.ObjectOutputStream : 2;
TRANSITION sypet_clone_java.io.Reader
	CONSUME 
		java.io.Reader : 1;
	PRODUCE 
		java.io.Reader : 2;
TRANSITION sypet_clone_java.io.StringReader
	CONSUME 
		java.io.StringReader : 1;
	PRODUCE 
		java.io.StringReader : 2;
TRANSITION sypet_clone_java.lang.Boolean
	CONSUME 
		java.lang.Boolean : 1;
	PRODUCE 
		java.lang.Boolean : 2;
TRANSITION sypet_clone_java.lang.Class
	CONSUME 
		java.lang.Class : 1;
	PRODUCE 
		java.lang.Class : 2;
TRANSITION sypet_clone_java.lang.Comparable
	CONSUME 
		java.lang.Comparable : 1;
	PRODUCE 
		java.lang.Comparable : 2;
TRANSITION sypet_clone_java.lang.Comparable[]
	CONSUME 
		java.lang.Comparable[] : 1;
	PRODUCE 
		java.lang.Comparable[] : 2;
TRANSITION sypet_clone_java.lang.Double
	CONSUME 
		java.lang.Double : 1;
	PRODUCE 
		java.lang.Double : 2;
TRANSITION sypet_clone_java.lang.Double[]
	CONSUME 
		java.lang.Double[] : 1;
	PRODUCE 
		java.lang.Double[] : 2;
TRANSITION sypet_clone_java.lang.Double[][]
	CONSUME 
		java.lang.Double[][] : 1;
	PRODUCE 
		java.lang.Double[][] : 2;
TRANSITION sypet_clone_java.lang.Integer
	CONSUME 
		java.lang.Integer : 1;
	PRODUCE 
		java.lang.Integer : 2;
TRANSITION sypet_clone_java.lang.Object
	CONSUME 
		java.lang.Object : 1;
	PRODUCE 
		java.lang.Object : 2;
TRANSITION sypet_clone_java.lang.Object[]
	CONSUME 
		java.lang.Object[] : 1;
	PRODUCE 
		java.lang.Object[] : 2;
TRANSITION sypet_clone_java.lang.String
	CONSUME 
		java.lang.String : 1;
	PRODUCE 
		java.lang.String : 2;
TRANSITION sypet_clone_java.lang.StringBuffer
	CONSUME 
		java.lang.StringBuffer : 1;
	PRODUCE 
		java.lang.StringBuffer : 2;
TRANSITION sypet_clone_java.lang.String[]
	CONSUME 
		java.lang.String[] : 1;
	PRODUCE 
		java.lang.String[] : 2;
TRANSITION sypet_clone_java.lang.String[][]
	CONSUME 
		java.lang.String[][] : 1;
	PRODUCE 
		java.lang.String[][] : 2;
TRANSITION sypet_clone_java.lang.Throwable
	CONSUME 
		java.lang.Throwable : 1;
	PRODUCE 
		java.lang.Throwable : 2;
TRANSITION sypet_clone_java.math.BigDecimal
	CONSUME 
		java.math.BigDecimal : 1;
	PRODUCE 
		java.math.BigDecimal : 2;
TRANSITION sypet_clone_java.math.BigDecimal[]
	CONSUME 
		java.math.BigDecimal[] : 1;
	PRODUCE 
		java.math.BigDecimal[] : 2;
TRANSITION sypet_clone_java.math.BigDecimal[][]
	CONSUME 
		java.math.BigDecimal[][] : 1;
	PRODUCE 
		java.math.BigDecimal[][] : 2;
TRANSITION sypet_clone_java.text.FieldPosition
	CONSUME 
		java.text.FieldPosition : 1;
	PRODUCE 
		java.text.FieldPosition : 2;
TRANSITION sypet_clone_java.text.NumberFormat
	CONSUME 
		java.text.NumberFormat : 1;
	PRODUCE 
		java.text.NumberFormat : 2;
TRANSITION sypet_clone_java.text.ParsePosition
	CONSUME 
		java.text.ParsePosition : 1;
	PRODUCE 
		java.text.ParsePosition : 2;
TRANSITION sypet_clone_java.util.ArrayList
	CONSUME 
		java.util.ArrayList : 1;
	PRODUCE 
		java.util.ArrayList : 2;
TRANSITION sypet_clone_java.util.BitSet
	CONSUME 
		java.util.BitSet : 1;
	PRODUCE 
		java.util.BitSet : 2;
TRANSITION sypet_clone_java.util.Collection
	CONSUME 
		java.util.Collection : 1;
	PRODUCE 
		java.util.Collection : 2;
TRANSITION sypet_clone_java.util.LinkedHashMap
	CONSUME 
		java.util.LinkedHashMap : 1;
	PRODUCE 
		java.util.LinkedHashMap : 2;
TRANSITION sypet_clone_java.util.List
	CONSUME 
		java.util.List : 1;
	PRODUCE 
		java.util.List : 2;
TRANSITION sypet_clone_java.util.Locale
	CONSUME 
		java.util.Locale : 1;
	PRODUCE 
		java.util.Locale : 2;
TRANSITION sypet_clone_java.util.Locale[]
	CONSUME 
		java.util.Locale[] : 1;
	PRODUCE 
		java.util.Locale[] : 2;
TRANSITION sypet_clone_java.util.Map
	CONSUME 
		java.util.Map : 1;
	PRODUCE 
		java.util.Map : 2;
TRANSITION sypet_clone_java.util.NavigableMap
	CONSUME 
		java.util.NavigableMap : 1;
	PRODUCE 
		java.util.NavigableMap : 2;
TRANSITION sypet_clone_java.util.Set
	CONSUME 
		java.util.Set : 1;
	PRODUCE 
		java.util.Set : 2;
TRANSITION sypet_clone_long
	CONSUME 
		long : 1;
	PRODUCE 
		long : 2;
TRANSITION sypet_clone_long[]
	CONSUME 
		long[] : 1;
	PRODUCE 
		long[] : 2;
TRANSITION sypet_clone_org.apache.commons.math.Field
	CONSUME 
		org.apache.commons.math.Field : 1;
	PRODUCE 
		org.apache.commons.math.Field : 2;
TRANSITION sypet_clone_org.apache.commons.math.FieldElement
	CONSUME 
		org.apache.commons.math.FieldElement : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement : 2;
TRANSITION sypet_clone_org.apache.commons.math.FieldElement[]
	CONSUME 
		org.apache.commons.math.FieldElement[] : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement[] : 2;
TRANSITION sypet_clone_org.apache.commons.math.FieldElement[][]
	CONSUME 
		org.apache.commons.math.FieldElement[][] : 1;
	PRODUCE 
		org.apache.commons.math.FieldElement[][] : 2;
TRANSITION sypet_clone_org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction
	CONSUME 
		org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction : 1;
	PRODUCE 
		org.apache.commons.math.analysis.DifferentiableUnivariateRealFunction : 2;
TRANSITION sypet_clone_org.apache.commons.math.analysis.MultivariateRealFunction
	CONSUME 
		org.apache.commons.math.analysis.MultivariateRealFunction : 1;
	PRODUCE 
		org.apache.commons.math.analysis.MultivariateRealFunction : 2;
TRANSITION sypet_clone_org.apache.commons.math.analysis.UnivariateRealFunction
	CONSUME 
		org.apache.commons.math.analysis.UnivariateRealFunction : 1;
	PRODUCE 
		org.apache.commons.math.analysis.UnivariateRealFunction : 2;
TRANSITION sypet_clone_org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeForm
	CONSUME 
		org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeForm : 1;
	PRODUCE 
		org.apache.commons.math.analysis.polynomials.PolynomialFunctionLagrangeForm : 2;
TRANSITION sypet_clone_org.apache.commons.math.complex.Complex
	CONSUME 
		org.apache.commons.math.complex.Complex : 1;
	PRODUCE 
		org.apache.commons.math.complex.Complex : 2;
TRANSITION sypet_clone_org.apache.commons.math.distribution.TDistribution
	CONSUME 
		org.apache.commons.math.distribution.TDistribution : 1;
	PRODUCE 
		org.apache.commons.math.distribution.TDistribution : 2;
TRANSITION sypet_clone_org.apache.commons.math.exception.util.Localizable
	CONSUME 
		org.apache.commons.math.exception.util.Localizable : 1;
	PRODUCE 
		org.apache.commons.math.exception.util.Localizable : 2;
TRANSITION sypet_clone_org.apache.commons.math.fraction.BigFraction
	CONSUME 
		org.apache.commons.math.fraction.BigFraction : 1;
	PRODUCE 
		org.apache.commons.math.fraction.BigFraction : 2;
TRANSITION sypet_clone_org.apache.commons.math.fraction.Fraction
	CONSUME 
		org.apache.commons.math.fraction.Fraction : 1;
	PRODUCE 
		org.apache.commons.math.fraction.Fraction : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.AbstractFieldMatrix
	CONSUME 
		org.apache.commons.math.linear.AbstractFieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.AbstractFieldMatrix : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.AbstractFieldMatrix$1
	CONSUME 
		org.apache.commons.math.linear.AbstractFieldMatrix$1 : 1;
	PRODUCE 
		org.apache.commons.math.linear.AbstractFieldMatrix$1 : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.AbstractFieldMatrix$2
	CONSUME 
		org.apache.commons.math.linear.AbstractFieldMatrix$2 : 1;
	PRODUCE 
		org.apache.commons.math.linear.AbstractFieldMatrix$2 : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.AbstractFieldMatrix$3
	CONSUME 
		org.apache.commons.math.linear.AbstractFieldMatrix$3 : 1;
	PRODUCE 
		org.apache.commons.math.linear.AbstractFieldMatrix$3 : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.AbstractRealMatrix
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.AbstractRealMatrix : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.AbstractRealMatrix$1
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix$1 : 1;
	PRODUCE 
		org.apache.commons.math.linear.AbstractRealMatrix$1 : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.AbstractRealMatrix$2
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix$2 : 1;
	PRODUCE 
		org.apache.commons.math.linear.AbstractRealMatrix$2 : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.AbstractRealMatrix$3
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix$3 : 1;
	PRODUCE 
		org.apache.commons.math.linear.AbstractRealMatrix$3 : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.AbstractRealMatrix$4
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix$4 : 1;
	PRODUCE 
		org.apache.commons.math.linear.AbstractRealMatrix$4 : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.AbstractRealMatrix$5
	CONSUME 
		org.apache.commons.math.linear.AbstractRealMatrix$5 : 1;
	PRODUCE 
		org.apache.commons.math.linear.AbstractRealMatrix$5 : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.AbstractRealVector
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.AbstractRealVector : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.AbstractRealVector$1
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector$1 : 1;
	PRODUCE 
		org.apache.commons.math.linear.AbstractRealVector$1 : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.AbstractRealVector$EntryImpl
	CONSUME 
		org.apache.commons.math.linear.AbstractRealVector$EntryImpl : 1;
	PRODUCE 
		org.apache.commons.math.linear.AbstractRealVector$EntryImpl : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.AnyMatrix
	CONSUME 
		org.apache.commons.math.linear.AnyMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.AnyMatrix : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.Array2DRowFieldMatrix
	CONSUME 
		org.apache.commons.math.linear.Array2DRowFieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.Array2DRowFieldMatrix : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.Array2DRowRealMatrix
	CONSUME 
		org.apache.commons.math.linear.Array2DRowRealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.Array2DRowRealMatrix : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.ArrayFieldVector
	CONSUME 
		org.apache.commons.math.linear.ArrayFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.ArrayFieldVector : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.ArrayRealVector
	CONSUME 
		org.apache.commons.math.linear.ArrayRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.ArrayRealVector : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.BiDiagonalTransformer
	CONSUME 
		org.apache.commons.math.linear.BiDiagonalTransformer : 1;
	PRODUCE 
		org.apache.commons.math.linear.BiDiagonalTransformer : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.BigMatrix
	CONSUME 
		org.apache.commons.math.linear.BigMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrix : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.BigMatrixImpl
	CONSUME 
		org.apache.commons.math.linear.BigMatrixImpl : 1;
	PRODUCE 
		org.apache.commons.math.linear.BigMatrixImpl : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.BlockFieldMatrix
	CONSUME 
		org.apache.commons.math.linear.BlockFieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.BlockFieldMatrix : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.BlockRealMatrix
	CONSUME 
		org.apache.commons.math.linear.BlockRealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.BlockRealMatrix : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.CholeskyDecomposition
	CONSUME 
		org.apache.commons.math.linear.CholeskyDecomposition : 1;
	PRODUCE 
		org.apache.commons.math.linear.CholeskyDecomposition : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.CholeskyDecompositionImpl
	CONSUME 
		org.apache.commons.math.linear.CholeskyDecompositionImpl : 1;
	PRODUCE 
		org.apache.commons.math.linear.CholeskyDecompositionImpl : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.CholeskyDecompositionImpl$Solver
	CONSUME 
		org.apache.commons.math.linear.CholeskyDecompositionImpl$Solver : 1;
	PRODUCE 
		org.apache.commons.math.linear.CholeskyDecompositionImpl$Solver : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.DecompositionSolver
	CONSUME 
		org.apache.commons.math.linear.DecompositionSolver : 1;
	PRODUCE 
		org.apache.commons.math.linear.DecompositionSolver : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.DefaultFieldMatrixChangingVisitor
	CONSUME 
		org.apache.commons.math.linear.DefaultFieldMatrixChangingVisitor : 1;
	PRODUCE 
		org.apache.commons.math.linear.DefaultFieldMatrixChangingVisitor : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.DefaultFieldMatrixPreservingVisitor
	CONSUME 
		org.apache.commons.math.linear.DefaultFieldMatrixPreservingVisitor : 1;
	PRODUCE 
		org.apache.commons.math.linear.DefaultFieldMatrixPreservingVisitor : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.DefaultRealMatrixChangingVisitor
	CONSUME 
		org.apache.commons.math.linear.DefaultRealMatrixChangingVisitor : 1;
	PRODUCE 
		org.apache.commons.math.linear.DefaultRealMatrixChangingVisitor : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor
	CONSUME 
		org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor : 1;
	PRODUCE 
		org.apache.commons.math.linear.DefaultRealMatrixPreservingVisitor : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.EigenDecomposition
	CONSUME 
		org.apache.commons.math.linear.EigenDecomposition : 1;
	PRODUCE 
		org.apache.commons.math.linear.EigenDecomposition : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.EigenDecompositionImpl
	CONSUME 
		org.apache.commons.math.linear.EigenDecompositionImpl : 1;
	PRODUCE 
		org.apache.commons.math.linear.EigenDecompositionImpl : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.EigenDecompositionImpl$Solver
	CONSUME 
		org.apache.commons.math.linear.EigenDecompositionImpl$Solver : 1;
	PRODUCE 
		org.apache.commons.math.linear.EigenDecompositionImpl$Solver : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.FieldDecompositionSolver
	CONSUME 
		org.apache.commons.math.linear.FieldDecompositionSolver : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldDecompositionSolver : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.FieldLUDecomposition
	CONSUME 
		org.apache.commons.math.linear.FieldLUDecomposition : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldLUDecomposition : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.FieldLUDecompositionImpl
	CONSUME 
		org.apache.commons.math.linear.FieldLUDecompositionImpl : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldLUDecompositionImpl : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver
	CONSUME 
		org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldLUDecompositionImpl$Solver : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.FieldMatrix
	CONSUME 
		org.apache.commons.math.linear.FieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrix : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.FieldMatrixChangingVisitor
	CONSUME 
		org.apache.commons.math.linear.FieldMatrixChangingVisitor : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrixChangingVisitor : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.FieldMatrixPreservingVisitor
	CONSUME 
		org.apache.commons.math.linear.FieldMatrixPreservingVisitor : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldMatrixPreservingVisitor : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.FieldVector
	CONSUME 
		org.apache.commons.math.linear.FieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.FieldVector : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.InvalidMatrixException
	CONSUME 
		org.apache.commons.math.linear.InvalidMatrixException : 1;
	PRODUCE 
		org.apache.commons.math.linear.InvalidMatrixException : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.LUDecomposition
	CONSUME 
		org.apache.commons.math.linear.LUDecomposition : 1;
	PRODUCE 
		org.apache.commons.math.linear.LUDecomposition : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.LUDecompositionImpl
	CONSUME 
		org.apache.commons.math.linear.LUDecompositionImpl : 1;
	PRODUCE 
		org.apache.commons.math.linear.LUDecompositionImpl : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.LUDecompositionImpl$Solver
	CONSUME 
		org.apache.commons.math.linear.LUDecompositionImpl$Solver : 1;
	PRODUCE 
		org.apache.commons.math.linear.LUDecompositionImpl$Solver : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.MatrixIndexException
	CONSUME 
		org.apache.commons.math.linear.MatrixIndexException : 1;
	PRODUCE 
		org.apache.commons.math.linear.MatrixIndexException : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.MatrixUtils$BigFractionMatrixConverter
	CONSUME 
		org.apache.commons.math.linear.MatrixUtils$BigFractionMatrixConverter : 1;
	PRODUCE 
		org.apache.commons.math.linear.MatrixUtils$BigFractionMatrixConverter : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.MatrixUtils$FractionMatrixConverter
	CONSUME 
		org.apache.commons.math.linear.MatrixUtils$FractionMatrixConverter : 1;
	PRODUCE 
		org.apache.commons.math.linear.MatrixUtils$FractionMatrixConverter : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.MatrixVisitorException
	CONSUME 
		org.apache.commons.math.linear.MatrixVisitorException : 1;
	PRODUCE 
		org.apache.commons.math.linear.MatrixVisitorException : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.NonSquareMatrixException
	CONSUME 
		org.apache.commons.math.linear.NonSquareMatrixException : 1;
	PRODUCE 
		org.apache.commons.math.linear.NonSquareMatrixException : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.NotPositiveDefiniteMatrixException
	CONSUME 
		org.apache.commons.math.linear.NotPositiveDefiniteMatrixException : 1;
	PRODUCE 
		org.apache.commons.math.linear.NotPositiveDefiniteMatrixException : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.NotSymmetricMatrixException
	CONSUME 
		org.apache.commons.math.linear.NotSymmetricMatrixException : 1;
	PRODUCE 
		org.apache.commons.math.linear.NotSymmetricMatrixException : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.OpenMapRealMatrix
	CONSUME 
		org.apache.commons.math.linear.OpenMapRealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.OpenMapRealMatrix : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.OpenMapRealVector
	CONSUME 
		org.apache.commons.math.linear.OpenMapRealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.OpenMapRealVector : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry
	CONSUME 
		org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry : 1;
	PRODUCE 
		org.apache.commons.math.linear.OpenMapRealVector$OpenMapEntry : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.QRDecomposition
	CONSUME 
		org.apache.commons.math.linear.QRDecomposition : 1;
	PRODUCE 
		org.apache.commons.math.linear.QRDecomposition : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.QRDecompositionImpl
	CONSUME 
		org.apache.commons.math.linear.QRDecompositionImpl : 1;
	PRODUCE 
		org.apache.commons.math.linear.QRDecompositionImpl : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.QRDecompositionImpl$Solver
	CONSUME 
		org.apache.commons.math.linear.QRDecompositionImpl$Solver : 1;
	PRODUCE 
		org.apache.commons.math.linear.QRDecompositionImpl$Solver : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.RealMatrix
	CONSUME 
		org.apache.commons.math.linear.RealMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrix : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.RealMatrixChangingVisitor
	CONSUME 
		org.apache.commons.math.linear.RealMatrixChangingVisitor : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrixChangingVisitor : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.RealMatrixImpl
	CONSUME 
		org.apache.commons.math.linear.RealMatrixImpl : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrixImpl : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.RealMatrixPreservingVisitor
	CONSUME 
		org.apache.commons.math.linear.RealMatrixPreservingVisitor : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealMatrixPreservingVisitor : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.RealVector
	CONSUME 
		org.apache.commons.math.linear.RealVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.RealVector$Entry
	CONSUME 
		org.apache.commons.math.linear.RealVector$Entry : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVector$Entry : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.RealVectorFormat
	CONSUME 
		org.apache.commons.math.linear.RealVectorFormat : 1;
	PRODUCE 
		org.apache.commons.math.linear.RealVectorFormat : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.SingularMatrixException
	CONSUME 
		org.apache.commons.math.linear.SingularMatrixException : 1;
	PRODUCE 
		org.apache.commons.math.linear.SingularMatrixException : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.SingularValueDecomposition
	CONSUME 
		org.apache.commons.math.linear.SingularValueDecomposition : 1;
	PRODUCE 
		org.apache.commons.math.linear.SingularValueDecomposition : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.SingularValueDecompositionImpl
	CONSUME 
		org.apache.commons.math.linear.SingularValueDecompositionImpl : 1;
	PRODUCE 
		org.apache.commons.math.linear.SingularValueDecompositionImpl : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.SingularValueDecompositionImpl$1
	CONSUME 
		org.apache.commons.math.linear.SingularValueDecompositionImpl$1 : 1;
	PRODUCE 
		org.apache.commons.math.linear.SingularValueDecompositionImpl$1 : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver
	CONSUME 
		org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver : 1;
	PRODUCE 
		org.apache.commons.math.linear.SingularValueDecompositionImpl$Solver : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.SparseFieldMatrix
	CONSUME 
		org.apache.commons.math.linear.SparseFieldMatrix : 1;
	PRODUCE 
		org.apache.commons.math.linear.SparseFieldMatrix : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.SparseFieldVector
	CONSUME 
		org.apache.commons.math.linear.SparseFieldVector : 1;
	PRODUCE 
		org.apache.commons.math.linear.SparseFieldVector : 2;
TRANSITION sypet_clone_org.apache.commons.math.linear.TriDiagonalTransformer
	CONSUME 
		org.apache.commons.math.linear.TriDiagonalTransformer : 1;
	PRODUCE 
		org.apache.commons.math.linear.TriDiagonalTransformer : 2;
TRANSITION sypet_clone_org.apache.commons.math.optimization.RealPointValuePair
	CONSUME 
		org.apache.commons.math.optimization.RealPointValuePair : 1;
	PRODUCE 
		org.apache.commons.math.optimization.RealPointValuePair : 2;
TRANSITION sypet_clone_org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression
	CONSUME 
		org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression : 1;
	PRODUCE 
		org.apache.commons.math.stat.regression.AbstractMultipleLinearRegression : 2;
TRANSITION sypet_clone_org.apache.commons.math.stat.regression.GLSMultipleLinearRegression
	CONSUME 
		org.apache.commons.math.stat.regression.GLSMultipleLinearRegression : 1;
	PRODUCE 
		org.apache.commons.math.stat.regression.GLSMultipleLinearRegression : 2;
TRANSITION sypet_clone_org.apache.commons.math.stat.regression.MultipleLinearRegression
	CONSUME 
		org.apache.commons.math.stat.regression.MultipleLinearRegression : 1;
	PRODUCE 
		org.apache.commons.math.stat.regression.MultipleLinearRegression : 2;
TRANSITION sypet_clone_org.apache.commons.math.stat.regression.OLSMultipleLinearRegression
	CONSUME 
		org.apache.commons.math.stat.regression.OLSMultipleLinearRegression : 1;
	PRODUCE 
		org.apache.commons.math.stat.regression.OLSMultipleLinearRegression : 2;
TRANSITION sypet_clone_org.apache.commons.math.stat.regression.SimpleRegression
	CONSUME 
		org.apache.commons.math.stat.regression.SimpleRegression : 1;
	PRODUCE 
		org.apache.commons.math.stat.regression.SimpleRegression : 2;
TRANSITION sypet_clone_org.joda.beans.BeanBuilder
	CONSUME 
		org.joda.beans.BeanBuilder : 1;
	PRODUCE 
		org.joda.beans.BeanBuilder : 2;
TRANSITION sypet_clone_org.joda.beans.MetaBean
	CONSUME 
		org.joda.beans.MetaBean : 1;
	PRODUCE 
		org.joda.beans.MetaBean : 2;
TRANSITION sypet_clone_org.joda.beans.MetaProperty
	CONSUME 
		org.joda.beans.MetaProperty : 1;
	PRODUCE 
		org.joda.beans.MetaProperty : 2;
TRANSITION sypet_clone_org.joda.beans.Property
	CONSUME 
		org.joda.beans.Property : 1;
	PRODUCE 
		org.joda.beans.Property : 2;
TRANSITION sypet_clone_org.joda.time.DateTime
	CONSUME 
		org.joda.time.DateTime : 1;
	PRODUCE 
		org.joda.time.DateTime : 2;
TRANSITION sypet_clone_org.joda.time.DateTime$Property
	CONSUME 
		org.joda.time.DateTime$Property : 1;
	PRODUCE 
		org.joda.time.DateTime$Property : 2;
TRANSITION sypet_clone_org.joda.time.LocalDate
	CONSUME 
		org.joda.time.LocalDate : 1;
	PRODUCE 
		org.joda.time.LocalDate : 2;
TRANSITION sypet_clone_org.joda.time.ReadableInstant
	CONSUME 
		org.joda.time.ReadableInstant : 1;
	PRODUCE 
		org.joda.time.ReadableInstant : 2;
TRANSITION sypet_clone_org.joda.time.ReadablePartial
	CONSUME 
		org.joda.time.ReadablePartial : 1;
	PRODUCE 
		org.joda.time.ReadablePartial : 2;
TRANSITION sypet_clone_org.joda.time.base.AbstractDateTime
	CONSUME 
		org.joda.time.base.AbstractDateTime : 1;
	PRODUCE 
		org.joda.time.base.AbstractDateTime : 2;
TRANSITION sypet_clone_org.joda.time.field.AbstractReadableInstantFieldProperty
	CONSUME 
		org.joda.time.field.AbstractReadableInstantFieldProperty : 1;
	PRODUCE 
		org.joda.time.field.AbstractReadableInstantFieldProperty : 2;
TRANSITION sypet_clone_org.jsoup.nodes.Document
	CONSUME 
		org.jsoup.nodes.Document : 1;
	PRODUCE 
		org.jsoup.nodes.Document : 2;
TRANSITION sypet_clone_org.jsoup.nodes.Element
	CONSUME 
		org.jsoup.nodes.Element : 1;
	PRODUCE 
		org.jsoup.nodes.Element : 2;
TRANSITION sypet_clone_org.w3c.dom.Document
	CONSUME 
		org.w3c.dom.Document : 1;
	PRODUCE 
		org.w3c.dom.Document : 2;
TRANSITION sypet_clone_org.w3c.dom.Element
	CONSUME 
		org.w3c.dom.Element : 1;
	PRODUCE 
		org.w3c.dom.Element : 2;
TRANSITION sypet_clone_org.w3c.dom.Node
	CONSUME 
		org.w3c.dom.Node : 1;
	PRODUCE 
		org.w3c.dom.Node : 2;
TRANSITION sypet_clone_void
	CONSUME 
		void : 1;
	PRODUCE 
		void : 2;
